;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit THETA : 
  module THETA : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip theta_in : UInt<64>[5][5], theta_out : UInt<64>[5][5]}
    
    io.theta_out[0][0] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[0][1] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[0][2] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[0][3] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[0][4] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[1][0] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[1][1] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[1][2] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[1][3] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[1][4] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[2][0] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[2][1] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[2][2] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[2][3] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[2][4] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[3][0] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[3][1] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[3][2] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[3][3] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[3][4] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[4][0] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[4][1] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[4][2] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[4][3] <= UInt<1>("h00") @[THETA.scala 15:30]
    io.theta_out[4][4] <= UInt<1>("h00") @[THETA.scala 15:30]
    wire c : UInt<64>[5] @[THETA.scala 18:15]
    node _T = xor(io.theta_in[0][0], io.theta_in[0][1]) @[THETA.scala 22:30]
    node _T_1 = xor(_T, io.theta_in[0][2]) @[THETA.scala 22:48]
    node _T_2 = xor(_T_1, io.theta_in[0][3]) @[THETA.scala 22:66]
    node _T_3 = xor(_T_2, io.theta_in[0][4]) @[THETA.scala 22:84]
    c[0] <= _T_3 @[THETA.scala 22:10]
    node _T_4 = xor(io.theta_in[1][0], io.theta_in[1][1]) @[THETA.scala 22:30]
    node _T_5 = xor(_T_4, io.theta_in[1][2]) @[THETA.scala 22:48]
    node _T_6 = xor(_T_5, io.theta_in[1][3]) @[THETA.scala 22:66]
    node _T_7 = xor(_T_6, io.theta_in[1][4]) @[THETA.scala 22:84]
    c[1] <= _T_7 @[THETA.scala 22:10]
    node _T_8 = xor(io.theta_in[2][0], io.theta_in[2][1]) @[THETA.scala 22:30]
    node _T_9 = xor(_T_8, io.theta_in[2][2]) @[THETA.scala 22:48]
    node _T_10 = xor(_T_9, io.theta_in[2][3]) @[THETA.scala 22:66]
    node _T_11 = xor(_T_10, io.theta_in[2][4]) @[THETA.scala 22:84]
    c[2] <= _T_11 @[THETA.scala 22:10]
    node _T_12 = xor(io.theta_in[3][0], io.theta_in[3][1]) @[THETA.scala 22:30]
    node _T_13 = xor(_T_12, io.theta_in[3][2]) @[THETA.scala 22:48]
    node _T_14 = xor(_T_13, io.theta_in[3][3]) @[THETA.scala 22:66]
    node _T_15 = xor(_T_14, io.theta_in[3][4]) @[THETA.scala 22:84]
    c[3] <= _T_15 @[THETA.scala 22:10]
    node _T_16 = xor(io.theta_in[4][0], io.theta_in[4][1]) @[THETA.scala 22:30]
    node _T_17 = xor(_T_16, io.theta_in[4][2]) @[THETA.scala 22:48]
    node _T_18 = xor(_T_17, io.theta_in[4][3]) @[THETA.scala 22:66]
    node _T_19 = xor(_T_18, io.theta_in[4][4]) @[THETA.scala 22:84]
    c[4] <= _T_19 @[THETA.scala 22:10]
    io.theta_out[0][0] <= c[0] @[THETA.scala 34:26]
    io.theta_out[0][1] <= c[0] @[THETA.scala 34:26]
    io.theta_out[0][2] <= c[0] @[THETA.scala 34:26]
    io.theta_out[0][3] <= c[0] @[THETA.scala 34:26]
    io.theta_out[0][4] <= c[0] @[THETA.scala 34:26]
    io.theta_out[1][0] <= c[1] @[THETA.scala 34:26]
    io.theta_out[1][1] <= c[1] @[THETA.scala 34:26]
    io.theta_out[1][2] <= c[1] @[THETA.scala 34:26]
    io.theta_out[1][3] <= c[1] @[THETA.scala 34:26]
    io.theta_out[1][4] <= c[1] @[THETA.scala 34:26]
    io.theta_out[2][0] <= c[2] @[THETA.scala 34:26]
    io.theta_out[2][1] <= c[2] @[THETA.scala 34:26]
    io.theta_out[2][2] <= c[2] @[THETA.scala 34:26]
    io.theta_out[2][3] <= c[2] @[THETA.scala 34:26]
    io.theta_out[2][4] <= c[2] @[THETA.scala 34:26]
    io.theta_out[3][0] <= c[3] @[THETA.scala 34:26]
    io.theta_out[3][1] <= c[3] @[THETA.scala 34:26]
    io.theta_out[3][2] <= c[3] @[THETA.scala 34:26]
    io.theta_out[3][3] <= c[3] @[THETA.scala 34:26]
    io.theta_out[3][4] <= c[3] @[THETA.scala 34:26]
    io.theta_out[4][0] <= c[4] @[THETA.scala 34:26]
    io.theta_out[4][1] <= c[4] @[THETA.scala 34:26]
    io.theta_out[4][2] <= c[4] @[THETA.scala 34:26]
    io.theta_out[4][3] <= c[4] @[THETA.scala 34:26]
    io.theta_out[4][4] <= c[4] @[THETA.scala 34:26]
    
