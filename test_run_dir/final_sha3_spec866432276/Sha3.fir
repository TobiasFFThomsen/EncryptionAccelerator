;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Sha3 : 
  module Buffer : 
    input clock : Clock
    input reset : Reset
    output io : {r_0 : UInt<64>, r_1 : UInt<64>, r_2 : UInt<64>, r_3 : UInt<64>, r_4 : UInt<64>, r_5 : UInt<64>, r_6 : UInt<64>, r_7 : UInt<64>, r_8 : UInt<64>, flip d_0 : UInt<64>, flip d_1 : UInt<64>, flip d_2 : UInt<64>, flip d_3 : UInt<64>, flip d_4 : UInt<64>, flip d_5 : UInt<64>, flip d_6 : UInt<64>, flip d_7 : UInt<64>, flip d_8 : UInt<64>, flip w_in : UInt<64>, w_out : UInt<64>, bufferReady : UInt<1>, testing_buffer_counter : UInt<64>, flip hashReady : UInt<1>, flip dataRead : UInt<1>, flip roundReady : UInt<1>, flip dataValid : UInt<1>}
    
    reg bufferReg_1 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 52:28]
    reg bufferReg_2 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 53:28]
    reg bufferReg_3 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 54:28]
    reg bufferReg_4 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 55:28]
    reg bufferReg_5 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 56:28]
    reg bufferReg_6 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 57:28]
    reg bufferReg_7 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 58:28]
    reg bufferReg_8 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 59:28]
    reg bufferReg_9 : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Buffer.scala 60:28]
    reg counterReg : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[Buffer.scala 61:28]
    reg stateReg : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Buffer.scala 65:32]
    io.w_out <= UInt<1>("h00") @[Buffer.scala 66:12]
    io.testing_buffer_counter <= counterReg @[Buffer.scala 67:29]
    node _T = eq(stateReg, UInt<1>("h00")) @[Buffer.scala 68:20]
    when _T : @[Buffer.scala 69:5]
      when io.dataValid : @[Buffer.scala 70:26]
        node _T_1 = eq(io.hashReady, UInt<1>("h00")) @[Buffer.scala 71:15]
        when _T_1 : @[Buffer.scala 71:31]
          node _T_2 = lt(counterReg, UInt<4>("h09")) @[Buffer.scala 72:27]
          when _T_2 : @[Buffer.scala 72:34]
            io.bufferReady <= UInt<1>("h00") @[Buffer.scala 73:28]
            bufferReg_1 <= io.w_in @[Buffer.scala 74:25]
            bufferReg_2 <= bufferReg_1 @[Buffer.scala 75:25]
            bufferReg_3 <= bufferReg_2 @[Buffer.scala 76:25]
            bufferReg_4 <= bufferReg_3 @[Buffer.scala 77:25]
            bufferReg_5 <= bufferReg_4 @[Buffer.scala 78:25]
            bufferReg_6 <= bufferReg_5 @[Buffer.scala 79:25]
            bufferReg_7 <= bufferReg_6 @[Buffer.scala 80:25]
            bufferReg_8 <= bufferReg_7 @[Buffer.scala 81:25]
            bufferReg_9 <= bufferReg_8 @[Buffer.scala 82:25]
            node _T_3 = add(counterReg, UInt<1>("h01")) @[Buffer.scala 83:38]
            node _T_4 = tail(_T_3, 1) @[Buffer.scala 83:38]
            counterReg <= _T_4 @[Buffer.scala 83:24]
            stateReg <= UInt<1>("h00") @[Buffer.scala 84:22]
            skip @[Buffer.scala 72:34]
          else : @[Buffer.scala 85:23]
            io.bufferReady <= UInt<1>("h01") @[Buffer.scala 86:28]
            bufferReg_1 <= bufferReg_1 @[Buffer.scala 87:25]
            bufferReg_2 <= bufferReg_2 @[Buffer.scala 88:25]
            bufferReg_3 <= bufferReg_3 @[Buffer.scala 89:25]
            bufferReg_4 <= bufferReg_4 @[Buffer.scala 90:25]
            bufferReg_5 <= bufferReg_5 @[Buffer.scala 91:25]
            bufferReg_6 <= bufferReg_6 @[Buffer.scala 92:25]
            bufferReg_7 <= bufferReg_7 @[Buffer.scala 93:25]
            bufferReg_8 <= bufferReg_8 @[Buffer.scala 94:25]
            bufferReg_9 <= bufferReg_9 @[Buffer.scala 95:25]
            when io.roundReady : @[Buffer.scala 96:33]
              stateReg <= UInt<1>("h00") @[Buffer.scala 97:24]
              counterReg <= UInt<1>("h00") @[Buffer.scala 98:26]
              skip @[Buffer.scala 96:33]
            else : @[Buffer.scala 99:25]
              stateReg <= UInt<1>("h00") @[Buffer.scala 100:24]
              counterReg <= counterReg @[Buffer.scala 101:26]
              skip @[Buffer.scala 99:25]
            skip @[Buffer.scala 85:23]
          skip @[Buffer.scala 71:31]
        else : @[Buffer.scala 104:21]
          io.bufferReady <= UInt<1>("h00") @[Buffer.scala 105:26]
          bufferReg_1 <= bufferReg_1 @[Buffer.scala 106:23]
          bufferReg_2 <= bufferReg_2 @[Buffer.scala 107:23]
          bufferReg_3 <= bufferReg_3 @[Buffer.scala 108:23]
          bufferReg_4 <= bufferReg_4 @[Buffer.scala 109:23]
          bufferReg_5 <= bufferReg_5 @[Buffer.scala 110:23]
          bufferReg_6 <= bufferReg_6 @[Buffer.scala 111:23]
          bufferReg_7 <= bufferReg_7 @[Buffer.scala 112:23]
          bufferReg_8 <= bufferReg_8 @[Buffer.scala 113:23]
          bufferReg_9 <= bufferReg_9 @[Buffer.scala 114:23]
          counterReg <= UInt<1>("h00") @[Buffer.scala 115:22]
          stateReg <= UInt<1>("h01") @[Buffer.scala 116:20]
          skip @[Buffer.scala 104:21]
        skip @[Buffer.scala 70:26]
      else : @[Buffer.scala 118:18]
        io.bufferReady <= UInt<1>("h00") @[Buffer.scala 119:24]
        bufferReg_1 <= bufferReg_1 @[Buffer.scala 120:21]
        bufferReg_2 <= bufferReg_2 @[Buffer.scala 121:21]
        bufferReg_3 <= bufferReg_3 @[Buffer.scala 122:21]
        bufferReg_4 <= bufferReg_4 @[Buffer.scala 123:21]
        bufferReg_5 <= bufferReg_5 @[Buffer.scala 124:21]
        bufferReg_6 <= bufferReg_6 @[Buffer.scala 125:21]
        bufferReg_7 <= bufferReg_7 @[Buffer.scala 126:21]
        bufferReg_8 <= bufferReg_8 @[Buffer.scala 127:21]
        bufferReg_9 <= bufferReg_9 @[Buffer.scala 128:21]
        counterReg <= counterReg @[Buffer.scala 129:20]
        stateReg <= UInt<1>("h00") @[Buffer.scala 130:18]
        skip @[Buffer.scala 118:18]
      skip @[Buffer.scala 69:5]
    else : @[Buffer.scala 133:5]
      node _T_5 = eq(stateReg, UInt<1>("h01")) @[Buffer.scala 132:25]
      when _T_5 : @[Buffer.scala 133:5]
        bufferReg_1 <= io.d_0 @[Buffer.scala 134:19]
        bufferReg_2 <= io.d_1 @[Buffer.scala 135:19]
        bufferReg_3 <= io.d_2 @[Buffer.scala 136:19]
        bufferReg_4 <= io.d_3 @[Buffer.scala 137:19]
        bufferReg_5 <= io.d_4 @[Buffer.scala 138:19]
        bufferReg_6 <= io.d_5 @[Buffer.scala 139:19]
        bufferReg_7 <= io.d_6 @[Buffer.scala 140:19]
        bufferReg_8 <= io.d_7 @[Buffer.scala 141:19]
        bufferReg_9 <= io.d_8 @[Buffer.scala 142:19]
        counterReg <= UInt<1>("h00") @[Buffer.scala 143:18]
        io.bufferReady <= UInt<1>("h00") @[Buffer.scala 144:22]
        node _T_6 = and(io.hashReady, io.dataRead) @[Buffer.scala 145:25]
        when _T_6 : @[Buffer.scala 145:40]
          io.bufferReady <= UInt<1>("h00") @[Buffer.scala 146:24]
          stateReg <= UInt<1>("h00") @[Buffer.scala 147:24]
          skip @[Buffer.scala 145:40]
        else : @[Buffer.scala 148:47]
          node _T_7 = eq(io.dataRead, UInt<1>("h00")) @[Buffer.scala 148:34]
          node _T_8 = and(io.hashReady, _T_7) @[Buffer.scala 148:31]
          when _T_8 : @[Buffer.scala 148:47]
            io.bufferReady <= UInt<1>("h00") @[Buffer.scala 149:24]
            stateReg <= UInt<1>("h01") @[Buffer.scala 150:24]
            skip @[Buffer.scala 148:47]
          else : @[Buffer.scala 151:18]
            io.bufferReady <= UInt<1>("h00") @[Buffer.scala 152:24]
            stateReg <= UInt<1>("h00") @[Buffer.scala 153:24]
            skip @[Buffer.scala 151:18]
        skip @[Buffer.scala 133:5]
      else : @[Buffer.scala 155:16]
        io.bufferReady <= UInt<1>("h00") @[Buffer.scala 156:22]
        skip @[Buffer.scala 155:16]
    io.r_0 <= bufferReg_1 @[Buffer.scala 159:10]
    io.r_1 <= bufferReg_2 @[Buffer.scala 160:10]
    io.r_2 <= bufferReg_3 @[Buffer.scala 161:10]
    io.r_3 <= bufferReg_4 @[Buffer.scala 162:10]
    io.r_4 <= bufferReg_5 @[Buffer.scala 163:10]
    io.r_5 <= bufferReg_6 @[Buffer.scala 164:10]
    io.r_6 <= bufferReg_7 @[Buffer.scala 165:10]
    io.r_7 <= bufferReg_8 @[Buffer.scala 166:10]
    io.r_8 <= bufferReg_9 @[Buffer.scala 167:10]
    
  module FSM : 
    input clock : Clock
    input reset : Reset
    output io : {hash_ready : UInt<1>, flip buffer_ready : UInt<1>, flip block_length : UInt<64>, counter_for_test : UInt<64>, global_counter_for_test : UInt<64>, select_for_xor : UInt<1>, flip block_length_valid : UInt<1>}
    
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[FSM.scala 18:37]
    reg localCountReg : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[FSM.scala 19:37]
    reg globalCountReg : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[FSM.scala 20:37]
    node _T = eq(stateReg, UInt<2>("h02")) @[FSM.scala 23:17]
    when _T : @[FSM.scala 23:27]
      io.hash_ready <= UInt<1>("h01") @[FSM.scala 24:19]
      skip @[FSM.scala 23:27]
    else : @[FSM.scala 25:14]
      io.hash_ready <= UInt<1>("h00") @[FSM.scala 26:19]
      skip @[FSM.scala 25:14]
    node _T_1 = eq(stateReg, UInt<2>("h00")) @[FSM.scala 29:17]
    when _T_1 : @[FSM.scala 29:26]
      when io.buffer_ready : @[FSM.scala 30:26]
        io.select_for_xor <= UInt<1>("h01") @[FSM.scala 31:25]
        skip @[FSM.scala 30:26]
      else : @[FSM.scala 33:5]
        io.select_for_xor <= UInt<1>("h00") @[FSM.scala 34:25]
        skip @[FSM.scala 33:5]
      skip @[FSM.scala 29:26]
    else : @[FSM.scala 37:3]
      io.select_for_xor <= UInt<1>("h00") @[FSM.scala 38:25]
      skip @[FSM.scala 37:3]
    io.counter_for_test <= localCountReg @[FSM.scala 48:23]
    io.global_counter_for_test <= globalCountReg @[FSM.scala 49:30]
    node _T_2 = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      when io.block_length_valid : @[FSM.scala 52:34]
        stateReg <= UInt<2>("h01") @[FSM.scala 53:18]
        localCountReg <= UInt<1>("h00") @[FSM.scala 54:23]
        when io.buffer_ready : @[FSM.scala 55:30]
          node _T_3 = lt(globalCountReg, io.block_length) @[FSM.scala 56:31]
          when _T_3 : @[FSM.scala 56:49]
            stateReg <= UInt<2>("h01") @[FSM.scala 57:22]
            node _T_4 = add(globalCountReg, UInt<1>("h01")) @[FSM.scala 58:45]
            node _T_5 = tail(_T_4, 1) @[FSM.scala 58:45]
            globalCountReg <= _T_5 @[FSM.scala 58:28]
            skip @[FSM.scala 56:49]
          else : @[FSM.scala 59:22]
            stateReg <= UInt<2>("h02") @[FSM.scala 60:22]
            globalCountReg <= UInt<1>("h00") @[FSM.scala 61:28]
            skip @[FSM.scala 59:22]
          skip @[FSM.scala 55:30]
        else : @[FSM.scala 63:20]
          globalCountReg <= globalCountReg @[FSM.scala 64:26]
          stateReg <= UInt<2>("h00") @[FSM.scala 65:20]
          skip @[FSM.scala 63:20]
        skip @[FSM.scala 52:34]
      else : @[FSM.scala 67:19]
        stateReg <= UInt<2>("h00") @[FSM.scala 68:18]
        localCountReg <= UInt<1>("h00") @[FSM.scala 69:23]
        globalCountReg <= UInt<1>("h00") @[FSM.scala 70:24]
        skip @[FSM.scala 67:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_6 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        globalCountReg <= globalCountReg @[FSM.scala 74:22]
        node _T_7 = lt(localCountReg, UInt<5>("h017")) @[FSM.scala 75:25]
        when _T_7 : @[FSM.scala 75:31]
          stateReg <= UInt<2>("h01") @[FSM.scala 76:18]
          node _T_8 = add(localCountReg, UInt<1>("h01")) @[FSM.scala 77:40]
          node _T_9 = tail(_T_8, 1) @[FSM.scala 77:40]
          localCountReg <= _T_9 @[FSM.scala 77:23]
          skip @[FSM.scala 75:31]
        else : @[FSM.scala 78:18]
          localCountReg <= UInt<1>("h00") @[FSM.scala 79:23]
          stateReg <= UInt<2>("h00") @[FSM.scala 80:18]
          skip @[FSM.scala 78:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_10 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_10 : @[Conditional.scala 39:67]
          globalCountReg <= UInt<1>("h00") @[FSM.scala 84:22]
          stateReg <= UInt<2>("h00") @[FSM.scala 85:16]
          localCountReg <= UInt<1>("h00") @[FSM.scala 86:21]
          skip @[Conditional.scala 39:67]
    
  module Theta : 
    input clock : Clock
    input reset : Reset
    output io : {flip theta_in_0_0 : UInt<64>, flip theta_in_1_0 : UInt<64>, flip theta_in_2_0 : UInt<64>, flip theta_in_3_0 : UInt<64>, flip theta_in_4_0 : UInt<64>, flip theta_in_0_1 : UInt<64>, flip theta_in_1_1 : UInt<64>, flip theta_in_2_1 : UInt<64>, flip theta_in_3_1 : UInt<64>, flip theta_in_4_1 : UInt<64>, flip theta_in_0_2 : UInt<64>, flip theta_in_1_2 : UInt<64>, flip theta_in_2_2 : UInt<64>, flip theta_in_3_2 : UInt<64>, flip theta_in_4_2 : UInt<64>, flip theta_in_0_3 : UInt<64>, flip theta_in_1_3 : UInt<64>, flip theta_in_2_3 : UInt<64>, flip theta_in_3_3 : UInt<64>, flip theta_in_4_3 : UInt<64>, flip theta_in_0_4 : UInt<64>, flip theta_in_1_4 : UInt<64>, flip theta_in_2_4 : UInt<64>, flip theta_in_3_4 : UInt<64>, flip theta_in_4_4 : UInt<64>, theta_out_0_0 : UInt<64>, theta_out_1_0 : UInt<64>, theta_out_2_0 : UInt<64>, theta_out_3_0 : UInt<64>, theta_out_4_0 : UInt<64>, theta_out_0_1 : UInt<64>, theta_out_1_1 : UInt<64>, theta_out_2_1 : UInt<64>, theta_out_3_1 : UInt<64>, theta_out_4_1 : UInt<64>, theta_out_0_2 : UInt<64>, theta_out_1_2 : UInt<64>, theta_out_2_2 : UInt<64>, theta_out_3_2 : UInt<64>, theta_out_4_2 : UInt<64>, theta_out_0_3 : UInt<64>, theta_out_1_3 : UInt<64>, theta_out_2_3 : UInt<64>, theta_out_3_3 : UInt<64>, theta_out_4_3 : UInt<64>, theta_out_0_4 : UInt<64>, theta_out_1_4 : UInt<64>, theta_out_2_4 : UInt<64>, theta_out_3_4 : UInt<64>, theta_out_4_4 : UInt<64>}
    
    wire c_0 : UInt<64> @[Theta.scala 66:17]
    wire c_1 : UInt<64> @[Theta.scala 67:17]
    wire c_2 : UInt<64> @[Theta.scala 68:17]
    wire c_3 : UInt<64> @[Theta.scala 69:17]
    wire c_4 : UInt<64> @[Theta.scala 70:17]
    wire d_0 : UInt<64> @[Theta.scala 72:17]
    wire d_1 : UInt<64> @[Theta.scala 73:17]
    wire d_2 : UInt<64> @[Theta.scala 74:17]
    wire d_3 : UInt<64> @[Theta.scala 75:17]
    wire d_4 : UInt<64> @[Theta.scala 76:17]
    node _T = xor(io.theta_in_0_0, io.theta_in_0_1) @[Theta.scala 78:25]
    node _T_1 = xor(_T, io.theta_in_0_2) @[Theta.scala 78:41]
    node _T_2 = xor(_T_1, io.theta_in_0_3) @[Theta.scala 78:57]
    node _T_3 = xor(_T_2, io.theta_in_0_4) @[Theta.scala 78:73]
    c_0 <= _T_3 @[Theta.scala 78:7]
    node _T_4 = xor(io.theta_in_1_0, io.theta_in_1_1) @[Theta.scala 79:25]
    node _T_5 = xor(_T_4, io.theta_in_1_2) @[Theta.scala 79:41]
    node _T_6 = xor(_T_5, io.theta_in_1_3) @[Theta.scala 79:57]
    node _T_7 = xor(_T_6, io.theta_in_1_4) @[Theta.scala 79:73]
    c_1 <= _T_7 @[Theta.scala 79:7]
    node _T_8 = xor(io.theta_in_2_0, io.theta_in_2_1) @[Theta.scala 80:25]
    node _T_9 = xor(_T_8, io.theta_in_2_2) @[Theta.scala 80:41]
    node _T_10 = xor(_T_9, io.theta_in_2_3) @[Theta.scala 80:57]
    node _T_11 = xor(_T_10, io.theta_in_2_4) @[Theta.scala 80:73]
    c_2 <= _T_11 @[Theta.scala 80:7]
    node _T_12 = xor(io.theta_in_3_0, io.theta_in_3_1) @[Theta.scala 81:25]
    node _T_13 = xor(_T_12, io.theta_in_3_2) @[Theta.scala 81:41]
    node _T_14 = xor(_T_13, io.theta_in_3_3) @[Theta.scala 81:57]
    node _T_15 = xor(_T_14, io.theta_in_3_4) @[Theta.scala 81:73]
    c_3 <= _T_15 @[Theta.scala 81:7]
    node _T_16 = xor(io.theta_in_4_0, io.theta_in_4_1) @[Theta.scala 82:25]
    node _T_17 = xor(_T_16, io.theta_in_4_2) @[Theta.scala 82:41]
    node _T_18 = xor(_T_17, io.theta_in_4_3) @[Theta.scala 82:57]
    node _T_19 = xor(_T_18, io.theta_in_4_4) @[Theta.scala 82:73]
    c_4 <= _T_19 @[Theta.scala 82:7]
    wire rotation_0_lhs : UInt<64> @[Theta.scala 84:28]
    wire rotation_0_rhs : UInt<64> @[Theta.scala 85:28]
    wire rotation_1_lhs : UInt<64> @[Theta.scala 86:28]
    wire rotation_1_rhs : UInt<64> @[Theta.scala 87:28]
    wire rotation_2_lhs : UInt<64> @[Theta.scala 88:28]
    wire rotation_2_rhs : UInt<64> @[Theta.scala 89:28]
    wire rotation_3_lhs : UInt<64> @[Theta.scala 90:28]
    wire rotation_3_rhs : UInt<64> @[Theta.scala 91:28]
    wire rotation_4_lhs : UInt<64> @[Theta.scala 92:28]
    wire rotation_4_rhs : UInt<64> @[Theta.scala 93:28]
    wire rotation_result_1 : UInt<64> @[Theta.scala 94:31]
    wire rotation_result_2 : UInt<64> @[Theta.scala 95:31]
    wire rotation_result_3 : UInt<64> @[Theta.scala 96:31]
    wire rotation_result_4 : UInt<64> @[Theta.scala 97:31]
    wire rotation_result_0 : UInt<64> @[Theta.scala 98:31]
    node _T_20 = shl(c_1, 1) @[Theta.scala 101:25]
    rotation_0_lhs <= _T_20 @[Theta.scala 101:18]
    node _T_21 = shr(c_1, 63) @[Theta.scala 102:25]
    rotation_0_rhs <= _T_21 @[Theta.scala 102:18]
    node _T_22 = shl(c_2, 1) @[Theta.scala 104:25]
    rotation_1_lhs <= _T_22 @[Theta.scala 104:18]
    node _T_23 = shr(c_2, 63) @[Theta.scala 105:25]
    rotation_1_rhs <= _T_23 @[Theta.scala 105:18]
    node _T_24 = shl(c_3, 1) @[Theta.scala 107:25]
    rotation_2_lhs <= _T_24 @[Theta.scala 107:18]
    node _T_25 = shr(c_3, 63) @[Theta.scala 108:25]
    rotation_2_rhs <= _T_25 @[Theta.scala 108:18]
    node _T_26 = shl(c_4, 1) @[Theta.scala 110:25]
    rotation_3_lhs <= _T_26 @[Theta.scala 110:18]
    node _T_27 = shr(c_4, 63) @[Theta.scala 111:25]
    rotation_3_rhs <= _T_27 @[Theta.scala 111:18]
    node _T_28 = shl(c_0, 1) @[Theta.scala 113:25]
    rotation_4_lhs <= _T_28 @[Theta.scala 113:18]
    node _T_29 = shr(c_0, 63) @[Theta.scala 114:25]
    rotation_4_rhs <= _T_29 @[Theta.scala 114:18]
    node _T_30 = or(rotation_0_lhs, rotation_0_rhs) @[Theta.scala 116:39]
    rotation_result_0 <= _T_30 @[Theta.scala 116:21]
    node _T_31 = or(rotation_1_lhs, rotation_1_rhs) @[Theta.scala 117:39]
    rotation_result_1 <= _T_31 @[Theta.scala 117:21]
    node _T_32 = or(rotation_2_lhs, rotation_2_rhs) @[Theta.scala 118:39]
    rotation_result_2 <= _T_32 @[Theta.scala 118:21]
    node _T_33 = or(rotation_3_lhs, rotation_3_rhs) @[Theta.scala 119:39]
    rotation_result_3 <= _T_33 @[Theta.scala 119:21]
    node _T_34 = or(rotation_4_lhs, rotation_4_rhs) @[Theta.scala 120:39]
    rotation_result_4 <= _T_34 @[Theta.scala 120:21]
    node _T_35 = xor(c_4, rotation_result_0) @[Theta.scala 122:14]
    d_0 <= _T_35 @[Theta.scala 122:7]
    node _T_36 = xor(c_0, rotation_result_1) @[Theta.scala 123:14]
    d_1 <= _T_36 @[Theta.scala 123:7]
    node _T_37 = xor(c_1, rotation_result_2) @[Theta.scala 124:14]
    d_2 <= _T_37 @[Theta.scala 124:7]
    node _T_38 = xor(c_2, rotation_result_3) @[Theta.scala 125:14]
    d_3 <= _T_38 @[Theta.scala 125:7]
    node _T_39 = xor(c_3, rotation_result_4) @[Theta.scala 126:14]
    d_4 <= _T_39 @[Theta.scala 126:7]
    node _T_40 = xor(io.theta_in_0_0, d_0) @[Theta.scala 129:38]
    io.theta_out_0_0 <= _T_40 @[Theta.scala 129:20]
    node _T_41 = xor(io.theta_in_0_1, d_0) @[Theta.scala 130:38]
    io.theta_out_0_1 <= _T_41 @[Theta.scala 130:20]
    node _T_42 = xor(io.theta_in_0_2, d_0) @[Theta.scala 131:38]
    io.theta_out_0_2 <= _T_42 @[Theta.scala 131:20]
    node _T_43 = xor(io.theta_in_0_3, d_0) @[Theta.scala 132:38]
    io.theta_out_0_3 <= _T_43 @[Theta.scala 132:20]
    node _T_44 = xor(io.theta_in_0_4, d_0) @[Theta.scala 133:38]
    io.theta_out_0_4 <= _T_44 @[Theta.scala 133:20]
    node _T_45 = xor(io.theta_in_1_0, d_1) @[Theta.scala 135:38]
    io.theta_out_1_0 <= _T_45 @[Theta.scala 135:20]
    node _T_46 = xor(io.theta_in_1_1, d_1) @[Theta.scala 136:38]
    io.theta_out_1_1 <= _T_46 @[Theta.scala 136:20]
    node _T_47 = xor(io.theta_in_1_2, d_1) @[Theta.scala 137:38]
    io.theta_out_1_2 <= _T_47 @[Theta.scala 137:20]
    node _T_48 = xor(io.theta_in_1_3, d_1) @[Theta.scala 138:38]
    io.theta_out_1_3 <= _T_48 @[Theta.scala 138:20]
    node _T_49 = xor(io.theta_in_1_4, d_1) @[Theta.scala 139:38]
    io.theta_out_1_4 <= _T_49 @[Theta.scala 139:20]
    node _T_50 = xor(io.theta_in_2_0, d_2) @[Theta.scala 141:38]
    io.theta_out_2_0 <= _T_50 @[Theta.scala 141:20]
    node _T_51 = xor(io.theta_in_2_1, d_2) @[Theta.scala 142:38]
    io.theta_out_2_1 <= _T_51 @[Theta.scala 142:20]
    node _T_52 = xor(io.theta_in_2_2, d_2) @[Theta.scala 143:38]
    io.theta_out_2_2 <= _T_52 @[Theta.scala 143:20]
    node _T_53 = xor(io.theta_in_2_3, d_2) @[Theta.scala 144:38]
    io.theta_out_2_3 <= _T_53 @[Theta.scala 144:20]
    node _T_54 = xor(io.theta_in_2_4, d_2) @[Theta.scala 145:38]
    io.theta_out_2_4 <= _T_54 @[Theta.scala 145:20]
    node _T_55 = xor(io.theta_in_3_0, d_3) @[Theta.scala 147:38]
    io.theta_out_3_0 <= _T_55 @[Theta.scala 147:20]
    node _T_56 = xor(io.theta_in_3_1, d_3) @[Theta.scala 148:38]
    io.theta_out_3_1 <= _T_56 @[Theta.scala 148:20]
    node _T_57 = xor(io.theta_in_3_2, d_3) @[Theta.scala 149:38]
    io.theta_out_3_2 <= _T_57 @[Theta.scala 149:20]
    node _T_58 = xor(io.theta_in_3_3, d_3) @[Theta.scala 150:38]
    io.theta_out_3_3 <= _T_58 @[Theta.scala 150:20]
    node _T_59 = xor(io.theta_in_3_4, d_3) @[Theta.scala 151:38]
    io.theta_out_3_4 <= _T_59 @[Theta.scala 151:20]
    node _T_60 = xor(io.theta_in_4_0, d_4) @[Theta.scala 153:38]
    io.theta_out_4_0 <= _T_60 @[Theta.scala 153:20]
    node _T_61 = xor(io.theta_in_4_1, d_4) @[Theta.scala 154:38]
    io.theta_out_4_1 <= _T_61 @[Theta.scala 154:20]
    node _T_62 = xor(io.theta_in_4_2, d_4) @[Theta.scala 155:38]
    io.theta_out_4_2 <= _T_62 @[Theta.scala 155:20]
    node _T_63 = xor(io.theta_in_4_3, d_4) @[Theta.scala 156:38]
    io.theta_out_4_3 <= _T_63 @[Theta.scala 156:20]
    node _T_64 = xor(io.theta_in_4_4, d_4) @[Theta.scala 157:38]
    io.theta_out_4_4 <= _T_64 @[Theta.scala 157:20]
    
  module RhoPi : 
    input clock : Clock
    input reset : Reset
    output io : {flip rhoPi_in_0_0 : UInt<64>, flip rhoPi_in_1_0 : UInt<64>, flip rhoPi_in_2_0 : UInt<64>, flip rhoPi_in_3_0 : UInt<64>, flip rhoPi_in_4_0 : UInt<64>, flip rhoPi_in_0_1 : UInt<64>, flip rhoPi_in_1_1 : UInt<64>, flip rhoPi_in_2_1 : UInt<64>, flip rhoPi_in_3_1 : UInt<64>, flip rhoPi_in_4_1 : UInt<64>, flip rhoPi_in_0_2 : UInt<64>, flip rhoPi_in_1_2 : UInt<64>, flip rhoPi_in_2_2 : UInt<64>, flip rhoPi_in_3_2 : UInt<64>, flip rhoPi_in_4_2 : UInt<64>, flip rhoPi_in_0_3 : UInt<64>, flip rhoPi_in_1_3 : UInt<64>, flip rhoPi_in_2_3 : UInt<64>, flip rhoPi_in_3_3 : UInt<64>, flip rhoPi_in_4_3 : UInt<64>, flip rhoPi_in_0_4 : UInt<64>, flip rhoPi_in_1_4 : UInt<64>, flip rhoPi_in_2_4 : UInt<64>, flip rhoPi_in_3_4 : UInt<64>, flip rhoPi_in_4_4 : UInt<64>, rhoPi_out_0_0 : UInt<64>, rhoPi_out_1_0 : UInt<64>, rhoPi_out_2_0 : UInt<64>, rhoPi_out_3_0 : UInt<64>, rhoPi_out_4_0 : UInt<64>, rhoPi_out_0_1 : UInt<64>, rhoPi_out_1_1 : UInt<64>, rhoPi_out_2_1 : UInt<64>, rhoPi_out_3_1 : UInt<64>, rhoPi_out_4_1 : UInt<64>, rhoPi_out_0_2 : UInt<64>, rhoPi_out_1_2 : UInt<64>, rhoPi_out_2_2 : UInt<64>, rhoPi_out_3_2 : UInt<64>, rhoPi_out_4_2 : UInt<64>, rhoPi_out_0_3 : UInt<64>, rhoPi_out_1_3 : UInt<64>, rhoPi_out_2_3 : UInt<64>, rhoPi_out_3_3 : UInt<64>, rhoPi_out_4_3 : UInt<64>, rhoPi_out_0_4 : UInt<64>, rhoPi_out_1_4 : UInt<64>, rhoPi_out_2_4 : UInt<64>, rhoPi_out_3_4 : UInt<64>, rhoPi_out_4_4 : UInt<64>}
    
    wire r : UInt<19>[5][5] @[RhoPi.scala 62:17]
    r[0][0] <= UInt<1>("h00") @[RhoPi.scala 63:11]
    r[0][1] <= UInt<6>("h024") @[RhoPi.scala 64:11]
    r[0][2] <= UInt<2>("h03") @[RhoPi.scala 65:11]
    r[0][3] <= UInt<6>("h029") @[RhoPi.scala 66:11]
    r[0][4] <= UInt<5>("h012") @[RhoPi.scala 67:11]
    r[1][0] <= UInt<1>("h01") @[RhoPi.scala 69:11]
    r[1][1] <= UInt<6>("h02c") @[RhoPi.scala 70:11]
    r[1][2] <= UInt<4>("h0a") @[RhoPi.scala 71:11]
    r[1][3] <= UInt<6>("h02d") @[RhoPi.scala 72:11]
    r[1][4] <= UInt<2>("h02") @[RhoPi.scala 73:11]
    r[2][0] <= UInt<6>("h03e") @[RhoPi.scala 75:11]
    r[2][1] <= UInt<3>("h06") @[RhoPi.scala 76:11]
    r[2][2] <= UInt<6>("h02b") @[RhoPi.scala 77:11]
    r[2][3] <= UInt<4>("h0f") @[RhoPi.scala 78:11]
    r[2][4] <= UInt<6>("h03d") @[RhoPi.scala 79:11]
    r[3][0] <= UInt<5>("h01c") @[RhoPi.scala 81:11]
    r[3][1] <= UInt<6>("h037") @[RhoPi.scala 82:11]
    r[3][2] <= UInt<5>("h019") @[RhoPi.scala 83:11]
    r[3][3] <= UInt<5>("h015") @[RhoPi.scala 84:11]
    r[3][4] <= UInt<6>("h038") @[RhoPi.scala 85:11]
    r[4][0] <= UInt<5>("h01b") @[RhoPi.scala 87:11]
    r[4][1] <= UInt<5>("h014") @[RhoPi.scala 88:11]
    r[4][2] <= UInt<6>("h027") @[RhoPi.scala 89:11]
    r[4][3] <= UInt<4>("h08") @[RhoPi.scala 90:11]
    r[4][4] <= UInt<4>("h0e") @[RhoPi.scala 91:11]
    wire or_lfh_0_0 : UInt<64> @[RhoPi.scala 95:24]
    wire or_lfh_0_1 : UInt<64> @[RhoPi.scala 96:24]
    wire or_lfh_0_2 : UInt<64> @[RhoPi.scala 97:24]
    wire or_lfh_0_3 : UInt<64> @[RhoPi.scala 98:24]
    wire or_lfh_0_4 : UInt<64> @[RhoPi.scala 99:24]
    wire or_lfh_1_0 : UInt<64> @[RhoPi.scala 100:24]
    wire or_lfh_1_1 : UInt<64> @[RhoPi.scala 101:24]
    wire or_lfh_1_2 : UInt<64> @[RhoPi.scala 102:24]
    wire or_lfh_1_3 : UInt<64> @[RhoPi.scala 103:24]
    wire or_lfh_1_4 : UInt<64> @[RhoPi.scala 104:24]
    wire or_lfh_2_0 : UInt<64> @[RhoPi.scala 105:24]
    wire or_lfh_2_1 : UInt<64> @[RhoPi.scala 106:24]
    wire or_lfh_2_2 : UInt<64> @[RhoPi.scala 107:24]
    wire or_lfh_2_3 : UInt<64> @[RhoPi.scala 108:24]
    wire or_lfh_2_4 : UInt<64> @[RhoPi.scala 109:24]
    wire or_lfh_3_0 : UInt<64> @[RhoPi.scala 110:24]
    wire or_lfh_3_1 : UInt<64> @[RhoPi.scala 111:24]
    wire or_lfh_3_2 : UInt<64> @[RhoPi.scala 112:24]
    wire or_lfh_3_3 : UInt<64> @[RhoPi.scala 113:24]
    wire or_lfh_3_4 : UInt<64> @[RhoPi.scala 114:24]
    wire or_lfh_4_0 : UInt<64> @[RhoPi.scala 115:24]
    wire or_lfh_4_1 : UInt<64> @[RhoPi.scala 116:24]
    wire or_lfh_4_2 : UInt<64> @[RhoPi.scala 117:24]
    wire or_lfh_4_3 : UInt<64> @[RhoPi.scala 118:24]
    wire or_lfh_4_4 : UInt<64> @[RhoPi.scala 119:24]
    wire or_rfh_0_0 : UInt<64> @[RhoPi.scala 121:24]
    wire or_rfh_0_1 : UInt<64> @[RhoPi.scala 122:24]
    wire or_rfh_0_2 : UInt<64> @[RhoPi.scala 123:24]
    wire or_rfh_0_3 : UInt<64> @[RhoPi.scala 124:24]
    wire or_rfh_0_4 : UInt<64> @[RhoPi.scala 125:24]
    wire or_rfh_1_0 : UInt<64> @[RhoPi.scala 126:24]
    wire or_rfh_1_1 : UInt<64> @[RhoPi.scala 127:24]
    wire or_rfh_1_2 : UInt<64> @[RhoPi.scala 128:24]
    wire or_rfh_1_3 : UInt<64> @[RhoPi.scala 129:24]
    wire or_rfh_1_4 : UInt<64> @[RhoPi.scala 130:24]
    wire or_rfh_2_0 : UInt<64> @[RhoPi.scala 131:24]
    wire or_rfh_2_1 : UInt<64> @[RhoPi.scala 132:24]
    wire or_rfh_2_2 : UInt<64> @[RhoPi.scala 133:24]
    wire or_rfh_2_3 : UInt<64> @[RhoPi.scala 134:24]
    wire or_rfh_2_4 : UInt<64> @[RhoPi.scala 135:24]
    wire or_rfh_3_0 : UInt<64> @[RhoPi.scala 136:24]
    wire or_rfh_3_1 : UInt<64> @[RhoPi.scala 137:24]
    wire or_rfh_3_2 : UInt<64> @[RhoPi.scala 138:24]
    wire or_rfh_3_3 : UInt<64> @[RhoPi.scala 139:24]
    wire or_rfh_3_4 : UInt<64> @[RhoPi.scala 140:24]
    wire or_rfh_4_0 : UInt<64> @[RhoPi.scala 141:24]
    wire or_rfh_4_1 : UInt<64> @[RhoPi.scala 142:24]
    wire or_rfh_4_2 : UInt<64> @[RhoPi.scala 143:24]
    wire or_rfh_4_3 : UInt<64> @[RhoPi.scala 144:24]
    wire or_rfh_4_4 : UInt<64> @[RhoPi.scala 145:24]
    node _T = dshl(io.rhoPi_in_0_0, r[0][0]) @[RhoPi.scala 147:32]
    or_lfh_0_0 <= _T @[RhoPi.scala 147:14]
    node _T_1 = dshl(io.rhoPi_in_0_1, r[0][1]) @[RhoPi.scala 148:32]
    or_lfh_0_1 <= _T_1 @[RhoPi.scala 148:14]
    node _T_2 = dshl(io.rhoPi_in_0_2, r[0][2]) @[RhoPi.scala 149:32]
    or_lfh_0_2 <= _T_2 @[RhoPi.scala 149:14]
    node _T_3 = dshl(io.rhoPi_in_0_3, r[0][3]) @[RhoPi.scala 150:32]
    or_lfh_0_3 <= _T_3 @[RhoPi.scala 150:14]
    node _T_4 = dshl(io.rhoPi_in_0_4, r[0][4]) @[RhoPi.scala 151:32]
    or_lfh_0_4 <= _T_4 @[RhoPi.scala 151:14]
    node _T_5 = dshl(io.rhoPi_in_1_0, r[1][0]) @[RhoPi.scala 152:32]
    or_lfh_1_0 <= _T_5 @[RhoPi.scala 152:14]
    node _T_6 = dshl(io.rhoPi_in_1_1, r[1][1]) @[RhoPi.scala 153:32]
    or_lfh_1_1 <= _T_6 @[RhoPi.scala 153:14]
    node _T_7 = dshl(io.rhoPi_in_1_2, r[1][2]) @[RhoPi.scala 154:32]
    or_lfh_1_2 <= _T_7 @[RhoPi.scala 154:14]
    node _T_8 = dshl(io.rhoPi_in_1_3, r[1][3]) @[RhoPi.scala 155:32]
    or_lfh_1_3 <= _T_8 @[RhoPi.scala 155:14]
    node _T_9 = dshl(io.rhoPi_in_1_4, r[1][4]) @[RhoPi.scala 156:32]
    or_lfh_1_4 <= _T_9 @[RhoPi.scala 156:14]
    node _T_10 = dshl(io.rhoPi_in_2_0, r[2][0]) @[RhoPi.scala 157:32]
    or_lfh_2_0 <= _T_10 @[RhoPi.scala 157:14]
    node _T_11 = dshl(io.rhoPi_in_2_1, r[2][1]) @[RhoPi.scala 158:32]
    or_lfh_2_1 <= _T_11 @[RhoPi.scala 158:14]
    node _T_12 = dshl(io.rhoPi_in_2_2, r[2][2]) @[RhoPi.scala 159:32]
    or_lfh_2_2 <= _T_12 @[RhoPi.scala 159:14]
    node _T_13 = dshl(io.rhoPi_in_2_3, r[2][3]) @[RhoPi.scala 160:32]
    or_lfh_2_3 <= _T_13 @[RhoPi.scala 160:14]
    node _T_14 = dshl(io.rhoPi_in_2_4, r[2][4]) @[RhoPi.scala 161:32]
    or_lfh_2_4 <= _T_14 @[RhoPi.scala 161:14]
    node _T_15 = dshl(io.rhoPi_in_3_0, r[3][0]) @[RhoPi.scala 162:32]
    or_lfh_3_0 <= _T_15 @[RhoPi.scala 162:14]
    node _T_16 = dshl(io.rhoPi_in_3_1, r[3][1]) @[RhoPi.scala 163:32]
    or_lfh_3_1 <= _T_16 @[RhoPi.scala 163:14]
    node _T_17 = dshl(io.rhoPi_in_3_2, r[3][2]) @[RhoPi.scala 164:32]
    or_lfh_3_2 <= _T_17 @[RhoPi.scala 164:14]
    node _T_18 = dshl(io.rhoPi_in_3_3, r[3][3]) @[RhoPi.scala 165:32]
    or_lfh_3_3 <= _T_18 @[RhoPi.scala 165:14]
    node _T_19 = dshl(io.rhoPi_in_3_4, r[3][4]) @[RhoPi.scala 166:32]
    or_lfh_3_4 <= _T_19 @[RhoPi.scala 166:14]
    node _T_20 = dshl(io.rhoPi_in_4_0, r[4][0]) @[RhoPi.scala 167:32]
    or_lfh_4_0 <= _T_20 @[RhoPi.scala 167:14]
    node _T_21 = dshl(io.rhoPi_in_4_1, r[4][1]) @[RhoPi.scala 168:32]
    or_lfh_4_1 <= _T_21 @[RhoPi.scala 168:14]
    node _T_22 = dshl(io.rhoPi_in_4_2, r[4][2]) @[RhoPi.scala 169:32]
    or_lfh_4_2 <= _T_22 @[RhoPi.scala 169:14]
    node _T_23 = dshl(io.rhoPi_in_4_3, r[4][3]) @[RhoPi.scala 170:32]
    or_lfh_4_3 <= _T_23 @[RhoPi.scala 170:14]
    node _T_24 = dshl(io.rhoPi_in_4_4, r[4][4]) @[RhoPi.scala 171:32]
    or_lfh_4_4 <= _T_24 @[RhoPi.scala 171:14]
    node _T_25 = sub(UInt<7>("h040"), r[0][0]) @[RhoPi.scala 173:39]
    node _T_26 = tail(_T_25, 1) @[RhoPi.scala 173:39]
    node _T_27 = dshr(io.rhoPi_in_0_0, _T_26) @[RhoPi.scala 173:32]
    or_rfh_0_0 <= _T_27 @[RhoPi.scala 173:14]
    node _T_28 = sub(UInt<7>("h040"), r[0][1]) @[RhoPi.scala 174:39]
    node _T_29 = tail(_T_28, 1) @[RhoPi.scala 174:39]
    node _T_30 = dshr(io.rhoPi_in_0_1, _T_29) @[RhoPi.scala 174:32]
    or_rfh_0_1 <= _T_30 @[RhoPi.scala 174:14]
    node _T_31 = sub(UInt<7>("h040"), r[0][2]) @[RhoPi.scala 175:39]
    node _T_32 = tail(_T_31, 1) @[RhoPi.scala 175:39]
    node _T_33 = dshr(io.rhoPi_in_0_2, _T_32) @[RhoPi.scala 175:32]
    or_rfh_0_2 <= _T_33 @[RhoPi.scala 175:14]
    node _T_34 = sub(UInt<7>("h040"), r[0][3]) @[RhoPi.scala 176:39]
    node _T_35 = tail(_T_34, 1) @[RhoPi.scala 176:39]
    node _T_36 = dshr(io.rhoPi_in_0_3, _T_35) @[RhoPi.scala 176:32]
    or_rfh_0_3 <= _T_36 @[RhoPi.scala 176:14]
    node _T_37 = sub(UInt<7>("h040"), r[0][4]) @[RhoPi.scala 177:39]
    node _T_38 = tail(_T_37, 1) @[RhoPi.scala 177:39]
    node _T_39 = dshr(io.rhoPi_in_0_4, _T_38) @[RhoPi.scala 177:32]
    or_rfh_0_4 <= _T_39 @[RhoPi.scala 177:14]
    node _T_40 = sub(UInt<7>("h040"), r[1][0]) @[RhoPi.scala 178:39]
    node _T_41 = tail(_T_40, 1) @[RhoPi.scala 178:39]
    node _T_42 = dshr(io.rhoPi_in_1_0, _T_41) @[RhoPi.scala 178:32]
    or_rfh_1_0 <= _T_42 @[RhoPi.scala 178:14]
    node _T_43 = sub(UInt<7>("h040"), r[1][1]) @[RhoPi.scala 179:39]
    node _T_44 = tail(_T_43, 1) @[RhoPi.scala 179:39]
    node _T_45 = dshr(io.rhoPi_in_1_1, _T_44) @[RhoPi.scala 179:32]
    or_rfh_1_1 <= _T_45 @[RhoPi.scala 179:14]
    node _T_46 = sub(UInt<7>("h040"), r[1][2]) @[RhoPi.scala 180:39]
    node _T_47 = tail(_T_46, 1) @[RhoPi.scala 180:39]
    node _T_48 = dshr(io.rhoPi_in_1_2, _T_47) @[RhoPi.scala 180:32]
    or_rfh_1_2 <= _T_48 @[RhoPi.scala 180:14]
    node _T_49 = sub(UInt<7>("h040"), r[1][3]) @[RhoPi.scala 181:39]
    node _T_50 = tail(_T_49, 1) @[RhoPi.scala 181:39]
    node _T_51 = dshr(io.rhoPi_in_1_3, _T_50) @[RhoPi.scala 181:32]
    or_rfh_1_3 <= _T_51 @[RhoPi.scala 181:14]
    node _T_52 = sub(UInt<7>("h040"), r[1][4]) @[RhoPi.scala 182:39]
    node _T_53 = tail(_T_52, 1) @[RhoPi.scala 182:39]
    node _T_54 = dshr(io.rhoPi_in_1_4, _T_53) @[RhoPi.scala 182:32]
    or_rfh_1_4 <= _T_54 @[RhoPi.scala 182:14]
    node _T_55 = sub(UInt<7>("h040"), r[2][0]) @[RhoPi.scala 183:39]
    node _T_56 = tail(_T_55, 1) @[RhoPi.scala 183:39]
    node _T_57 = dshr(io.rhoPi_in_2_0, _T_56) @[RhoPi.scala 183:32]
    or_rfh_2_0 <= _T_57 @[RhoPi.scala 183:14]
    node _T_58 = sub(UInt<7>("h040"), r[2][1]) @[RhoPi.scala 184:39]
    node _T_59 = tail(_T_58, 1) @[RhoPi.scala 184:39]
    node _T_60 = dshr(io.rhoPi_in_2_1, _T_59) @[RhoPi.scala 184:32]
    or_rfh_2_1 <= _T_60 @[RhoPi.scala 184:14]
    node _T_61 = sub(UInt<7>("h040"), r[2][2]) @[RhoPi.scala 185:39]
    node _T_62 = tail(_T_61, 1) @[RhoPi.scala 185:39]
    node _T_63 = dshr(io.rhoPi_in_2_2, _T_62) @[RhoPi.scala 185:32]
    or_rfh_2_2 <= _T_63 @[RhoPi.scala 185:14]
    node _T_64 = sub(UInt<7>("h040"), r[2][3]) @[RhoPi.scala 186:39]
    node _T_65 = tail(_T_64, 1) @[RhoPi.scala 186:39]
    node _T_66 = dshr(io.rhoPi_in_2_3, _T_65) @[RhoPi.scala 186:32]
    or_rfh_2_3 <= _T_66 @[RhoPi.scala 186:14]
    node _T_67 = sub(UInt<7>("h040"), r[2][4]) @[RhoPi.scala 187:39]
    node _T_68 = tail(_T_67, 1) @[RhoPi.scala 187:39]
    node _T_69 = dshr(io.rhoPi_in_2_4, _T_68) @[RhoPi.scala 187:32]
    or_rfh_2_4 <= _T_69 @[RhoPi.scala 187:14]
    node _T_70 = sub(UInt<7>("h040"), r[3][0]) @[RhoPi.scala 188:39]
    node _T_71 = tail(_T_70, 1) @[RhoPi.scala 188:39]
    node _T_72 = dshr(io.rhoPi_in_3_0, _T_71) @[RhoPi.scala 188:32]
    or_rfh_3_0 <= _T_72 @[RhoPi.scala 188:14]
    node _T_73 = sub(UInt<7>("h040"), r[3][1]) @[RhoPi.scala 189:39]
    node _T_74 = tail(_T_73, 1) @[RhoPi.scala 189:39]
    node _T_75 = dshr(io.rhoPi_in_3_1, _T_74) @[RhoPi.scala 189:32]
    or_rfh_3_1 <= _T_75 @[RhoPi.scala 189:14]
    node _T_76 = sub(UInt<7>("h040"), r[3][2]) @[RhoPi.scala 190:39]
    node _T_77 = tail(_T_76, 1) @[RhoPi.scala 190:39]
    node _T_78 = dshr(io.rhoPi_in_3_2, _T_77) @[RhoPi.scala 190:32]
    or_rfh_3_2 <= _T_78 @[RhoPi.scala 190:14]
    node _T_79 = sub(UInt<7>("h040"), r[3][3]) @[RhoPi.scala 191:39]
    node _T_80 = tail(_T_79, 1) @[RhoPi.scala 191:39]
    node _T_81 = dshr(io.rhoPi_in_3_3, _T_80) @[RhoPi.scala 191:32]
    or_rfh_3_3 <= _T_81 @[RhoPi.scala 191:14]
    node _T_82 = sub(UInt<7>("h040"), r[3][4]) @[RhoPi.scala 192:39]
    node _T_83 = tail(_T_82, 1) @[RhoPi.scala 192:39]
    node _T_84 = dshr(io.rhoPi_in_3_4, _T_83) @[RhoPi.scala 192:32]
    or_rfh_3_4 <= _T_84 @[RhoPi.scala 192:14]
    node _T_85 = sub(UInt<7>("h040"), r[4][0]) @[RhoPi.scala 193:39]
    node _T_86 = tail(_T_85, 1) @[RhoPi.scala 193:39]
    node _T_87 = dshr(io.rhoPi_in_4_0, _T_86) @[RhoPi.scala 193:32]
    or_rfh_4_0 <= _T_87 @[RhoPi.scala 193:14]
    node _T_88 = sub(UInt<7>("h040"), r[4][1]) @[RhoPi.scala 194:39]
    node _T_89 = tail(_T_88, 1) @[RhoPi.scala 194:39]
    node _T_90 = dshr(io.rhoPi_in_4_1, _T_89) @[RhoPi.scala 194:32]
    or_rfh_4_1 <= _T_90 @[RhoPi.scala 194:14]
    node _T_91 = sub(UInt<7>("h040"), r[4][2]) @[RhoPi.scala 195:39]
    node _T_92 = tail(_T_91, 1) @[RhoPi.scala 195:39]
    node _T_93 = dshr(io.rhoPi_in_4_2, _T_92) @[RhoPi.scala 195:32]
    or_rfh_4_2 <= _T_93 @[RhoPi.scala 195:14]
    node _T_94 = sub(UInt<7>("h040"), r[4][3]) @[RhoPi.scala 196:39]
    node _T_95 = tail(_T_94, 1) @[RhoPi.scala 196:39]
    node _T_96 = dshr(io.rhoPi_in_4_3, _T_95) @[RhoPi.scala 196:32]
    or_rfh_4_3 <= _T_96 @[RhoPi.scala 196:14]
    node _T_97 = sub(UInt<7>("h040"), r[4][4]) @[RhoPi.scala 197:39]
    node _T_98 = tail(_T_97, 1) @[RhoPi.scala 197:39]
    node _T_99 = dshr(io.rhoPi_in_4_4, _T_98) @[RhoPi.scala 197:32]
    or_rfh_4_4 <= _T_99 @[RhoPi.scala 197:14]
    node _T_100 = or(or_lfh_0_0, or_rfh_0_0) @[RhoPi.scala 199:34]
    io.rhoPi_out_0_0 <= _T_100 @[RhoPi.scala 199:20]
    node _T_101 = or(or_lfh_0_1, or_rfh_0_1) @[RhoPi.scala 200:34]
    io.rhoPi_out_1_3 <= _T_101 @[RhoPi.scala 200:20]
    node _T_102 = or(or_lfh_0_2, or_rfh_0_2) @[RhoPi.scala 201:34]
    io.rhoPi_out_2_1 <= _T_102 @[RhoPi.scala 201:20]
    node _T_103 = or(or_lfh_0_3, or_rfh_0_3) @[RhoPi.scala 202:34]
    io.rhoPi_out_3_4 <= _T_103 @[RhoPi.scala 202:20]
    node _T_104 = or(or_lfh_0_4, or_rfh_0_4) @[RhoPi.scala 203:34]
    io.rhoPi_out_4_2 <= _T_104 @[RhoPi.scala 203:20]
    node _T_105 = or(or_lfh_1_0, or_rfh_1_0) @[RhoPi.scala 205:34]
    io.rhoPi_out_0_2 <= _T_105 @[RhoPi.scala 205:20]
    node _T_106 = or(or_lfh_1_1, or_rfh_1_1) @[RhoPi.scala 206:34]
    io.rhoPi_out_1_0 <= _T_106 @[RhoPi.scala 206:20]
    node _T_107 = or(or_lfh_1_2, or_rfh_1_2) @[RhoPi.scala 207:34]
    io.rhoPi_out_2_3 <= _T_107 @[RhoPi.scala 207:20]
    node _T_108 = or(or_lfh_1_3, or_rfh_1_3) @[RhoPi.scala 208:34]
    io.rhoPi_out_3_1 <= _T_108 @[RhoPi.scala 208:20]
    node _T_109 = or(or_lfh_1_4, or_rfh_1_4) @[RhoPi.scala 209:34]
    io.rhoPi_out_4_4 <= _T_109 @[RhoPi.scala 209:20]
    node _T_110 = or(or_lfh_2_0, or_rfh_2_0) @[RhoPi.scala 211:34]
    io.rhoPi_out_0_4 <= _T_110 @[RhoPi.scala 211:20]
    node _T_111 = or(or_lfh_2_1, or_rfh_2_1) @[RhoPi.scala 212:34]
    io.rhoPi_out_1_2 <= _T_111 @[RhoPi.scala 212:20]
    node _T_112 = or(or_lfh_2_2, or_rfh_2_2) @[RhoPi.scala 213:34]
    io.rhoPi_out_2_0 <= _T_112 @[RhoPi.scala 213:20]
    node _T_113 = or(or_lfh_2_3, or_rfh_2_3) @[RhoPi.scala 214:34]
    io.rhoPi_out_3_3 <= _T_113 @[RhoPi.scala 214:20]
    node _T_114 = or(or_lfh_2_4, or_rfh_2_4) @[RhoPi.scala 215:34]
    io.rhoPi_out_4_1 <= _T_114 @[RhoPi.scala 215:20]
    node _T_115 = or(or_lfh_3_0, or_rfh_3_0) @[RhoPi.scala 217:34]
    io.rhoPi_out_0_1 <= _T_115 @[RhoPi.scala 217:20]
    node _T_116 = or(or_lfh_3_1, or_rfh_3_1) @[RhoPi.scala 218:34]
    io.rhoPi_out_1_4 <= _T_116 @[RhoPi.scala 218:20]
    node _T_117 = or(or_lfh_3_2, or_rfh_3_2) @[RhoPi.scala 219:34]
    io.rhoPi_out_2_2 <= _T_117 @[RhoPi.scala 219:20]
    node _T_118 = or(or_lfh_3_3, or_rfh_3_3) @[RhoPi.scala 220:34]
    io.rhoPi_out_3_0 <= _T_118 @[RhoPi.scala 220:20]
    node _T_119 = or(or_lfh_3_4, or_rfh_3_4) @[RhoPi.scala 221:34]
    io.rhoPi_out_4_3 <= _T_119 @[RhoPi.scala 221:20]
    node _T_120 = or(or_lfh_4_0, or_rfh_4_0) @[RhoPi.scala 223:34]
    io.rhoPi_out_0_3 <= _T_120 @[RhoPi.scala 223:20]
    node _T_121 = or(or_lfh_4_1, or_rfh_4_1) @[RhoPi.scala 224:34]
    io.rhoPi_out_1_1 <= _T_121 @[RhoPi.scala 224:20]
    node _T_122 = or(or_lfh_4_2, or_rfh_4_2) @[RhoPi.scala 225:34]
    io.rhoPi_out_2_4 <= _T_122 @[RhoPi.scala 225:20]
    node _T_123 = or(or_lfh_4_3, or_rfh_4_3) @[RhoPi.scala 226:34]
    io.rhoPi_out_3_2 <= _T_123 @[RhoPi.scala 226:20]
    node _T_124 = or(or_lfh_4_4, or_rfh_4_4) @[RhoPi.scala 227:34]
    io.rhoPi_out_4_0 <= _T_124 @[RhoPi.scala 227:20]
    
  module Chi : 
    input clock : Clock
    input reset : Reset
    output io : {flip chi_in_0_0 : UInt<64>, flip chi_in_1_0 : UInt<64>, flip chi_in_2_0 : UInt<64>, flip chi_in_3_0 : UInt<64>, flip chi_in_4_0 : UInt<64>, flip chi_in_0_1 : UInt<64>, flip chi_in_1_1 : UInt<64>, flip chi_in_2_1 : UInt<64>, flip chi_in_3_1 : UInt<64>, flip chi_in_4_1 : UInt<64>, flip chi_in_0_2 : UInt<64>, flip chi_in_1_2 : UInt<64>, flip chi_in_2_2 : UInt<64>, flip chi_in_3_2 : UInt<64>, flip chi_in_4_2 : UInt<64>, flip chi_in_0_3 : UInt<64>, flip chi_in_1_3 : UInt<64>, flip chi_in_2_3 : UInt<64>, flip chi_in_3_3 : UInt<64>, flip chi_in_4_3 : UInt<64>, flip chi_in_0_4 : UInt<64>, flip chi_in_1_4 : UInt<64>, flip chi_in_2_4 : UInt<64>, flip chi_in_3_4 : UInt<64>, flip chi_in_4_4 : UInt<64>, chi_out_0_0 : UInt<64>, chi_out_1_0 : UInt<64>, chi_out_2_0 : UInt<64>, chi_out_3_0 : UInt<64>, chi_out_4_0 : UInt<64>, chi_out_0_1 : UInt<64>, chi_out_1_1 : UInt<64>, chi_out_2_1 : UInt<64>, chi_out_3_1 : UInt<64>, chi_out_4_1 : UInt<64>, chi_out_0_2 : UInt<64>, chi_out_1_2 : UInt<64>, chi_out_2_2 : UInt<64>, chi_out_3_2 : UInt<64>, chi_out_4_2 : UInt<64>, chi_out_0_3 : UInt<64>, chi_out_1_3 : UInt<64>, chi_out_2_3 : UInt<64>, chi_out_3_3 : UInt<64>, chi_out_4_3 : UInt<64>, chi_out_0_4 : UInt<64>, chi_out_1_4 : UInt<64>, chi_out_2_4 : UInt<64>, chi_out_3_4 : UInt<64>, chi_out_4_4 : UInt<64>}
    
    wire chi_xor_rhs_0_0 : UInt<64> @[Chi.scala 80:29]
    wire chi_xor_rhs_1_0 : UInt<64> @[Chi.scala 81:29]
    wire chi_xor_rhs_2_0 : UInt<64> @[Chi.scala 82:29]
    wire chi_xor_rhs_3_0 : UInt<64> @[Chi.scala 83:29]
    wire chi_xor_rhs_4_0 : UInt<64> @[Chi.scala 84:29]
    wire chi_xor_rhs_0_1 : UInt<64> @[Chi.scala 86:29]
    wire chi_xor_rhs_1_1 : UInt<64> @[Chi.scala 87:29]
    wire chi_xor_rhs_2_1 : UInt<64> @[Chi.scala 88:29]
    wire chi_xor_rhs_3_1 : UInt<64> @[Chi.scala 89:29]
    wire chi_xor_rhs_4_1 : UInt<64> @[Chi.scala 90:29]
    wire chi_xor_rhs_0_2 : UInt<64> @[Chi.scala 92:29]
    wire chi_xor_rhs_1_2 : UInt<64> @[Chi.scala 93:29]
    wire chi_xor_rhs_2_2 : UInt<64> @[Chi.scala 94:29]
    wire chi_xor_rhs_3_2 : UInt<64> @[Chi.scala 95:29]
    wire chi_xor_rhs_4_2 : UInt<64> @[Chi.scala 96:29]
    wire chi_xor_rhs_0_3 : UInt<64> @[Chi.scala 98:29]
    wire chi_xor_rhs_1_3 : UInt<64> @[Chi.scala 99:29]
    wire chi_xor_rhs_2_3 : UInt<64> @[Chi.scala 100:29]
    wire chi_xor_rhs_3_3 : UInt<64> @[Chi.scala 101:29]
    wire chi_xor_rhs_4_3 : UInt<64> @[Chi.scala 102:29]
    wire chi_xor_rhs_0_4 : UInt<64> @[Chi.scala 104:29]
    wire chi_xor_rhs_1_4 : UInt<64> @[Chi.scala 105:29]
    wire chi_xor_rhs_2_4 : UInt<64> @[Chi.scala 106:29]
    wire chi_xor_rhs_3_4 : UInt<64> @[Chi.scala 107:29]
    wire chi_xor_rhs_4_4 : UInt<64> @[Chi.scala 108:29]
    wire chi_negation_0_0 : UInt<64> @[Chi.scala 111:30]
    wire chi_negation_1_0 : UInt<64> @[Chi.scala 112:30]
    wire chi_negation_2_0 : UInt<64> @[Chi.scala 113:30]
    wire chi_negation_3_0 : UInt<64> @[Chi.scala 114:30]
    wire chi_negation_4_0 : UInt<64> @[Chi.scala 115:30]
    wire chi_negation_0_1 : UInt<64> @[Chi.scala 117:30]
    wire chi_negation_1_1 : UInt<64> @[Chi.scala 118:30]
    wire chi_negation_2_1 : UInt<64> @[Chi.scala 119:30]
    wire chi_negation_3_1 : UInt<64> @[Chi.scala 120:30]
    wire chi_negation_4_1 : UInt<64> @[Chi.scala 121:30]
    wire chi_negation_0_2 : UInt<64> @[Chi.scala 123:30]
    wire chi_negation_1_2 : UInt<64> @[Chi.scala 124:30]
    wire chi_negation_2_2 : UInt<64> @[Chi.scala 125:30]
    wire chi_negation_3_2 : UInt<64> @[Chi.scala 126:30]
    wire chi_negation_4_2 : UInt<64> @[Chi.scala 127:30]
    wire chi_negation_0_3 : UInt<64> @[Chi.scala 129:30]
    wire chi_negation_1_3 : UInt<64> @[Chi.scala 130:30]
    wire chi_negation_2_3 : UInt<64> @[Chi.scala 131:30]
    wire chi_negation_3_3 : UInt<64> @[Chi.scala 132:30]
    wire chi_negation_4_3 : UInt<64> @[Chi.scala 133:30]
    wire chi_negation_0_4 : UInt<64> @[Chi.scala 135:30]
    wire chi_negation_1_4 : UInt<64> @[Chi.scala 136:30]
    wire chi_negation_2_4 : UInt<64> @[Chi.scala 137:30]
    wire chi_negation_3_4 : UInt<64> @[Chi.scala 138:30]
    wire chi_negation_4_4 : UInt<64> @[Chi.scala 139:30]
    node _T = not(io.chi_in_1_0) @[Chi.scala 185:25]
    chi_negation_0_0 <= _T @[Chi.scala 185:22]
    node _T_1 = not(io.chi_in_1_1) @[Chi.scala 186:25]
    chi_negation_0_1 <= _T_1 @[Chi.scala 186:22]
    node _T_2 = not(io.chi_in_1_2) @[Chi.scala 187:25]
    chi_negation_0_2 <= _T_2 @[Chi.scala 187:22]
    node _T_3 = not(io.chi_in_1_3) @[Chi.scala 188:25]
    chi_negation_0_3 <= _T_3 @[Chi.scala 188:22]
    node _T_4 = not(io.chi_in_1_4) @[Chi.scala 189:25]
    chi_negation_0_4 <= _T_4 @[Chi.scala 189:22]
    node _T_5 = not(io.chi_in_2_0) @[Chi.scala 191:25]
    chi_negation_1_0 <= _T_5 @[Chi.scala 191:22]
    node _T_6 = not(io.chi_in_2_1) @[Chi.scala 192:25]
    chi_negation_1_1 <= _T_6 @[Chi.scala 192:22]
    node _T_7 = not(io.chi_in_2_2) @[Chi.scala 193:25]
    chi_negation_1_2 <= _T_7 @[Chi.scala 193:22]
    node _T_8 = not(io.chi_in_2_3) @[Chi.scala 194:25]
    chi_negation_1_3 <= _T_8 @[Chi.scala 194:22]
    node _T_9 = not(io.chi_in_2_4) @[Chi.scala 195:25]
    chi_negation_1_4 <= _T_9 @[Chi.scala 195:22]
    node _T_10 = not(io.chi_in_3_0) @[Chi.scala 197:25]
    chi_negation_2_0 <= _T_10 @[Chi.scala 197:22]
    node _T_11 = not(io.chi_in_3_1) @[Chi.scala 198:25]
    chi_negation_2_1 <= _T_11 @[Chi.scala 198:22]
    node _T_12 = not(io.chi_in_3_2) @[Chi.scala 199:25]
    chi_negation_2_2 <= _T_12 @[Chi.scala 199:22]
    node _T_13 = not(io.chi_in_3_3) @[Chi.scala 200:25]
    chi_negation_2_3 <= _T_13 @[Chi.scala 200:22]
    node _T_14 = not(io.chi_in_3_4) @[Chi.scala 201:25]
    chi_negation_2_4 <= _T_14 @[Chi.scala 201:22]
    node _T_15 = not(io.chi_in_4_0) @[Chi.scala 203:25]
    chi_negation_3_0 <= _T_15 @[Chi.scala 203:22]
    node _T_16 = not(io.chi_in_4_1) @[Chi.scala 204:25]
    chi_negation_3_1 <= _T_16 @[Chi.scala 204:22]
    node _T_17 = not(io.chi_in_4_2) @[Chi.scala 205:25]
    chi_negation_3_2 <= _T_17 @[Chi.scala 205:22]
    node _T_18 = not(io.chi_in_4_3) @[Chi.scala 206:25]
    chi_negation_3_3 <= _T_18 @[Chi.scala 206:22]
    node _T_19 = not(io.chi_in_4_4) @[Chi.scala 207:25]
    chi_negation_3_4 <= _T_19 @[Chi.scala 207:22]
    node _T_20 = not(io.chi_in_0_0) @[Chi.scala 209:25]
    chi_negation_4_0 <= _T_20 @[Chi.scala 209:22]
    node _T_21 = not(io.chi_in_0_1) @[Chi.scala 210:25]
    chi_negation_4_1 <= _T_21 @[Chi.scala 210:22]
    node _T_22 = not(io.chi_in_0_2) @[Chi.scala 211:25]
    chi_negation_4_2 <= _T_22 @[Chi.scala 211:22]
    node _T_23 = not(io.chi_in_0_3) @[Chi.scala 212:25]
    chi_negation_4_3 <= _T_23 @[Chi.scala 212:22]
    node _T_24 = not(io.chi_in_0_4) @[Chi.scala 213:25]
    chi_negation_4_4 <= _T_24 @[Chi.scala 213:22]
    node _T_25 = and(chi_negation_0_0, io.chi_in_2_0) @[Chi.scala 215:41]
    chi_xor_rhs_0_0 <= _T_25 @[Chi.scala 215:21]
    node _T_26 = and(chi_negation_0_1, io.chi_in_2_1) @[Chi.scala 216:41]
    chi_xor_rhs_0_1 <= _T_26 @[Chi.scala 216:21]
    node _T_27 = and(chi_negation_0_2, io.chi_in_2_2) @[Chi.scala 217:41]
    chi_xor_rhs_0_2 <= _T_27 @[Chi.scala 217:21]
    node _T_28 = and(chi_negation_0_3, io.chi_in_2_3) @[Chi.scala 218:41]
    chi_xor_rhs_0_3 <= _T_28 @[Chi.scala 218:21]
    node _T_29 = and(chi_negation_0_4, io.chi_in_2_4) @[Chi.scala 219:41]
    chi_xor_rhs_0_4 <= _T_29 @[Chi.scala 219:21]
    node _T_30 = and(chi_negation_1_0, io.chi_in_3_0) @[Chi.scala 221:41]
    chi_xor_rhs_1_0 <= _T_30 @[Chi.scala 221:21]
    node _T_31 = and(chi_negation_1_1, io.chi_in_3_1) @[Chi.scala 222:41]
    chi_xor_rhs_1_1 <= _T_31 @[Chi.scala 222:21]
    node _T_32 = and(chi_negation_1_2, io.chi_in_3_2) @[Chi.scala 223:41]
    chi_xor_rhs_1_2 <= _T_32 @[Chi.scala 223:21]
    node _T_33 = and(chi_negation_1_3, io.chi_in_3_3) @[Chi.scala 224:41]
    chi_xor_rhs_1_3 <= _T_33 @[Chi.scala 224:21]
    node _T_34 = and(chi_negation_1_4, io.chi_in_3_4) @[Chi.scala 225:41]
    chi_xor_rhs_1_4 <= _T_34 @[Chi.scala 225:21]
    node _T_35 = and(chi_negation_2_0, io.chi_in_4_0) @[Chi.scala 227:41]
    chi_xor_rhs_2_0 <= _T_35 @[Chi.scala 227:21]
    node _T_36 = and(chi_negation_2_1, io.chi_in_4_1) @[Chi.scala 228:41]
    chi_xor_rhs_2_1 <= _T_36 @[Chi.scala 228:21]
    node _T_37 = and(chi_negation_2_2, io.chi_in_4_2) @[Chi.scala 229:41]
    chi_xor_rhs_2_2 <= _T_37 @[Chi.scala 229:21]
    node _T_38 = and(chi_negation_2_3, io.chi_in_4_3) @[Chi.scala 230:41]
    chi_xor_rhs_2_3 <= _T_38 @[Chi.scala 230:21]
    node _T_39 = and(chi_negation_2_4, io.chi_in_4_4) @[Chi.scala 231:41]
    chi_xor_rhs_2_4 <= _T_39 @[Chi.scala 231:21]
    node _T_40 = and(chi_negation_3_0, io.chi_in_0_0) @[Chi.scala 233:41]
    chi_xor_rhs_3_0 <= _T_40 @[Chi.scala 233:21]
    node _T_41 = and(chi_negation_3_1, io.chi_in_0_1) @[Chi.scala 234:41]
    chi_xor_rhs_3_1 <= _T_41 @[Chi.scala 234:21]
    node _T_42 = and(chi_negation_3_2, io.chi_in_0_2) @[Chi.scala 235:41]
    chi_xor_rhs_3_2 <= _T_42 @[Chi.scala 235:21]
    node _T_43 = and(chi_negation_3_3, io.chi_in_0_3) @[Chi.scala 236:41]
    chi_xor_rhs_3_3 <= _T_43 @[Chi.scala 236:21]
    node _T_44 = and(chi_negation_3_4, io.chi_in_0_4) @[Chi.scala 237:41]
    chi_xor_rhs_3_4 <= _T_44 @[Chi.scala 237:21]
    node _T_45 = and(chi_negation_4_0, io.chi_in_1_0) @[Chi.scala 239:41]
    chi_xor_rhs_4_0 <= _T_45 @[Chi.scala 239:21]
    node _T_46 = and(chi_negation_4_1, io.chi_in_1_1) @[Chi.scala 240:41]
    chi_xor_rhs_4_1 <= _T_46 @[Chi.scala 240:21]
    node _T_47 = and(chi_negation_4_2, io.chi_in_1_2) @[Chi.scala 241:41]
    chi_xor_rhs_4_2 <= _T_47 @[Chi.scala 241:21]
    node _T_48 = and(chi_negation_4_3, io.chi_in_1_3) @[Chi.scala 242:41]
    chi_xor_rhs_4_3 <= _T_48 @[Chi.scala 242:21]
    node _T_49 = and(chi_negation_4_4, io.chi_in_1_4) @[Chi.scala 243:41]
    chi_xor_rhs_4_4 <= _T_49 @[Chi.scala 243:21]
    node _T_50 = xor(io.chi_in_0_0, chi_xor_rhs_0_0) @[Chi.scala 307:36]
    io.chi_out_0_0 <= _T_50 @[Chi.scala 307:20]
    node _T_51 = xor(io.chi_in_0_1, chi_xor_rhs_0_1) @[Chi.scala 308:36]
    io.chi_out_0_1 <= _T_51 @[Chi.scala 308:20]
    node _T_52 = xor(io.chi_in_0_2, chi_xor_rhs_0_2) @[Chi.scala 309:36]
    io.chi_out_0_2 <= _T_52 @[Chi.scala 309:20]
    node _T_53 = xor(io.chi_in_0_3, chi_xor_rhs_0_3) @[Chi.scala 310:36]
    io.chi_out_0_3 <= _T_53 @[Chi.scala 310:20]
    node _T_54 = xor(io.chi_in_0_4, chi_xor_rhs_0_4) @[Chi.scala 311:36]
    io.chi_out_0_4 <= _T_54 @[Chi.scala 311:20]
    node _T_55 = xor(io.chi_in_1_0, chi_xor_rhs_1_0) @[Chi.scala 313:36]
    io.chi_out_1_0 <= _T_55 @[Chi.scala 313:20]
    node _T_56 = xor(io.chi_in_1_1, chi_xor_rhs_1_1) @[Chi.scala 314:36]
    io.chi_out_1_1 <= _T_56 @[Chi.scala 314:20]
    node _T_57 = xor(io.chi_in_1_2, chi_xor_rhs_1_2) @[Chi.scala 315:36]
    io.chi_out_1_2 <= _T_57 @[Chi.scala 315:20]
    node _T_58 = xor(io.chi_in_1_3, chi_xor_rhs_1_3) @[Chi.scala 316:36]
    io.chi_out_1_3 <= _T_58 @[Chi.scala 316:20]
    node _T_59 = xor(io.chi_in_1_4, chi_xor_rhs_1_4) @[Chi.scala 317:36]
    io.chi_out_1_4 <= _T_59 @[Chi.scala 317:20]
    node _T_60 = xor(io.chi_in_2_0, chi_xor_rhs_2_0) @[Chi.scala 319:36]
    io.chi_out_2_0 <= _T_60 @[Chi.scala 319:20]
    node _T_61 = xor(io.chi_in_2_1, chi_xor_rhs_2_1) @[Chi.scala 320:36]
    io.chi_out_2_1 <= _T_61 @[Chi.scala 320:20]
    node _T_62 = xor(io.chi_in_2_2, chi_xor_rhs_2_2) @[Chi.scala 321:36]
    io.chi_out_2_2 <= _T_62 @[Chi.scala 321:20]
    node _T_63 = xor(io.chi_in_2_3, chi_xor_rhs_2_3) @[Chi.scala 322:36]
    io.chi_out_2_3 <= _T_63 @[Chi.scala 322:20]
    node _T_64 = xor(io.chi_in_2_4, chi_xor_rhs_2_4) @[Chi.scala 323:36]
    io.chi_out_2_4 <= _T_64 @[Chi.scala 323:20]
    node _T_65 = xor(io.chi_in_3_0, chi_xor_rhs_3_0) @[Chi.scala 325:36]
    io.chi_out_3_0 <= _T_65 @[Chi.scala 325:20]
    node _T_66 = xor(io.chi_in_3_1, chi_xor_rhs_3_1) @[Chi.scala 326:36]
    io.chi_out_3_1 <= _T_66 @[Chi.scala 326:20]
    node _T_67 = xor(io.chi_in_3_2, chi_xor_rhs_3_2) @[Chi.scala 327:36]
    io.chi_out_3_2 <= _T_67 @[Chi.scala 327:20]
    node _T_68 = xor(io.chi_in_3_3, chi_xor_rhs_3_3) @[Chi.scala 328:36]
    io.chi_out_3_3 <= _T_68 @[Chi.scala 328:20]
    node _T_69 = xor(io.chi_in_3_4, chi_xor_rhs_3_4) @[Chi.scala 329:36]
    io.chi_out_3_4 <= _T_69 @[Chi.scala 329:20]
    node _T_70 = xor(io.chi_in_4_0, chi_xor_rhs_4_0) @[Chi.scala 331:36]
    io.chi_out_4_0 <= _T_70 @[Chi.scala 331:20]
    node _T_71 = xor(io.chi_in_4_1, chi_xor_rhs_4_1) @[Chi.scala 332:36]
    io.chi_out_4_1 <= _T_71 @[Chi.scala 332:20]
    node _T_72 = xor(io.chi_in_4_2, chi_xor_rhs_4_2) @[Chi.scala 333:36]
    io.chi_out_4_2 <= _T_72 @[Chi.scala 333:20]
    node _T_73 = xor(io.chi_in_4_3, chi_xor_rhs_4_3) @[Chi.scala 334:36]
    io.chi_out_4_3 <= _T_73 @[Chi.scala 334:20]
    node _T_74 = xor(io.chi_in_4_4, chi_xor_rhs_4_4) @[Chi.scala 335:36]
    io.chi_out_4_4 <= _T_74 @[Chi.scala 335:20]
    
  module Iota : 
    input clock : Clock
    input reset : Reset
    output io : {flip iota_in : UInt<64>, iota_out : UInt<64>}
    
    wire RC : UInt<64>[24] @[Iota.scala 9:17]
    RC[0] <= UInt<1>("h01") @[Iota.scala 10:11]
    RC[1] <= UInt<16>("h08082") @[Iota.scala 11:11]
    RC[2] <= UInt<64>("h0800000000000808a") @[Iota.scala 12:11]
    RC[3] <= UInt<64>("h08000000080008000") @[Iota.scala 13:11]
    RC[4] <= UInt<16>("h0808b") @[Iota.scala 14:11]
    RC[5] <= UInt<32>("h080000001") @[Iota.scala 15:11]
    RC[6] <= UInt<64>("h08000000080008081") @[Iota.scala 16:11]
    RC[7] <= UInt<64>("h08000000000008009") @[Iota.scala 17:11]
    RC[8] <= UInt<8>("h08a") @[Iota.scala 18:11]
    RC[9] <= UInt<8>("h088") @[Iota.scala 19:11]
    RC[10] <= UInt<32>("h080008009") @[Iota.scala 20:11]
    RC[11] <= UInt<32>("h08000000a") @[Iota.scala 21:11]
    RC[12] <= UInt<32>("h08000808b") @[Iota.scala 22:11]
    RC[13] <= UInt<64>("h0800000000000008b") @[Iota.scala 23:11]
    RC[14] <= UInt<64>("h08000000000008089") @[Iota.scala 24:11]
    RC[15] <= UInt<64>("h08000000000008003") @[Iota.scala 25:11]
    RC[16] <= UInt<64>("h08000000000008002") @[Iota.scala 26:11]
    RC[17] <= UInt<64>("h08000000000000080") @[Iota.scala 27:11]
    RC[18] <= UInt<16>("h0800a") @[Iota.scala 28:11]
    RC[19] <= UInt<64>("h0800000008000000a") @[Iota.scala 29:11]
    RC[20] <= UInt<64>("h08000000080008081") @[Iota.scala 30:11]
    RC[21] <= UInt<64>("h08000000000008080") @[Iota.scala 31:11]
    RC[22] <= UInt<32>("h080000001") @[Iota.scala 32:11]
    RC[23] <= UInt<64>("h08000000080008008") @[Iota.scala 33:11]
    node _T = xor(io.iota_in, RC[0]) @[Iota.scala 36:28]
    io.iota_out <= _T @[Iota.scala 36:15]
    
  module Round : 
    input clock : Clock
    input reset : Reset
    output io : {flip round_in_0_0 : UInt<64>, flip round_in_1_0 : UInt<64>, flip round_in_2_0 : UInt<64>, flip round_in_3_0 : UInt<64>, flip round_in_4_0 : UInt<64>, flip round_in_0_1 : UInt<64>, flip round_in_1_1 : UInt<64>, flip round_in_2_1 : UInt<64>, flip round_in_3_1 : UInt<64>, flip round_in_4_1 : UInt<64>, flip round_in_0_2 : UInt<64>, flip round_in_1_2 : UInt<64>, flip round_in_2_2 : UInt<64>, flip round_in_3_2 : UInt<64>, flip round_in_4_2 : UInt<64>, flip round_in_0_3 : UInt<64>, flip round_in_1_3 : UInt<64>, flip round_in_2_3 : UInt<64>, flip round_in_3_3 : UInt<64>, flip round_in_4_3 : UInt<64>, flip round_in_0_4 : UInt<64>, flip round_in_1_4 : UInt<64>, flip round_in_2_4 : UInt<64>, flip round_in_3_4 : UInt<64>, flip round_in_4_4 : UInt<64>, round_out_0_0 : UInt<64>, round_out_1_0 : UInt<64>, round_out_2_0 : UInt<64>, round_out_3_0 : UInt<64>, round_out_4_0 : UInt<64>, round_out_0_1 : UInt<64>, round_out_1_1 : UInt<64>, round_out_2_1 : UInt<64>, round_out_3_1 : UInt<64>, round_out_4_1 : UInt<64>, round_out_0_2 : UInt<64>, round_out_1_2 : UInt<64>, round_out_2_2 : UInt<64>, round_out_3_2 : UInt<64>, round_out_4_2 : UInt<64>, round_out_0_3 : UInt<64>, round_out_1_3 : UInt<64>, round_out_2_3 : UInt<64>, round_out_3_3 : UInt<64>, round_out_4_3 : UInt<64>, round_out_0_4 : UInt<64>, round_out_1_4 : UInt<64>, round_out_2_4 : UInt<64>, round_out_3_4 : UInt<64>, round_out_4_4 : UInt<64>}
    
    inst theta of Theta @[Round.scala 60:27]
    theta.clock <= clock
    theta.reset <= reset
    inst rhoPi of RhoPi @[Round.scala 61:27]
    rhoPi.clock <= clock
    rhoPi.reset <= reset
    inst chi of Chi @[Round.scala 62:27]
    chi.clock <= clock
    chi.reset <= reset
    inst iota of Iota @[Round.scala 63:27]
    iota.clock <= clock
    iota.reset <= reset
    theta.io.theta_in_0_0 <= io.round_in_0_0 @[Round.scala 65:27]
    theta.io.theta_in_0_1 <= io.round_in_0_1 @[Round.scala 66:27]
    theta.io.theta_in_0_2 <= io.round_in_0_2 @[Round.scala 67:27]
    theta.io.theta_in_0_3 <= io.round_in_0_3 @[Round.scala 68:27]
    theta.io.theta_in_0_4 <= io.round_in_0_4 @[Round.scala 69:27]
    theta.io.theta_in_1_0 <= io.round_in_1_0 @[Round.scala 71:27]
    theta.io.theta_in_1_1 <= io.round_in_1_1 @[Round.scala 72:27]
    theta.io.theta_in_1_2 <= io.round_in_1_2 @[Round.scala 73:27]
    theta.io.theta_in_1_3 <= io.round_in_1_3 @[Round.scala 74:27]
    theta.io.theta_in_1_4 <= io.round_in_1_4 @[Round.scala 75:27]
    theta.io.theta_in_2_0 <= io.round_in_2_0 @[Round.scala 77:27]
    theta.io.theta_in_2_1 <= io.round_in_2_1 @[Round.scala 78:27]
    theta.io.theta_in_2_2 <= io.round_in_2_2 @[Round.scala 79:27]
    theta.io.theta_in_2_3 <= io.round_in_2_3 @[Round.scala 80:27]
    theta.io.theta_in_2_4 <= io.round_in_2_4 @[Round.scala 81:27]
    theta.io.theta_in_3_0 <= io.round_in_3_0 @[Round.scala 83:27]
    theta.io.theta_in_3_1 <= io.round_in_3_1 @[Round.scala 84:27]
    theta.io.theta_in_3_2 <= io.round_in_3_2 @[Round.scala 85:27]
    theta.io.theta_in_3_3 <= io.round_in_3_3 @[Round.scala 86:27]
    theta.io.theta_in_3_4 <= io.round_in_3_4 @[Round.scala 87:27]
    theta.io.theta_in_4_0 <= io.round_in_4_0 @[Round.scala 89:27]
    theta.io.theta_in_4_1 <= io.round_in_4_1 @[Round.scala 90:27]
    theta.io.theta_in_4_2 <= io.round_in_4_2 @[Round.scala 91:27]
    theta.io.theta_in_4_3 <= io.round_in_4_3 @[Round.scala 92:27]
    theta.io.theta_in_4_4 <= io.round_in_4_4 @[Round.scala 93:27]
    rhoPi.io.rhoPi_in_0_1 <= theta.io.theta_out_0_1 @[Round.scala 95:27]
    rhoPi.io.rhoPi_in_0_2 <= theta.io.theta_out_0_2 @[Round.scala 96:27]
    rhoPi.io.rhoPi_in_0_0 <= theta.io.theta_out_0_0 @[Round.scala 97:27]
    rhoPi.io.rhoPi_in_0_3 <= theta.io.theta_out_0_3 @[Round.scala 98:27]
    rhoPi.io.rhoPi_in_0_4 <= theta.io.theta_out_0_4 @[Round.scala 99:27]
    rhoPi.io.rhoPi_in_1_0 <= theta.io.theta_out_1_0 @[Round.scala 101:27]
    rhoPi.io.rhoPi_in_1_1 <= theta.io.theta_out_1_1 @[Round.scala 102:27]
    rhoPi.io.rhoPi_in_1_2 <= theta.io.theta_out_1_2 @[Round.scala 103:27]
    rhoPi.io.rhoPi_in_1_3 <= theta.io.theta_out_1_3 @[Round.scala 104:27]
    rhoPi.io.rhoPi_in_1_4 <= theta.io.theta_out_1_4 @[Round.scala 105:27]
    rhoPi.io.rhoPi_in_2_0 <= theta.io.theta_out_2_0 @[Round.scala 107:27]
    rhoPi.io.rhoPi_in_2_1 <= theta.io.theta_out_2_1 @[Round.scala 108:27]
    rhoPi.io.rhoPi_in_2_2 <= theta.io.theta_out_2_2 @[Round.scala 109:27]
    rhoPi.io.rhoPi_in_2_3 <= theta.io.theta_out_2_3 @[Round.scala 110:27]
    rhoPi.io.rhoPi_in_2_4 <= theta.io.theta_out_2_4 @[Round.scala 111:27]
    rhoPi.io.rhoPi_in_3_0 <= theta.io.theta_out_3_0 @[Round.scala 113:27]
    rhoPi.io.rhoPi_in_3_1 <= theta.io.theta_out_3_1 @[Round.scala 114:27]
    rhoPi.io.rhoPi_in_3_2 <= theta.io.theta_out_3_2 @[Round.scala 115:27]
    rhoPi.io.rhoPi_in_3_3 <= theta.io.theta_out_3_3 @[Round.scala 116:27]
    rhoPi.io.rhoPi_in_3_4 <= theta.io.theta_out_3_4 @[Round.scala 117:27]
    rhoPi.io.rhoPi_in_4_0 <= theta.io.theta_out_4_0 @[Round.scala 119:27]
    rhoPi.io.rhoPi_in_4_1 <= theta.io.theta_out_4_1 @[Round.scala 120:27]
    rhoPi.io.rhoPi_in_4_2 <= theta.io.theta_out_4_2 @[Round.scala 121:27]
    rhoPi.io.rhoPi_in_4_3 <= theta.io.theta_out_4_3 @[Round.scala 122:27]
    rhoPi.io.rhoPi_in_4_4 <= theta.io.theta_out_4_4 @[Round.scala 123:27]
    chi.io.chi_in_0_0 <= rhoPi.io.rhoPi_out_0_0 @[Round.scala 125:23]
    chi.io.chi_in_0_1 <= rhoPi.io.rhoPi_out_0_1 @[Round.scala 126:23]
    chi.io.chi_in_0_2 <= rhoPi.io.rhoPi_out_0_2 @[Round.scala 127:23]
    chi.io.chi_in_0_3 <= rhoPi.io.rhoPi_out_0_3 @[Round.scala 128:23]
    chi.io.chi_in_0_4 <= rhoPi.io.rhoPi_out_0_4 @[Round.scala 129:23]
    chi.io.chi_in_1_0 <= rhoPi.io.rhoPi_out_1_0 @[Round.scala 131:23]
    chi.io.chi_in_1_1 <= rhoPi.io.rhoPi_out_1_1 @[Round.scala 132:23]
    chi.io.chi_in_1_2 <= rhoPi.io.rhoPi_out_1_2 @[Round.scala 133:23]
    chi.io.chi_in_1_3 <= rhoPi.io.rhoPi_out_1_3 @[Round.scala 134:23]
    chi.io.chi_in_1_4 <= rhoPi.io.rhoPi_out_1_4 @[Round.scala 135:23]
    chi.io.chi_in_2_0 <= rhoPi.io.rhoPi_out_2_0 @[Round.scala 137:23]
    chi.io.chi_in_2_1 <= rhoPi.io.rhoPi_out_2_1 @[Round.scala 138:23]
    chi.io.chi_in_2_2 <= rhoPi.io.rhoPi_out_2_2 @[Round.scala 139:23]
    chi.io.chi_in_2_3 <= rhoPi.io.rhoPi_out_2_3 @[Round.scala 140:23]
    chi.io.chi_in_2_4 <= rhoPi.io.rhoPi_out_2_4 @[Round.scala 141:23]
    chi.io.chi_in_3_0 <= rhoPi.io.rhoPi_out_3_0 @[Round.scala 143:23]
    chi.io.chi_in_3_1 <= rhoPi.io.rhoPi_out_3_1 @[Round.scala 144:23]
    chi.io.chi_in_3_2 <= rhoPi.io.rhoPi_out_3_2 @[Round.scala 145:23]
    chi.io.chi_in_3_3 <= rhoPi.io.rhoPi_out_3_3 @[Round.scala 146:23]
    chi.io.chi_in_3_4 <= rhoPi.io.rhoPi_out_3_4 @[Round.scala 147:23]
    chi.io.chi_in_4_0 <= rhoPi.io.rhoPi_out_4_0 @[Round.scala 149:23]
    chi.io.chi_in_4_1 <= rhoPi.io.rhoPi_out_4_1 @[Round.scala 150:23]
    chi.io.chi_in_4_2 <= rhoPi.io.rhoPi_out_4_2 @[Round.scala 151:23]
    chi.io.chi_in_4_3 <= rhoPi.io.rhoPi_out_4_3 @[Round.scala 152:23]
    chi.io.chi_in_4_4 <= rhoPi.io.rhoPi_out_4_4 @[Round.scala 153:23]
    iota.io.iota_in <= chi.io.chi_in_0_0 @[Round.scala 155:24]
    io.round_out_0_0 <= iota.io.iota_out @[Round.scala 157:22]
    io.round_out_0_1 <= chi.io.chi_out_0_1 @[Round.scala 158:22]
    io.round_out_0_2 <= chi.io.chi_out_0_2 @[Round.scala 159:22]
    io.round_out_0_3 <= chi.io.chi_out_0_3 @[Round.scala 160:22]
    io.round_out_0_4 <= chi.io.chi_out_0_4 @[Round.scala 161:22]
    io.round_out_1_0 <= chi.io.chi_out_1_0 @[Round.scala 163:22]
    io.round_out_1_1 <= chi.io.chi_out_1_1 @[Round.scala 164:22]
    io.round_out_1_2 <= chi.io.chi_out_1_2 @[Round.scala 165:22]
    io.round_out_1_3 <= chi.io.chi_out_1_3 @[Round.scala 166:22]
    io.round_out_1_4 <= chi.io.chi_out_1_4 @[Round.scala 167:22]
    io.round_out_2_0 <= chi.io.chi_out_2_0 @[Round.scala 169:22]
    io.round_out_2_1 <= chi.io.chi_out_2_1 @[Round.scala 170:22]
    io.round_out_2_2 <= chi.io.chi_out_2_2 @[Round.scala 171:22]
    io.round_out_2_3 <= chi.io.chi_out_2_3 @[Round.scala 172:22]
    io.round_out_2_4 <= chi.io.chi_out_2_4 @[Round.scala 173:22]
    io.round_out_3_0 <= chi.io.chi_out_3_0 @[Round.scala 175:22]
    io.round_out_3_1 <= chi.io.chi_out_3_1 @[Round.scala 176:22]
    io.round_out_3_2 <= chi.io.chi_out_3_2 @[Round.scala 177:22]
    io.round_out_3_3 <= chi.io.chi_out_3_3 @[Round.scala 178:22]
    io.round_out_3_4 <= chi.io.chi_out_3_4 @[Round.scala 179:22]
    io.round_out_4_0 <= chi.io.chi_out_4_0 @[Round.scala 181:22]
    io.round_out_4_1 <= chi.io.chi_out_4_1 @[Round.scala 182:22]
    io.round_out_4_2 <= chi.io.chi_out_4_2 @[Round.scala 183:22]
    io.round_out_4_3 <= chi.io.chi_out_4_3 @[Round.scala 184:22]
    io.round_out_4_4 <= chi.io.chi_out_4_4 @[Round.scala 185:22]
    
  module StateRegister : 
    input clock : Clock
    input reset : Reset
    output io : {flip enable : UInt<1>, flip state_in_2_0 : UInt<64>, flip state_in_3_0 : UInt<64>, flip state_in_0_0 : UInt<64>, flip state_in_1_0 : UInt<64>, flip state_in_4_0 : UInt<64>, flip state_in_0_1 : UInt<64>, flip state_in_1_1 : UInt<64>, flip state_in_2_1 : UInt<64>, flip state_in_3_1 : UInt<64>, flip state_in_4_1 : UInt<64>, flip state_in_0_2 : UInt<64>, flip state_in_1_2 : UInt<64>, flip state_in_2_2 : UInt<64>, flip state_in_3_2 : UInt<64>, flip state_in_4_2 : UInt<64>, flip state_in_0_3 : UInt<64>, flip state_in_1_3 : UInt<64>, flip state_in_2_3 : UInt<64>, flip state_in_3_3 : UInt<64>, flip state_in_4_3 : UInt<64>, flip state_in_0_4 : UInt<64>, flip state_in_1_4 : UInt<64>, flip state_in_2_4 : UInt<64>, flip state_in_3_4 : UInt<64>, flip state_in_4_4 : UInt<64>, state_out_0_0 : UInt<64>, state_out_1_0 : UInt<64>, state_out_2_0 : UInt<64>, state_out_3_0 : UInt<64>, state_out_4_0 : UInt<64>, state_out_0_1 : UInt<64>, state_out_1_1 : UInt<64>, state_out_2_1 : UInt<64>, state_out_3_1 : UInt<64>, state_out_4_1 : UInt<64>, state_out_0_2 : UInt<64>, state_out_1_2 : UInt<64>, state_out_2_2 : UInt<64>, state_out_3_2 : UInt<64>, state_out_4_2 : UInt<64>, state_out_0_3 : UInt<64>, state_out_1_3 : UInt<64>, state_out_2_3 : UInt<64>, state_out_3_3 : UInt<64>, state_out_4_3 : UInt<64>, state_out_0_4 : UInt<64>, state_out_1_4 : UInt<64>, state_out_2_4 : UInt<64>, state_out_3_4 : UInt<64>, state_out_4_4 : UInt<64>}
    
    reg state_2_0_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 70:30]
    reg state_3_0_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 71:30]
    reg state_0_0_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 72:30]
    reg state_1_0_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 73:30]
    reg state_4_0_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 74:30]
    reg state_0_1_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 76:31]
    reg state_1_1_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 77:31]
    reg state_2_1_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 78:31]
    reg state_3_1_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 79:31]
    reg state_4_1_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 80:31]
    reg state_0_2_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 82:31]
    reg state_1_2_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 83:31]
    reg state_2_2_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 84:31]
    reg state_3_2_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 85:31]
    reg state_4_2_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 86:31]
    reg state_0_3_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 88:31]
    reg state_1_3_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 89:31]
    reg state_2_3_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 90:31]
    reg state_3_3_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 91:31]
    reg state_4_3_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 92:31]
    reg state_0_4_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 94:31]
    reg state_1_4_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 95:31]
    reg state_2_4_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 96:31]
    reg state_3_4_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 97:31]
    reg state_4_4_reg : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[StateRegister.scala 98:31]
    when io.enable : @[StateRegister.scala 99:18]
      state_0_0_reg <= io.state_in_2_0 @[StateRegister.scala 100:19]
      state_1_0_reg <= io.state_in_3_0 @[StateRegister.scala 101:19]
      state_2_0_reg <= io.state_in_0_0 @[StateRegister.scala 102:19]
      state_3_0_reg <= io.state_in_1_0 @[StateRegister.scala 103:19]
      state_4_0_reg <= io.state_in_4_0 @[StateRegister.scala 104:19]
      state_0_1_reg <= io.state_in_0_1 @[StateRegister.scala 106:19]
      state_1_1_reg <= io.state_in_1_1 @[StateRegister.scala 107:19]
      state_2_1_reg <= io.state_in_2_1 @[StateRegister.scala 108:19]
      state_3_1_reg <= io.state_in_3_1 @[StateRegister.scala 109:19]
      state_4_1_reg <= io.state_in_4_1 @[StateRegister.scala 110:19]
      state_0_2_reg <= io.state_in_0_2 @[StateRegister.scala 112:19]
      state_1_2_reg <= io.state_in_1_2 @[StateRegister.scala 113:19]
      state_2_2_reg <= io.state_in_2_2 @[StateRegister.scala 114:19]
      state_3_2_reg <= io.state_in_3_2 @[StateRegister.scala 115:19]
      state_4_2_reg <= io.state_in_4_2 @[StateRegister.scala 116:19]
      state_0_3_reg <= io.state_in_0_3 @[StateRegister.scala 118:19]
      state_1_3_reg <= io.state_in_1_3 @[StateRegister.scala 119:19]
      state_2_3_reg <= io.state_in_2_3 @[StateRegister.scala 120:19]
      state_3_3_reg <= io.state_in_3_3 @[StateRegister.scala 121:19]
      state_4_3_reg <= io.state_in_4_3 @[StateRegister.scala 122:19]
      state_0_4_reg <= io.state_in_0_4 @[StateRegister.scala 124:19]
      state_1_4_reg <= io.state_in_1_4 @[StateRegister.scala 125:19]
      state_2_4_reg <= io.state_in_2_4 @[StateRegister.scala 126:19]
      state_3_4_reg <= io.state_in_3_4 @[StateRegister.scala 127:19]
      state_4_4_reg <= io.state_in_4_4 @[StateRegister.scala 128:19]
      io.state_out_0_0 <= state_2_0_reg @[StateRegister.scala 130:22]
      io.state_out_1_0 <= state_3_0_reg @[StateRegister.scala 131:22]
      io.state_out_2_0 <= state_0_0_reg @[StateRegister.scala 132:22]
      io.state_out_3_0 <= state_1_0_reg @[StateRegister.scala 133:22]
      io.state_out_4_0 <= state_4_0_reg @[StateRegister.scala 134:22]
      io.state_out_0_1 <= state_0_1_reg @[StateRegister.scala 136:22]
      io.state_out_1_1 <= state_1_1_reg @[StateRegister.scala 137:22]
      io.state_out_2_1 <= state_2_1_reg @[StateRegister.scala 138:22]
      io.state_out_3_1 <= state_3_1_reg @[StateRegister.scala 139:22]
      io.state_out_4_1 <= state_4_1_reg @[StateRegister.scala 140:22]
      io.state_out_0_2 <= state_0_2_reg @[StateRegister.scala 142:22]
      io.state_out_1_2 <= state_1_2_reg @[StateRegister.scala 143:22]
      io.state_out_2_2 <= state_2_2_reg @[StateRegister.scala 144:22]
      io.state_out_3_2 <= state_3_2_reg @[StateRegister.scala 145:22]
      io.state_out_4_2 <= state_4_2_reg @[StateRegister.scala 146:22]
      io.state_out_0_3 <= state_0_3_reg @[StateRegister.scala 148:22]
      io.state_out_1_3 <= state_1_3_reg @[StateRegister.scala 149:22]
      io.state_out_2_3 <= state_2_3_reg @[StateRegister.scala 150:22]
      io.state_out_3_3 <= state_3_3_reg @[StateRegister.scala 151:22]
      io.state_out_4_3 <= state_4_3_reg @[StateRegister.scala 152:22]
      io.state_out_0_4 <= state_0_4_reg @[StateRegister.scala 154:22]
      io.state_out_1_4 <= state_1_4_reg @[StateRegister.scala 155:22]
      io.state_out_2_4 <= state_2_4_reg @[StateRegister.scala 156:22]
      io.state_out_3_4 <= state_3_4_reg @[StateRegister.scala 157:22]
      io.state_out_4_4 <= state_4_4_reg @[StateRegister.scala 158:22]
      skip @[StateRegister.scala 99:18]
    else : @[StateRegister.scala 159:14]
      state_0_0_reg <= state_0_0_reg @[StateRegister.scala 160:19]
      state_1_0_reg <= state_1_0_reg @[StateRegister.scala 161:19]
      state_2_0_reg <= state_2_0_reg @[StateRegister.scala 162:19]
      state_3_0_reg <= state_3_0_reg @[StateRegister.scala 163:19]
      state_4_0_reg <= state_4_0_reg @[StateRegister.scala 164:19]
      state_0_1_reg <= state_0_1_reg @[StateRegister.scala 166:19]
      state_1_1_reg <= state_1_1_reg @[StateRegister.scala 167:19]
      state_2_1_reg <= state_2_1_reg @[StateRegister.scala 168:19]
      state_3_1_reg <= state_3_1_reg @[StateRegister.scala 169:19]
      state_4_1_reg <= state_4_1_reg @[StateRegister.scala 170:19]
      state_0_2_reg <= state_0_2_reg @[StateRegister.scala 172:19]
      state_1_2_reg <= state_1_2_reg @[StateRegister.scala 173:19]
      state_2_2_reg <= state_2_2_reg @[StateRegister.scala 174:19]
      state_3_2_reg <= state_3_2_reg @[StateRegister.scala 175:19]
      state_4_2_reg <= state_4_2_reg @[StateRegister.scala 176:19]
      state_0_3_reg <= state_0_3_reg @[StateRegister.scala 178:19]
      state_1_3_reg <= state_1_3_reg @[StateRegister.scala 179:19]
      state_2_3_reg <= state_2_3_reg @[StateRegister.scala 180:19]
      state_3_3_reg <= state_3_3_reg @[StateRegister.scala 181:19]
      state_4_3_reg <= state_4_3_reg @[StateRegister.scala 182:19]
      state_0_4_reg <= state_0_4_reg @[StateRegister.scala 184:19]
      state_1_4_reg <= state_1_4_reg @[StateRegister.scala 185:19]
      state_2_4_reg <= state_2_4_reg @[StateRegister.scala 186:19]
      state_3_4_reg <= state_3_4_reg @[StateRegister.scala 187:19]
      state_4_4_reg <= state_4_4_reg @[StateRegister.scala 188:19]
      skip @[StateRegister.scala 159:14]
    io.state_out_0_0 <= state_2_0_reg @[StateRegister.scala 191:20]
    io.state_out_1_0 <= state_3_0_reg @[StateRegister.scala 192:20]
    io.state_out_2_0 <= state_0_0_reg @[StateRegister.scala 193:20]
    io.state_out_3_0 <= state_1_0_reg @[StateRegister.scala 194:20]
    io.state_out_4_0 <= state_4_0_reg @[StateRegister.scala 195:20]
    io.state_out_0_1 <= state_0_1_reg @[StateRegister.scala 197:20]
    io.state_out_1_1 <= state_1_1_reg @[StateRegister.scala 198:20]
    io.state_out_2_1 <= state_2_1_reg @[StateRegister.scala 199:20]
    io.state_out_3_1 <= state_3_1_reg @[StateRegister.scala 200:20]
    io.state_out_4_1 <= state_4_1_reg @[StateRegister.scala 201:20]
    io.state_out_0_2 <= state_0_2_reg @[StateRegister.scala 203:20]
    io.state_out_1_2 <= state_1_2_reg @[StateRegister.scala 204:20]
    io.state_out_2_2 <= state_2_2_reg @[StateRegister.scala 205:20]
    io.state_out_3_2 <= state_3_2_reg @[StateRegister.scala 206:20]
    io.state_out_4_2 <= state_4_2_reg @[StateRegister.scala 207:20]
    io.state_out_0_3 <= state_0_3_reg @[StateRegister.scala 209:20]
    io.state_out_1_3 <= state_1_3_reg @[StateRegister.scala 210:20]
    io.state_out_2_3 <= state_2_3_reg @[StateRegister.scala 211:20]
    io.state_out_3_3 <= state_3_3_reg @[StateRegister.scala 212:20]
    io.state_out_4_3 <= state_4_3_reg @[StateRegister.scala 213:20]
    io.state_out_0_4 <= state_0_4_reg @[StateRegister.scala 215:20]
    io.state_out_1_4 <= state_1_4_reg @[StateRegister.scala 216:20]
    io.state_out_2_4 <= state_2_4_reg @[StateRegister.scala 217:20]
    io.state_out_3_4 <= state_3_4_reg @[StateRegister.scala 218:20]
    io.state_out_4_4 <= state_4_4_reg @[StateRegister.scala 219:20]
    
  module Sha3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip w_in_from_outside : UInt<64>, flip data_read : UInt<1>, w_in_to_buffer : UInt<64>, flip block_length_in : UInt<64>, flip block_length_valid_from_env : UInt<1>, block_length_valid_to_fsm : UInt<1>, block_length_out : UInt<64>, flip data_valid_from_env : UInt<1>, data_valid_to_buffer : UInt<1>, flip testing_enable_state_register : UInt<1>, testing_round_counter : UInt<64>, testing_global_round_counter : UInt<64>, testing_buffer_counter : UInt<64>, testing_buffer_ready : UInt<1>, testing_hash_ready : UInt<1>, testing_select_for_xor : UInt<1>, testing_result : UInt<64>, testing_state_reg_0_0 : UInt<64>, testing_state_reg_0_1 : UInt<64>, testing_state_reg_0_2 : UInt<64>, testing_state_reg_0_3 : UInt<64>, testing_state_reg_0_4 : UInt<64>, testing_state_reg_1_1 : UInt<64>, testing_state_reg_1_2 : UInt<64>, testing_state_reg_1_3 : UInt<64>, testing_state_reg_1_4 : UInt<64>, testing_state_reg_1_0 : UInt<64>, testing_state_reg_2_2 : UInt<64>, testing_state_reg_2_3 : UInt<64>, testing_state_reg_2_4 : UInt<64>, testing_state_reg_2_0 : UInt<64>, testing_state_reg_2_1 : UInt<64>, testing_state_reg_3_4 : UInt<64>, testing_state_reg_3_0 : UInt<64>, testing_state_reg_3_1 : UInt<64>, testing_state_reg_3_2 : UInt<64>, testing_state_reg_3_3 : UInt<64>, testing_state_reg_4_0 : UInt<64>, testing_state_reg_4_1 : UInt<64>, testing_state_reg_4_2 : UInt<64>, testing_state_reg_4_3 : UInt<64>, testing_state_reg_4_4 : UInt<64>}
    
    inst buffer of Buffer @[Sha3.scala 56:31]
    buffer.clock <= clock
    buffer.reset <= reset
    inst fsm of FSM @[Sha3.scala 57:31]
    fsm.clock <= clock
    fsm.reset <= reset
    inst round of Round @[Sha3.scala 58:31]
    round.clock <= clock
    round.reset <= reset
    inst stateRegister of StateRegister @[Sha3.scala 59:31]
    stateRegister.clock <= clock
    stateRegister.reset <= reset
    io.data_valid_to_buffer <= io.data_valid_from_env @[Sha3.scala 61:28]
    reg block_length_reg : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[Sha3.scala 63:34]
    io.w_in_to_buffer <= io.w_in_from_outside @[Sha3.scala 65:31]
    buffer.io.w_in <= io.w_in_to_buffer @[Sha3.scala 66:31]
    fsm.io.buffer_ready <= buffer.io.bufferReady @[Sha3.scala 67:31]
    fsm.io.block_length_valid <= io.block_length_valid_to_fsm @[Sha3.scala 68:31]
    stateRegister.io.enable <= io.testing_enable_state_register @[Sha3.scala 71:35]
    buffer.io.roundReady <= fsm.io.select_for_xor @[Sha3.scala 73:35]
    buffer.io.dataRead <= io.data_read @[Sha3.scala 74:35]
    buffer.io.hashReady <= fsm.io.hash_ready @[Sha3.scala 75:35]
    buffer.io.dataValid <= io.data_valid_to_buffer @[Sha3.scala 76:35]
    io.testing_round_counter <= fsm.io.counter_for_test @[Sha3.scala 77:35]
    io.testing_global_round_counter <= fsm.io.global_counter_for_test @[Sha3.scala 78:35]
    io.testing_buffer_counter <= buffer.io.testing_buffer_counter @[Sha3.scala 79:35]
    io.testing_buffer_ready <= buffer.io.bufferReady @[Sha3.scala 80:35]
    io.testing_hash_ready <= fsm.io.hash_ready @[Sha3.scala 81:35]
    io.testing_select_for_xor <= fsm.io.select_for_xor @[Sha3.scala 82:35]
    fsm.io.block_length <= block_length_reg @[Sha3.scala 83:23]
    io.block_length_out <= block_length_reg @[Sha3.scala 84:23]
    when io.block_length_valid_from_env : @[Sha3.scala 86:39]
      block_length_reg <= io.block_length_in @[Sha3.scala 87:22]
      io.block_length_valid_to_fsm <= UInt<1>("h01") @[Sha3.scala 88:34]
      skip @[Sha3.scala 86:39]
    else : @[Sha3.scala 89:14]
      block_length_reg <= block_length_reg @[Sha3.scala 90:22]
      io.block_length_valid_to_fsm <= UInt<1>("h00") @[Sha3.scala 91:34]
      skip @[Sha3.scala 89:14]
    fsm.io.block_length <= block_length_reg @[Sha3.scala 94:25]
    when fsm.io.hash_ready : @[Sha3.scala 97:3]
      buffer.io.d_0 <= stateRegister.io.state_out_0_0 @[Sha3.scala 98:19]
      buffer.io.d_1 <= stateRegister.io.state_out_0_0 @[Sha3.scala 99:19]
      buffer.io.d_2 <= stateRegister.io.state_out_0_0 @[Sha3.scala 100:19]
      buffer.io.d_3 <= stateRegister.io.state_out_0_0 @[Sha3.scala 101:19]
      buffer.io.d_4 <= stateRegister.io.state_out_0_0 @[Sha3.scala 102:19]
      buffer.io.d_5 <= stateRegister.io.state_out_0_0 @[Sha3.scala 103:19]
      buffer.io.d_8 <= stateRegister.io.state_out_0_0 @[Sha3.scala 104:19]
      buffer.io.d_6 <= stateRegister.io.state_out_0_0 @[Sha3.scala 105:19]
      buffer.io.d_7 <= stateRegister.io.state_out_0_0 @[Sha3.scala 106:19]
      skip @[Sha3.scala 97:3]
    else : @[Sha3.scala 107:14]
      buffer.io.d_0 <= UInt<1>("h00") @[Sha3.scala 108:19]
      buffer.io.d_1 <= UInt<1>("h00") @[Sha3.scala 109:19]
      buffer.io.d_2 <= UInt<1>("h00") @[Sha3.scala 110:19]
      buffer.io.d_3 <= UInt<1>("h00") @[Sha3.scala 111:19]
      buffer.io.d_4 <= UInt<1>("h00") @[Sha3.scala 112:19]
      buffer.io.d_5 <= UInt<1>("h00") @[Sha3.scala 113:19]
      buffer.io.d_6 <= UInt<1>("h00") @[Sha3.scala 114:19]
      buffer.io.d_7 <= UInt<1>("h00") @[Sha3.scala 115:19]
      buffer.io.d_8 <= UInt<1>("h00") @[Sha3.scala 116:19]
      skip @[Sha3.scala 107:14]
    io.testing_result <= buffer.io.d_0 @[Sha3.scala 119:21]
    node _T = and(buffer.io.bufferReady, fsm.io.select_for_xor) @[Sha3.scala 122:30]
    when _T : @[Sha3.scala 122:55]
      node _T_1 = xor(stateRegister.io.state_out_0_0, buffer.io.r_0) @[Sha3.scala 123:61]
      round.io.round_in_0_0 <= _T_1 @[Sha3.scala 123:27]
      node _T_2 = xor(stateRegister.io.state_out_1_0, buffer.io.r_1) @[Sha3.scala 124:61]
      round.io.round_in_1_0 <= _T_2 @[Sha3.scala 124:27]
      node _T_3 = xor(stateRegister.io.state_out_2_0, buffer.io.r_2) @[Sha3.scala 125:61]
      round.io.round_in_2_0 <= _T_3 @[Sha3.scala 125:27]
      node _T_4 = xor(stateRegister.io.state_out_3_0, buffer.io.r_3) @[Sha3.scala 126:61]
      round.io.round_in_3_0 <= _T_4 @[Sha3.scala 126:27]
      node _T_5 = xor(stateRegister.io.state_out_4_0, buffer.io.r_4) @[Sha3.scala 127:61]
      round.io.round_in_4_0 <= _T_5 @[Sha3.scala 127:27]
      node _T_6 = xor(stateRegister.io.state_out_0_1, buffer.io.r_5) @[Sha3.scala 128:61]
      round.io.round_in_0_1 <= _T_6 @[Sha3.scala 128:27]
      node _T_7 = xor(stateRegister.io.state_out_1_1, buffer.io.r_6) @[Sha3.scala 129:61]
      round.io.round_in_1_1 <= _T_7 @[Sha3.scala 129:27]
      node _T_8 = xor(stateRegister.io.state_out_2_1, buffer.io.r_7) @[Sha3.scala 130:61]
      round.io.round_in_2_1 <= _T_8 @[Sha3.scala 130:27]
      node _T_9 = xor(stateRegister.io.state_out_3_1, buffer.io.r_8) @[Sha3.scala 131:61]
      round.io.round_in_3_1 <= _T_9 @[Sha3.scala 131:27]
      skip @[Sha3.scala 122:55]
    else : @[Sha3.scala 132:14]
      round.io.round_in_0_0 <= stateRegister.io.state_out_0_0 @[Sha3.scala 133:27]
      round.io.round_in_1_0 <= stateRegister.io.state_out_1_0 @[Sha3.scala 134:27]
      round.io.round_in_2_0 <= stateRegister.io.state_out_2_0 @[Sha3.scala 135:27]
      round.io.round_in_3_0 <= stateRegister.io.state_out_3_0 @[Sha3.scala 136:27]
      round.io.round_in_4_0 <= stateRegister.io.state_out_4_0 @[Sha3.scala 137:27]
      round.io.round_in_0_1 <= stateRegister.io.state_out_0_1 @[Sha3.scala 138:27]
      round.io.round_in_1_1 <= stateRegister.io.state_out_1_1 @[Sha3.scala 139:27]
      round.io.round_in_2_1 <= stateRegister.io.state_out_2_1 @[Sha3.scala 140:27]
      round.io.round_in_3_1 <= stateRegister.io.state_out_3_1 @[Sha3.scala 141:27]
      skip @[Sha3.scala 132:14]
    round.io.round_in_4_1 <= stateRegister.io.state_out_4_1 @[Sha3.scala 146:25]
    round.io.round_in_0_2 <= stateRegister.io.state_out_0_2 @[Sha3.scala 147:25]
    round.io.round_in_1_2 <= stateRegister.io.state_out_1_2 @[Sha3.scala 148:25]
    round.io.round_in_2_2 <= stateRegister.io.state_out_2_2 @[Sha3.scala 149:25]
    round.io.round_in_3_2 <= stateRegister.io.state_out_3_2 @[Sha3.scala 150:25]
    round.io.round_in_4_2 <= stateRegister.io.state_out_4_2 @[Sha3.scala 151:25]
    round.io.round_in_0_3 <= stateRegister.io.state_out_0_3 @[Sha3.scala 152:25]
    round.io.round_in_1_3 <= stateRegister.io.state_out_1_3 @[Sha3.scala 153:25]
    round.io.round_in_2_3 <= stateRegister.io.state_out_2_3 @[Sha3.scala 154:25]
    round.io.round_in_3_3 <= stateRegister.io.state_out_3_3 @[Sha3.scala 155:25]
    round.io.round_in_4_3 <= stateRegister.io.state_out_4_3 @[Sha3.scala 156:25]
    round.io.round_in_0_4 <= stateRegister.io.state_out_0_4 @[Sha3.scala 157:25]
    round.io.round_in_1_4 <= stateRegister.io.state_out_1_4 @[Sha3.scala 158:25]
    round.io.round_in_2_4 <= stateRegister.io.state_out_2_4 @[Sha3.scala 159:25]
    round.io.round_in_3_4 <= stateRegister.io.state_out_3_4 @[Sha3.scala 160:25]
    round.io.round_in_4_4 <= stateRegister.io.state_out_4_4 @[Sha3.scala 161:25]
    stateRegister.io.state_in_0_0 <= round.io.round_out_0_0 @[Sha3.scala 163:33]
    stateRegister.io.state_in_1_0 <= round.io.round_out_1_0 @[Sha3.scala 164:33]
    stateRegister.io.state_in_2_0 <= round.io.round_out_2_0 @[Sha3.scala 165:33]
    stateRegister.io.state_in_3_0 <= round.io.round_out_3_0 @[Sha3.scala 166:33]
    stateRegister.io.state_in_4_0 <= round.io.round_out_4_0 @[Sha3.scala 167:33]
    stateRegister.io.state_in_0_1 <= round.io.round_out_0_1 @[Sha3.scala 168:33]
    stateRegister.io.state_in_1_1 <= round.io.round_out_1_1 @[Sha3.scala 169:33]
    stateRegister.io.state_in_2_1 <= round.io.round_out_2_1 @[Sha3.scala 170:33]
    stateRegister.io.state_in_3_1 <= round.io.round_out_3_1 @[Sha3.scala 171:33]
    stateRegister.io.state_in_4_1 <= round.io.round_out_4_2 @[Sha3.scala 172:33]
    stateRegister.io.state_in_0_2 <= round.io.round_out_0_2 @[Sha3.scala 173:33]
    stateRegister.io.state_in_1_2 <= round.io.round_out_1_2 @[Sha3.scala 174:33]
    stateRegister.io.state_in_2_2 <= round.io.round_out_2_2 @[Sha3.scala 175:33]
    stateRegister.io.state_in_3_2 <= round.io.round_out_3_2 @[Sha3.scala 176:33]
    stateRegister.io.state_in_4_2 <= round.io.round_out_4_3 @[Sha3.scala 177:33]
    stateRegister.io.state_in_0_3 <= round.io.round_out_0_3 @[Sha3.scala 178:33]
    stateRegister.io.state_in_1_3 <= round.io.round_out_1_3 @[Sha3.scala 179:33]
    stateRegister.io.state_in_2_3 <= round.io.round_out_2_3 @[Sha3.scala 180:33]
    stateRegister.io.state_in_3_3 <= round.io.round_out_3_3 @[Sha3.scala 181:33]
    stateRegister.io.state_in_4_3 <= round.io.round_out_4_4 @[Sha3.scala 182:33]
    stateRegister.io.state_in_0_4 <= round.io.round_out_0_4 @[Sha3.scala 183:33]
    stateRegister.io.state_in_1_4 <= round.io.round_out_1_4 @[Sha3.scala 184:33]
    stateRegister.io.state_in_2_4 <= round.io.round_out_2_4 @[Sha3.scala 185:33]
    stateRegister.io.state_in_3_4 <= round.io.round_out_3_4 @[Sha3.scala 186:33]
    stateRegister.io.state_in_4_4 <= round.io.round_out_4_4 @[Sha3.scala 187:33]
    io.testing_state_reg_0_0 <= stateRegister.io.state_out_0_0 @[Sha3.scala 189:28]
    io.testing_state_reg_0_1 <= stateRegister.io.state_out_1_0 @[Sha3.scala 190:28]
    io.testing_state_reg_0_2 <= stateRegister.io.state_out_2_0 @[Sha3.scala 191:28]
    io.testing_state_reg_0_3 <= stateRegister.io.state_out_3_0 @[Sha3.scala 192:28]
    io.testing_state_reg_0_4 <= stateRegister.io.state_out_4_0 @[Sha3.scala 193:28]
    io.testing_state_reg_1_1 <= stateRegister.io.state_out_0_1 @[Sha3.scala 194:28]
    io.testing_state_reg_1_2 <= stateRegister.io.state_out_1_1 @[Sha3.scala 195:28]
    io.testing_state_reg_1_3 <= stateRegister.io.state_out_2_1 @[Sha3.scala 196:28]
    io.testing_state_reg_1_4 <= stateRegister.io.state_out_3_1 @[Sha3.scala 197:28]
    io.testing_state_reg_1_0 <= stateRegister.io.state_out_4_1 @[Sha3.scala 198:28]
    io.testing_state_reg_2_2 <= stateRegister.io.state_out_0_2 @[Sha3.scala 199:28]
    io.testing_state_reg_2_3 <= stateRegister.io.state_out_1_2 @[Sha3.scala 200:28]
    io.testing_state_reg_2_4 <= stateRegister.io.state_out_2_2 @[Sha3.scala 201:28]
    io.testing_state_reg_2_0 <= stateRegister.io.state_out_3_2 @[Sha3.scala 202:28]
    io.testing_state_reg_2_1 <= stateRegister.io.state_out_4_2 @[Sha3.scala 203:28]
    io.testing_state_reg_3_4 <= stateRegister.io.state_out_0_3 @[Sha3.scala 204:28]
    io.testing_state_reg_3_0 <= stateRegister.io.state_out_1_3 @[Sha3.scala 205:28]
    io.testing_state_reg_3_1 <= stateRegister.io.state_out_2_3 @[Sha3.scala 206:28]
    io.testing_state_reg_3_2 <= stateRegister.io.state_out_3_3 @[Sha3.scala 207:28]
    io.testing_state_reg_3_3 <= stateRegister.io.state_out_4_3 @[Sha3.scala 208:28]
    io.testing_state_reg_4_0 <= stateRegister.io.state_out_0_4 @[Sha3.scala 209:28]
    io.testing_state_reg_4_1 <= stateRegister.io.state_out_1_4 @[Sha3.scala 210:28]
    io.testing_state_reg_4_2 <= stateRegister.io.state_out_2_4 @[Sha3.scala 211:28]
    io.testing_state_reg_4_3 <= stateRegister.io.state_out_3_4 @[Sha3.scala 212:28]
    io.testing_state_reg_4_4 <= stateRegister.io.state_out_4_4 @[Sha3.scala 213:28]
    
