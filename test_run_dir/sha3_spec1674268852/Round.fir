;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Round : 
  module Theta : 
    input clock : Clock
    input reset : Reset
    output io : {flip theta_in : UInt<64>[5][5], theta_out : UInt<64>[5][5]}
    
    wire st : UInt<64>[5][5] @[Theta.scala 10:17]
    wire rotation1 : UInt<64>[5] @[Theta.scala 13:23]
    wire rotation2 : UInt<64>[5] @[Theta.scala 14:23]
    wire rotation_result : UInt<64>[5] @[Theta.scala 15:29]
    io.theta_out[0][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    rotation1[0] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[0] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[1] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[1] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[2] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[2] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[3] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[3] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[4] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[4] <= UInt<1>("h00") @[Theta.scala 25:18]
    wire c : UInt<64>[5] @[Theta.scala 32:15]
    wire d : UInt<64>[5] @[Theta.scala 33:15]
    node _T = xor(io.theta_in[0][0], io.theta_in[0][1]) @[Theta.scala 36:30]
    node _T_1 = xor(_T, io.theta_in[0][2]) @[Theta.scala 36:48]
    node _T_2 = xor(_T_1, io.theta_in[0][3]) @[Theta.scala 36:66]
    node _T_3 = xor(_T_2, io.theta_in[0][4]) @[Theta.scala 36:84]
    c[0] <= _T_3 @[Theta.scala 36:10]
    node _T_4 = xor(io.theta_in[1][0], io.theta_in[1][1]) @[Theta.scala 36:30]
    node _T_5 = xor(_T_4, io.theta_in[1][2]) @[Theta.scala 36:48]
    node _T_6 = xor(_T_5, io.theta_in[1][3]) @[Theta.scala 36:66]
    node _T_7 = xor(_T_6, io.theta_in[1][4]) @[Theta.scala 36:84]
    c[1] <= _T_7 @[Theta.scala 36:10]
    node _T_8 = xor(io.theta_in[2][0], io.theta_in[2][1]) @[Theta.scala 36:30]
    node _T_9 = xor(_T_8, io.theta_in[2][2]) @[Theta.scala 36:48]
    node _T_10 = xor(_T_9, io.theta_in[2][3]) @[Theta.scala 36:66]
    node _T_11 = xor(_T_10, io.theta_in[2][4]) @[Theta.scala 36:84]
    c[2] <= _T_11 @[Theta.scala 36:10]
    node _T_12 = xor(io.theta_in[3][0], io.theta_in[3][1]) @[Theta.scala 36:30]
    node _T_13 = xor(_T_12, io.theta_in[3][2]) @[Theta.scala 36:48]
    node _T_14 = xor(_T_13, io.theta_in[3][3]) @[Theta.scala 36:66]
    node _T_15 = xor(_T_14, io.theta_in[3][4]) @[Theta.scala 36:84]
    c[3] <= _T_15 @[Theta.scala 36:10]
    node _T_16 = xor(io.theta_in[4][0], io.theta_in[4][1]) @[Theta.scala 36:30]
    node _T_17 = xor(_T_16, io.theta_in[4][2]) @[Theta.scala 36:48]
    node _T_18 = xor(_T_17, io.theta_in[4][3]) @[Theta.scala 36:66]
    node _T_19 = xor(_T_18, io.theta_in[4][4]) @[Theta.scala 36:84]
    c[4] <= _T_19 @[Theta.scala 36:10]
    node _T_20 = shl(c[1], 1) @[Theta.scala 42:44]
    rotation1[0] <= _T_20 @[Theta.scala 42:25]
    node _T_21 = shr(c[1], 63) @[Theta.scala 43:44]
    rotation2[0] <= _T_21 @[Theta.scala 43:25]
    node _T_22 = or(rotation1[0], rotation2[0]) @[Theta.scala 44:41]
    rotation_result[0] <= _T_22 @[Theta.scala 44:25]
    node _T_23 = xor(c[4], rotation_result[0]) @[Theta.scala 45:30]
    d[0] <= _T_23 @[Theta.scala 45:11]
    node _T_24 = shl(c[2], 1) @[Theta.scala 42:44]
    rotation1[1] <= _T_24 @[Theta.scala 42:25]
    node _T_25 = shr(c[2], 63) @[Theta.scala 43:44]
    rotation2[1] <= _T_25 @[Theta.scala 43:25]
    node _T_26 = or(rotation1[1], rotation2[1]) @[Theta.scala 44:41]
    rotation_result[1] <= _T_26 @[Theta.scala 44:25]
    node _T_27 = xor(c[0], rotation_result[1]) @[Theta.scala 45:30]
    d[1] <= _T_27 @[Theta.scala 45:11]
    node _T_28 = shl(c[3], 1) @[Theta.scala 42:44]
    rotation1[2] <= _T_28 @[Theta.scala 42:25]
    node _T_29 = shr(c[3], 63) @[Theta.scala 43:44]
    rotation2[2] <= _T_29 @[Theta.scala 43:25]
    node _T_30 = or(rotation1[2], rotation2[2]) @[Theta.scala 44:41]
    rotation_result[2] <= _T_30 @[Theta.scala 44:25]
    node _T_31 = xor(c[1], rotation_result[2]) @[Theta.scala 45:30]
    d[2] <= _T_31 @[Theta.scala 45:11]
    node _T_32 = shl(c[4], 1) @[Theta.scala 42:44]
    rotation1[3] <= _T_32 @[Theta.scala 42:25]
    node _T_33 = shr(c[4], 63) @[Theta.scala 43:44]
    rotation2[3] <= _T_33 @[Theta.scala 43:25]
    node _T_34 = or(rotation1[3], rotation2[3]) @[Theta.scala 44:41]
    rotation_result[3] <= _T_34 @[Theta.scala 44:25]
    node _T_35 = xor(c[2], rotation_result[3]) @[Theta.scala 45:30]
    d[3] <= _T_35 @[Theta.scala 45:11]
    node _T_36 = shl(c[0], 1) @[Theta.scala 42:44]
    rotation1[4] <= _T_36 @[Theta.scala 42:25]
    node _T_37 = shr(c[0], 63) @[Theta.scala 43:44]
    rotation2[4] <= _T_37 @[Theta.scala 43:25]
    node _T_38 = or(rotation1[4], rotation2[4]) @[Theta.scala 44:41]
    rotation_result[4] <= _T_38 @[Theta.scala 44:25]
    node _T_39 = xor(c[3], rotation_result[4]) @[Theta.scala 45:30]
    d[4] <= _T_39 @[Theta.scala 45:11]
    node _T_40 = xor(io.theta_in[0][0], d[0]) @[Theta.scala 51:38]
    st[0][0] <= _T_40 @[Theta.scala 51:18]
    node _T_41 = xor(io.theta_in[0][1], d[0]) @[Theta.scala 51:38]
    st[0][1] <= _T_41 @[Theta.scala 51:18]
    node _T_42 = xor(io.theta_in[0][2], d[0]) @[Theta.scala 51:38]
    st[0][2] <= _T_42 @[Theta.scala 51:18]
    node _T_43 = xor(io.theta_in[0][3], d[0]) @[Theta.scala 51:38]
    st[0][3] <= _T_43 @[Theta.scala 51:18]
    node _T_44 = xor(io.theta_in[0][4], d[0]) @[Theta.scala 51:38]
    st[0][4] <= _T_44 @[Theta.scala 51:18]
    node _T_45 = xor(io.theta_in[1][0], d[1]) @[Theta.scala 51:38]
    st[1][0] <= _T_45 @[Theta.scala 51:18]
    node _T_46 = xor(io.theta_in[1][1], d[1]) @[Theta.scala 51:38]
    st[1][1] <= _T_46 @[Theta.scala 51:18]
    node _T_47 = xor(io.theta_in[1][2], d[1]) @[Theta.scala 51:38]
    st[1][2] <= _T_47 @[Theta.scala 51:18]
    node _T_48 = xor(io.theta_in[1][3], d[1]) @[Theta.scala 51:38]
    st[1][3] <= _T_48 @[Theta.scala 51:18]
    node _T_49 = xor(io.theta_in[1][4], d[1]) @[Theta.scala 51:38]
    st[1][4] <= _T_49 @[Theta.scala 51:18]
    node _T_50 = xor(io.theta_in[2][0], d[2]) @[Theta.scala 51:38]
    st[2][0] <= _T_50 @[Theta.scala 51:18]
    node _T_51 = xor(io.theta_in[2][1], d[2]) @[Theta.scala 51:38]
    st[2][1] <= _T_51 @[Theta.scala 51:18]
    node _T_52 = xor(io.theta_in[2][2], d[2]) @[Theta.scala 51:38]
    st[2][2] <= _T_52 @[Theta.scala 51:18]
    node _T_53 = xor(io.theta_in[2][3], d[2]) @[Theta.scala 51:38]
    st[2][3] <= _T_53 @[Theta.scala 51:18]
    node _T_54 = xor(io.theta_in[2][4], d[2]) @[Theta.scala 51:38]
    st[2][4] <= _T_54 @[Theta.scala 51:18]
    node _T_55 = xor(io.theta_in[3][0], d[3]) @[Theta.scala 51:38]
    st[3][0] <= _T_55 @[Theta.scala 51:18]
    node _T_56 = xor(io.theta_in[3][1], d[3]) @[Theta.scala 51:38]
    st[3][1] <= _T_56 @[Theta.scala 51:18]
    node _T_57 = xor(io.theta_in[3][2], d[3]) @[Theta.scala 51:38]
    st[3][2] <= _T_57 @[Theta.scala 51:18]
    node _T_58 = xor(io.theta_in[3][3], d[3]) @[Theta.scala 51:38]
    st[3][3] <= _T_58 @[Theta.scala 51:18]
    node _T_59 = xor(io.theta_in[3][4], d[3]) @[Theta.scala 51:38]
    st[3][4] <= _T_59 @[Theta.scala 51:18]
    node _T_60 = xor(io.theta_in[4][0], d[4]) @[Theta.scala 51:38]
    st[4][0] <= _T_60 @[Theta.scala 51:18]
    node _T_61 = xor(io.theta_in[4][1], d[4]) @[Theta.scala 51:38]
    st[4][1] <= _T_61 @[Theta.scala 51:18]
    node _T_62 = xor(io.theta_in[4][2], d[4]) @[Theta.scala 51:38]
    st[4][2] <= _T_62 @[Theta.scala 51:18]
    node _T_63 = xor(io.theta_in[4][3], d[4]) @[Theta.scala 51:38]
    st[4][3] <= _T_63 @[Theta.scala 51:18]
    node _T_64 = xor(io.theta_in[4][4], d[4]) @[Theta.scala 51:38]
    st[4][4] <= _T_64 @[Theta.scala 51:18]
    io.theta_out[0][0] <= st[0][0] @[Theta.scala 53:16]
    io.theta_out[0][1] <= st[0][1] @[Theta.scala 53:16]
    io.theta_out[0][2] <= st[0][2] @[Theta.scala 53:16]
    io.theta_out[0][3] <= st[0][3] @[Theta.scala 53:16]
    io.theta_out[0][4] <= st[0][4] @[Theta.scala 53:16]
    io.theta_out[1][0] <= st[1][0] @[Theta.scala 53:16]
    io.theta_out[1][1] <= st[1][1] @[Theta.scala 53:16]
    io.theta_out[1][2] <= st[1][2] @[Theta.scala 53:16]
    io.theta_out[1][3] <= st[1][3] @[Theta.scala 53:16]
    io.theta_out[1][4] <= st[1][4] @[Theta.scala 53:16]
    io.theta_out[2][0] <= st[2][0] @[Theta.scala 53:16]
    io.theta_out[2][1] <= st[2][1] @[Theta.scala 53:16]
    io.theta_out[2][2] <= st[2][2] @[Theta.scala 53:16]
    io.theta_out[2][3] <= st[2][3] @[Theta.scala 53:16]
    io.theta_out[2][4] <= st[2][4] @[Theta.scala 53:16]
    io.theta_out[3][0] <= st[3][0] @[Theta.scala 53:16]
    io.theta_out[3][1] <= st[3][1] @[Theta.scala 53:16]
    io.theta_out[3][2] <= st[3][2] @[Theta.scala 53:16]
    io.theta_out[3][3] <= st[3][3] @[Theta.scala 53:16]
    io.theta_out[3][4] <= st[3][4] @[Theta.scala 53:16]
    io.theta_out[4][0] <= st[4][0] @[Theta.scala 53:16]
    io.theta_out[4][1] <= st[4][1] @[Theta.scala 53:16]
    io.theta_out[4][2] <= st[4][2] @[Theta.scala 53:16]
    io.theta_out[4][3] <= st[4][3] @[Theta.scala 53:16]
    io.theta_out[4][4] <= st[4][4] @[Theta.scala 53:16]
    
  module RhoPi : 
    input clock : Clock
    input reset : Reset
    output io : {flip rhoPi_in : UInt<64>[5][5], rhoPi_out : UInt<64>[5][5]}
    
    wire r : UInt<19>[5][5] @[RhoPi.scala 9:17]
    r[0][0] <= UInt<1>("h00") @[RhoPi.scala 10:11]
    r[0][1] <= UInt<6>("h024") @[RhoPi.scala 11:11]
    r[0][2] <= UInt<2>("h03") @[RhoPi.scala 12:11]
    r[0][3] <= UInt<6>("h029") @[RhoPi.scala 13:11]
    r[0][4] <= UInt<5>("h012") @[RhoPi.scala 14:11]
    r[1][0] <= UInt<1>("h01") @[RhoPi.scala 15:11]
    r[1][1] <= UInt<6>("h02c") @[RhoPi.scala 16:11]
    r[1][2] <= UInt<4>("h0a") @[RhoPi.scala 17:11]
    r[1][3] <= UInt<6>("h02d") @[RhoPi.scala 18:11]
    r[1][4] <= UInt<2>("h02") @[RhoPi.scala 19:11]
    r[2][0] <= UInt<6>("h03e") @[RhoPi.scala 20:11]
    r[2][1] <= UInt<3>("h06") @[RhoPi.scala 21:11]
    r[2][2] <= UInt<6>("h02b") @[RhoPi.scala 22:11]
    r[2][3] <= UInt<4>("h0f") @[RhoPi.scala 23:11]
    r[2][4] <= UInt<6>("h03d") @[RhoPi.scala 24:11]
    r[3][0] <= UInt<5>("h01c") @[RhoPi.scala 25:11]
    r[3][1] <= UInt<6>("h037") @[RhoPi.scala 26:11]
    r[3][2] <= UInt<5>("h019") @[RhoPi.scala 27:11]
    r[3][3] <= UInt<5>("h015") @[RhoPi.scala 28:11]
    r[3][4] <= UInt<6>("h038") @[RhoPi.scala 29:11]
    r[4][0] <= UInt<5>("h01b") @[RhoPi.scala 30:11]
    r[4][1] <= UInt<5>("h014") @[RhoPi.scala 31:11]
    r[4][2] <= UInt<6>("h027") @[RhoPi.scala 32:11]
    r[4][3] <= UInt<4>("h08") @[RhoPi.scala 33:11]
    r[4][4] <= UInt<4>("h0e") @[RhoPi.scala 34:11]
    node _T = dshl(io.rhoPi_in[0][0], r[0][0]) @[RhoPi.scala 39:70]
    io.rhoPi_out[0][0] <= _T @[RhoPi.scala 39:49]
    node _T_1 = dshl(io.rhoPi_in[0][1], r[0][1]) @[RhoPi.scala 39:70]
    io.rhoPi_out[1][3] <= _T_1 @[RhoPi.scala 39:49]
    node _T_2 = dshl(io.rhoPi_in[0][2], r[0][2]) @[RhoPi.scala 39:70]
    io.rhoPi_out[2][1] <= _T_2 @[RhoPi.scala 39:49]
    node _T_3 = dshl(io.rhoPi_in[0][3], r[0][3]) @[RhoPi.scala 39:70]
    io.rhoPi_out[3][4] <= _T_3 @[RhoPi.scala 39:49]
    node _T_4 = dshl(io.rhoPi_in[0][4], r[0][4]) @[RhoPi.scala 39:70]
    io.rhoPi_out[4][2] <= _T_4 @[RhoPi.scala 39:49]
    node _T_5 = dshl(io.rhoPi_in[1][0], r[1][0]) @[RhoPi.scala 39:70]
    io.rhoPi_out[0][2] <= _T_5 @[RhoPi.scala 39:49]
    node _T_6 = dshl(io.rhoPi_in[1][1], r[1][1]) @[RhoPi.scala 39:70]
    io.rhoPi_out[1][0] <= _T_6 @[RhoPi.scala 39:49]
    node _T_7 = dshl(io.rhoPi_in[1][2], r[1][2]) @[RhoPi.scala 39:70]
    io.rhoPi_out[2][3] <= _T_7 @[RhoPi.scala 39:49]
    node _T_8 = dshl(io.rhoPi_in[1][3], r[1][3]) @[RhoPi.scala 39:70]
    io.rhoPi_out[3][1] <= _T_8 @[RhoPi.scala 39:49]
    node _T_9 = dshl(io.rhoPi_in[1][4], r[1][4]) @[RhoPi.scala 39:70]
    io.rhoPi_out[4][4] <= _T_9 @[RhoPi.scala 39:49]
    node _T_10 = dshl(io.rhoPi_in[2][0], r[2][0]) @[RhoPi.scala 39:70]
    io.rhoPi_out[0][4] <= _T_10 @[RhoPi.scala 39:49]
    node _T_11 = dshl(io.rhoPi_in[2][1], r[2][1]) @[RhoPi.scala 39:70]
    io.rhoPi_out[1][2] <= _T_11 @[RhoPi.scala 39:49]
    node _T_12 = dshl(io.rhoPi_in[2][2], r[2][2]) @[RhoPi.scala 39:70]
    io.rhoPi_out[2][0] <= _T_12 @[RhoPi.scala 39:49]
    node _T_13 = dshl(io.rhoPi_in[2][3], r[2][3]) @[RhoPi.scala 39:70]
    io.rhoPi_out[3][3] <= _T_13 @[RhoPi.scala 39:49]
    node _T_14 = dshl(io.rhoPi_in[2][4], r[2][4]) @[RhoPi.scala 39:70]
    io.rhoPi_out[4][1] <= _T_14 @[RhoPi.scala 39:49]
    node _T_15 = dshl(io.rhoPi_in[3][0], r[3][0]) @[RhoPi.scala 39:70]
    io.rhoPi_out[0][1] <= _T_15 @[RhoPi.scala 39:49]
    node _T_16 = dshl(io.rhoPi_in[3][1], r[3][1]) @[RhoPi.scala 39:70]
    io.rhoPi_out[1][4] <= _T_16 @[RhoPi.scala 39:49]
    node _T_17 = dshl(io.rhoPi_in[3][2], r[3][2]) @[RhoPi.scala 39:70]
    io.rhoPi_out[2][2] <= _T_17 @[RhoPi.scala 39:49]
    node _T_18 = dshl(io.rhoPi_in[3][3], r[3][3]) @[RhoPi.scala 39:70]
    io.rhoPi_out[3][0] <= _T_18 @[RhoPi.scala 39:49]
    node _T_19 = dshl(io.rhoPi_in[3][4], r[3][4]) @[RhoPi.scala 39:70]
    io.rhoPi_out[4][3] <= _T_19 @[RhoPi.scala 39:49]
    node _T_20 = dshl(io.rhoPi_in[4][0], r[4][0]) @[RhoPi.scala 39:70]
    io.rhoPi_out[0][3] <= _T_20 @[RhoPi.scala 39:49]
    node _T_21 = dshl(io.rhoPi_in[4][1], r[4][1]) @[RhoPi.scala 39:70]
    io.rhoPi_out[1][1] <= _T_21 @[RhoPi.scala 39:49]
    node _T_22 = dshl(io.rhoPi_in[4][2], r[4][2]) @[RhoPi.scala 39:70]
    io.rhoPi_out[2][4] <= _T_22 @[RhoPi.scala 39:49]
    node _T_23 = dshl(io.rhoPi_in[4][3], r[4][3]) @[RhoPi.scala 39:70]
    io.rhoPi_out[3][2] <= _T_23 @[RhoPi.scala 39:49]
    node _T_24 = dshl(io.rhoPi_in[4][4], r[4][4]) @[RhoPi.scala 39:70]
    io.rhoPi_out[4][0] <= _T_24 @[RhoPi.scala 39:49]
    
  module Chi : 
    input clock : Clock
    input reset : Reset
    output io : {flip chi_in : UInt<64>[5][5], chi_out : UInt<64>[5][5]}
    
    wire chi_wire : UInt<64> @[Chi.scala 9:25]
    wire chi_b_wire : UInt<64> @[Chi.scala 10:25]
    wire chi_not_wire : UInt<64> @[Chi.scala 11:26]
    node _T = not(io.chi_in[1][0]) @[Chi.scala 14:23]
    chi_not_wire <= _T @[Chi.scala 14:20]
    node _T_1 = and(chi_not_wire, io.chi_in[2][0]) @[Chi.scala 15:33]
    chi_wire <= _T_1 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[0][0] @[Chi.scala 16:18]
    node _T_2 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[0][0] <= _T_2 @[Chi.scala 17:24]
    node _T_3 = not(io.chi_in[1][1]) @[Chi.scala 14:23]
    chi_not_wire <= _T_3 @[Chi.scala 14:20]
    node _T_4 = and(chi_not_wire, io.chi_in[2][1]) @[Chi.scala 15:33]
    chi_wire <= _T_4 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[0][1] @[Chi.scala 16:18]
    node _T_5 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[0][1] <= _T_5 @[Chi.scala 17:24]
    node _T_6 = not(io.chi_in[1][2]) @[Chi.scala 14:23]
    chi_not_wire <= _T_6 @[Chi.scala 14:20]
    node _T_7 = and(chi_not_wire, io.chi_in[2][2]) @[Chi.scala 15:33]
    chi_wire <= _T_7 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[0][2] @[Chi.scala 16:18]
    node _T_8 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[0][2] <= _T_8 @[Chi.scala 17:24]
    node _T_9 = not(io.chi_in[1][3]) @[Chi.scala 14:23]
    chi_not_wire <= _T_9 @[Chi.scala 14:20]
    node _T_10 = and(chi_not_wire, io.chi_in[2][3]) @[Chi.scala 15:33]
    chi_wire <= _T_10 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[0][3] @[Chi.scala 16:18]
    node _T_11 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[0][3] <= _T_11 @[Chi.scala 17:24]
    node _T_12 = not(io.chi_in[1][4]) @[Chi.scala 14:23]
    chi_not_wire <= _T_12 @[Chi.scala 14:20]
    node _T_13 = and(chi_not_wire, io.chi_in[2][4]) @[Chi.scala 15:33]
    chi_wire <= _T_13 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[0][4] @[Chi.scala 16:18]
    node _T_14 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[0][4] <= _T_14 @[Chi.scala 17:24]
    node _T_15 = not(io.chi_in[2][0]) @[Chi.scala 14:23]
    chi_not_wire <= _T_15 @[Chi.scala 14:20]
    node _T_16 = and(chi_not_wire, io.chi_in[3][0]) @[Chi.scala 15:33]
    chi_wire <= _T_16 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[1][0] @[Chi.scala 16:18]
    node _T_17 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[1][0] <= _T_17 @[Chi.scala 17:24]
    node _T_18 = not(io.chi_in[2][1]) @[Chi.scala 14:23]
    chi_not_wire <= _T_18 @[Chi.scala 14:20]
    node _T_19 = and(chi_not_wire, io.chi_in[3][1]) @[Chi.scala 15:33]
    chi_wire <= _T_19 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[1][1] @[Chi.scala 16:18]
    node _T_20 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[1][1] <= _T_20 @[Chi.scala 17:24]
    node _T_21 = not(io.chi_in[2][2]) @[Chi.scala 14:23]
    chi_not_wire <= _T_21 @[Chi.scala 14:20]
    node _T_22 = and(chi_not_wire, io.chi_in[3][2]) @[Chi.scala 15:33]
    chi_wire <= _T_22 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[1][2] @[Chi.scala 16:18]
    node _T_23 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[1][2] <= _T_23 @[Chi.scala 17:24]
    node _T_24 = not(io.chi_in[2][3]) @[Chi.scala 14:23]
    chi_not_wire <= _T_24 @[Chi.scala 14:20]
    node _T_25 = and(chi_not_wire, io.chi_in[3][3]) @[Chi.scala 15:33]
    chi_wire <= _T_25 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[1][3] @[Chi.scala 16:18]
    node _T_26 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[1][3] <= _T_26 @[Chi.scala 17:24]
    node _T_27 = not(io.chi_in[2][4]) @[Chi.scala 14:23]
    chi_not_wire <= _T_27 @[Chi.scala 14:20]
    node _T_28 = and(chi_not_wire, io.chi_in[3][4]) @[Chi.scala 15:33]
    chi_wire <= _T_28 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[1][4] @[Chi.scala 16:18]
    node _T_29 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[1][4] <= _T_29 @[Chi.scala 17:24]
    node _T_30 = not(io.chi_in[3][0]) @[Chi.scala 14:23]
    chi_not_wire <= _T_30 @[Chi.scala 14:20]
    node _T_31 = and(chi_not_wire, io.chi_in[4][0]) @[Chi.scala 15:33]
    chi_wire <= _T_31 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[2][0] @[Chi.scala 16:18]
    node _T_32 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[2][0] <= _T_32 @[Chi.scala 17:24]
    node _T_33 = not(io.chi_in[3][1]) @[Chi.scala 14:23]
    chi_not_wire <= _T_33 @[Chi.scala 14:20]
    node _T_34 = and(chi_not_wire, io.chi_in[4][1]) @[Chi.scala 15:33]
    chi_wire <= _T_34 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[2][1] @[Chi.scala 16:18]
    node _T_35 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[2][1] <= _T_35 @[Chi.scala 17:24]
    node _T_36 = not(io.chi_in[3][2]) @[Chi.scala 14:23]
    chi_not_wire <= _T_36 @[Chi.scala 14:20]
    node _T_37 = and(chi_not_wire, io.chi_in[4][2]) @[Chi.scala 15:33]
    chi_wire <= _T_37 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[2][2] @[Chi.scala 16:18]
    node _T_38 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[2][2] <= _T_38 @[Chi.scala 17:24]
    node _T_39 = not(io.chi_in[3][3]) @[Chi.scala 14:23]
    chi_not_wire <= _T_39 @[Chi.scala 14:20]
    node _T_40 = and(chi_not_wire, io.chi_in[4][3]) @[Chi.scala 15:33]
    chi_wire <= _T_40 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[2][3] @[Chi.scala 16:18]
    node _T_41 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[2][3] <= _T_41 @[Chi.scala 17:24]
    node _T_42 = not(io.chi_in[3][4]) @[Chi.scala 14:23]
    chi_not_wire <= _T_42 @[Chi.scala 14:20]
    node _T_43 = and(chi_not_wire, io.chi_in[4][4]) @[Chi.scala 15:33]
    chi_wire <= _T_43 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[2][4] @[Chi.scala 16:18]
    node _T_44 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[2][4] <= _T_44 @[Chi.scala 17:24]
    node _T_45 = not(io.chi_in[4][0]) @[Chi.scala 14:23]
    chi_not_wire <= _T_45 @[Chi.scala 14:20]
    node _T_46 = and(chi_not_wire, io.chi_in[0][0]) @[Chi.scala 15:33]
    chi_wire <= _T_46 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[3][0] @[Chi.scala 16:18]
    node _T_47 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[3][0] <= _T_47 @[Chi.scala 17:24]
    node _T_48 = not(io.chi_in[4][1]) @[Chi.scala 14:23]
    chi_not_wire <= _T_48 @[Chi.scala 14:20]
    node _T_49 = and(chi_not_wire, io.chi_in[0][1]) @[Chi.scala 15:33]
    chi_wire <= _T_49 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[3][1] @[Chi.scala 16:18]
    node _T_50 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[3][1] <= _T_50 @[Chi.scala 17:24]
    node _T_51 = not(io.chi_in[4][2]) @[Chi.scala 14:23]
    chi_not_wire <= _T_51 @[Chi.scala 14:20]
    node _T_52 = and(chi_not_wire, io.chi_in[0][2]) @[Chi.scala 15:33]
    chi_wire <= _T_52 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[3][2] @[Chi.scala 16:18]
    node _T_53 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[3][2] <= _T_53 @[Chi.scala 17:24]
    node _T_54 = not(io.chi_in[4][3]) @[Chi.scala 14:23]
    chi_not_wire <= _T_54 @[Chi.scala 14:20]
    node _T_55 = and(chi_not_wire, io.chi_in[0][3]) @[Chi.scala 15:33]
    chi_wire <= _T_55 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[3][3] @[Chi.scala 16:18]
    node _T_56 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[3][3] <= _T_56 @[Chi.scala 17:24]
    node _T_57 = not(io.chi_in[4][4]) @[Chi.scala 14:23]
    chi_not_wire <= _T_57 @[Chi.scala 14:20]
    node _T_58 = and(chi_not_wire, io.chi_in[0][4]) @[Chi.scala 15:33]
    chi_wire <= _T_58 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[3][4] @[Chi.scala 16:18]
    node _T_59 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[3][4] <= _T_59 @[Chi.scala 17:24]
    node _T_60 = not(io.chi_in[0][0]) @[Chi.scala 14:23]
    chi_not_wire <= _T_60 @[Chi.scala 14:20]
    node _T_61 = and(chi_not_wire, io.chi_in[1][0]) @[Chi.scala 15:33]
    chi_wire <= _T_61 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[4][0] @[Chi.scala 16:18]
    node _T_62 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[4][0] <= _T_62 @[Chi.scala 17:24]
    node _T_63 = not(io.chi_in[0][1]) @[Chi.scala 14:23]
    chi_not_wire <= _T_63 @[Chi.scala 14:20]
    node _T_64 = and(chi_not_wire, io.chi_in[1][1]) @[Chi.scala 15:33]
    chi_wire <= _T_64 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[4][1] @[Chi.scala 16:18]
    node _T_65 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[4][1] <= _T_65 @[Chi.scala 17:24]
    node _T_66 = not(io.chi_in[0][2]) @[Chi.scala 14:23]
    chi_not_wire <= _T_66 @[Chi.scala 14:20]
    node _T_67 = and(chi_not_wire, io.chi_in[1][2]) @[Chi.scala 15:33]
    chi_wire <= _T_67 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[4][2] @[Chi.scala 16:18]
    node _T_68 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[4][2] <= _T_68 @[Chi.scala 17:24]
    node _T_69 = not(io.chi_in[0][3]) @[Chi.scala 14:23]
    chi_not_wire <= _T_69 @[Chi.scala 14:20]
    node _T_70 = and(chi_not_wire, io.chi_in[1][3]) @[Chi.scala 15:33]
    chi_wire <= _T_70 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[4][3] @[Chi.scala 16:18]
    node _T_71 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[4][3] <= _T_71 @[Chi.scala 17:24]
    node _T_72 = not(io.chi_in[0][4]) @[Chi.scala 14:23]
    chi_not_wire <= _T_72 @[Chi.scala 14:20]
    node _T_73 = and(chi_not_wire, io.chi_in[1][4]) @[Chi.scala 15:33]
    chi_wire <= _T_73 @[Chi.scala 15:16]
    chi_b_wire <= io.chi_in[4][4] @[Chi.scala 16:18]
    node _T_74 = xor(chi_b_wire, chi_wire) @[Chi.scala 17:38]
    io.chi_out[4][4] <= _T_74 @[Chi.scala 17:24]
    
  module Iota : 
    input clock : Clock
    input reset : Reset
    output io : {flip iota_in : UInt<64>[5][5], iota_out : UInt<64>}
    
    wire RC : UInt<64>[24] @[Iota.scala 9:17]
    RC[0] <= UInt<1>("h01") @[Iota.scala 10:11]
    RC[1] <= UInt<16>("h08082") @[Iota.scala 11:11]
    RC[2] <= UInt<64>("h0800000000000808a") @[Iota.scala 12:11]
    RC[3] <= UInt<64>("h08000000080008000") @[Iota.scala 13:11]
    RC[4] <= UInt<16>("h0808b") @[Iota.scala 14:11]
    RC[5] <= UInt<32>("h080000001") @[Iota.scala 15:11]
    RC[6] <= UInt<64>("h08000000080008081") @[Iota.scala 16:11]
    RC[7] <= UInt<64>("h08000000000008009") @[Iota.scala 17:11]
    RC[8] <= UInt<8>("h08a") @[Iota.scala 18:11]
    RC[9] <= UInt<8>("h088") @[Iota.scala 19:11]
    RC[10] <= UInt<32>("h080008009") @[Iota.scala 20:11]
    RC[11] <= UInt<32>("h08000000a") @[Iota.scala 21:11]
    RC[12] <= UInt<32>("h08000808b") @[Iota.scala 22:11]
    RC[13] <= UInt<64>("h0800000000000008b") @[Iota.scala 23:11]
    RC[14] <= UInt<64>("h08000000000008089") @[Iota.scala 24:11]
    RC[15] <= UInt<64>("h08000000000008003") @[Iota.scala 25:11]
    RC[16] <= UInt<64>("h08000000000008002") @[Iota.scala 26:11]
    RC[17] <= UInt<64>("h08000000000000080") @[Iota.scala 27:11]
    RC[18] <= UInt<16>("h0800a") @[Iota.scala 28:11]
    RC[19] <= UInt<64>("h0800000008000000a") @[Iota.scala 29:11]
    RC[20] <= UInt<64>("h08000000080008081") @[Iota.scala 30:11]
    RC[21] <= UInt<64>("h08000000000008080") @[Iota.scala 31:11]
    RC[22] <= UInt<32>("h080000001") @[Iota.scala 32:11]
    RC[23] <= UInt<64>("h08000000080008008") @[Iota.scala 33:11]
    node _T = xor(io.iota_in[0][0], RC[0]) @[Iota.scala 36:34]
    io.iota_out <= _T @[Iota.scala 36:15]
    
  module Round : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip round_in : UInt<64>[5][5], round_out : UInt<64>[5][5], R_theta_out : UInt<64>[5][5], R_rhoPi_out : UInt<64>[5][5], R_chi_out : UInt<64>[5][5], R_iota_out : UInt<64>}
    
    inst theta of Theta @[Round.scala 13:21]
    theta.clock <= clock
    theta.reset <= reset
    inst rhoPi of RhoPi @[Round.scala 14:21]
    rhoPi.clock <= clock
    rhoPi.reset <= reset
    inst chi of Chi @[Round.scala 15:19]
    chi.clock <= clock
    chi.reset <= reset
    inst iota of Iota @[Round.scala 16:20]
    iota.clock <= clock
    iota.reset <= reset
    theta.io.theta_in[0][0] <= io.round_in[0][0] @[Round.scala 18:27]
    theta.io.theta_in[0][1] <= io.round_in[0][1] @[Round.scala 18:27]
    theta.io.theta_in[0][2] <= io.round_in[0][2] @[Round.scala 18:27]
    theta.io.theta_in[0][3] <= io.round_in[0][3] @[Round.scala 18:27]
    theta.io.theta_in[0][4] <= io.round_in[0][4] @[Round.scala 18:27]
    theta.io.theta_in[1][0] <= io.round_in[1][0] @[Round.scala 18:27]
    theta.io.theta_in[1][1] <= io.round_in[1][1] @[Round.scala 18:27]
    theta.io.theta_in[1][2] <= io.round_in[1][2] @[Round.scala 18:27]
    theta.io.theta_in[1][3] <= io.round_in[1][3] @[Round.scala 18:27]
    theta.io.theta_in[1][4] <= io.round_in[1][4] @[Round.scala 18:27]
    theta.io.theta_in[2][0] <= io.round_in[2][0] @[Round.scala 18:27]
    theta.io.theta_in[2][1] <= io.round_in[2][1] @[Round.scala 18:27]
    theta.io.theta_in[2][2] <= io.round_in[2][2] @[Round.scala 18:27]
    theta.io.theta_in[2][3] <= io.round_in[2][3] @[Round.scala 18:27]
    theta.io.theta_in[2][4] <= io.round_in[2][4] @[Round.scala 18:27]
    theta.io.theta_in[3][0] <= io.round_in[3][0] @[Round.scala 18:27]
    theta.io.theta_in[3][1] <= io.round_in[3][1] @[Round.scala 18:27]
    theta.io.theta_in[3][2] <= io.round_in[3][2] @[Round.scala 18:27]
    theta.io.theta_in[3][3] <= io.round_in[3][3] @[Round.scala 18:27]
    theta.io.theta_in[3][4] <= io.round_in[3][4] @[Round.scala 18:27]
    theta.io.theta_in[4][0] <= io.round_in[4][0] @[Round.scala 18:27]
    theta.io.theta_in[4][1] <= io.round_in[4][1] @[Round.scala 18:27]
    theta.io.theta_in[4][2] <= io.round_in[4][2] @[Round.scala 18:27]
    theta.io.theta_in[4][3] <= io.round_in[4][3] @[Round.scala 18:27]
    theta.io.theta_in[4][4] <= io.round_in[4][4] @[Round.scala 18:27]
    rhoPi.io.rhoPi_in[0][0] <= theta.io.theta_out[0][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][1] <= theta.io.theta_out[0][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][2] <= theta.io.theta_out[0][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][3] <= theta.io.theta_out[0][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][4] <= theta.io.theta_out[0][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][0] <= theta.io.theta_out[1][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][1] <= theta.io.theta_out[1][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][2] <= theta.io.theta_out[1][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][3] <= theta.io.theta_out[1][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][4] <= theta.io.theta_out[1][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][0] <= theta.io.theta_out[2][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][1] <= theta.io.theta_out[2][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][2] <= theta.io.theta_out[2][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][3] <= theta.io.theta_out[2][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][4] <= theta.io.theta_out[2][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][0] <= theta.io.theta_out[3][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][1] <= theta.io.theta_out[3][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][2] <= theta.io.theta_out[3][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][3] <= theta.io.theta_out[3][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][4] <= theta.io.theta_out[3][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][0] <= theta.io.theta_out[4][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][1] <= theta.io.theta_out[4][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][2] <= theta.io.theta_out[4][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][3] <= theta.io.theta_out[4][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][4] <= theta.io.theta_out[4][4] @[Round.scala 19:27]
    chi.io.chi_in[0][0] <= rhoPi.io.rhoPi_out[0][0] @[Round.scala 20:27]
    chi.io.chi_in[0][1] <= rhoPi.io.rhoPi_out[0][1] @[Round.scala 20:27]
    chi.io.chi_in[0][2] <= rhoPi.io.rhoPi_out[0][2] @[Round.scala 20:27]
    chi.io.chi_in[0][3] <= rhoPi.io.rhoPi_out[0][3] @[Round.scala 20:27]
    chi.io.chi_in[0][4] <= rhoPi.io.rhoPi_out[0][4] @[Round.scala 20:27]
    chi.io.chi_in[1][0] <= rhoPi.io.rhoPi_out[1][0] @[Round.scala 20:27]
    chi.io.chi_in[1][1] <= rhoPi.io.rhoPi_out[1][1] @[Round.scala 20:27]
    chi.io.chi_in[1][2] <= rhoPi.io.rhoPi_out[1][2] @[Round.scala 20:27]
    chi.io.chi_in[1][3] <= rhoPi.io.rhoPi_out[1][3] @[Round.scala 20:27]
    chi.io.chi_in[1][4] <= rhoPi.io.rhoPi_out[1][4] @[Round.scala 20:27]
    chi.io.chi_in[2][0] <= rhoPi.io.rhoPi_out[2][0] @[Round.scala 20:27]
    chi.io.chi_in[2][1] <= rhoPi.io.rhoPi_out[2][1] @[Round.scala 20:27]
    chi.io.chi_in[2][2] <= rhoPi.io.rhoPi_out[2][2] @[Round.scala 20:27]
    chi.io.chi_in[2][3] <= rhoPi.io.rhoPi_out[2][3] @[Round.scala 20:27]
    chi.io.chi_in[2][4] <= rhoPi.io.rhoPi_out[2][4] @[Round.scala 20:27]
    chi.io.chi_in[3][0] <= rhoPi.io.rhoPi_out[3][0] @[Round.scala 20:27]
    chi.io.chi_in[3][1] <= rhoPi.io.rhoPi_out[3][1] @[Round.scala 20:27]
    chi.io.chi_in[3][2] <= rhoPi.io.rhoPi_out[3][2] @[Round.scala 20:27]
    chi.io.chi_in[3][3] <= rhoPi.io.rhoPi_out[3][3] @[Round.scala 20:27]
    chi.io.chi_in[3][4] <= rhoPi.io.rhoPi_out[3][4] @[Round.scala 20:27]
    chi.io.chi_in[4][0] <= rhoPi.io.rhoPi_out[4][0] @[Round.scala 20:27]
    chi.io.chi_in[4][1] <= rhoPi.io.rhoPi_out[4][1] @[Round.scala 20:27]
    chi.io.chi_in[4][2] <= rhoPi.io.rhoPi_out[4][2] @[Round.scala 20:27]
    chi.io.chi_in[4][3] <= rhoPi.io.rhoPi_out[4][3] @[Round.scala 20:27]
    chi.io.chi_in[4][4] <= rhoPi.io.rhoPi_out[4][4] @[Round.scala 20:27]
    iota.io.iota_in[0][0] <= chi.io.chi_out[0][0] @[Round.scala 21:27]
    iota.io.iota_in[0][1] <= chi.io.chi_out[0][1] @[Round.scala 21:27]
    iota.io.iota_in[0][2] <= chi.io.chi_out[0][2] @[Round.scala 21:27]
    iota.io.iota_in[0][3] <= chi.io.chi_out[0][3] @[Round.scala 21:27]
    iota.io.iota_in[0][4] <= chi.io.chi_out[0][4] @[Round.scala 21:27]
    iota.io.iota_in[1][0] <= chi.io.chi_out[1][0] @[Round.scala 21:27]
    iota.io.iota_in[1][1] <= chi.io.chi_out[1][1] @[Round.scala 21:27]
    iota.io.iota_in[1][2] <= chi.io.chi_out[1][2] @[Round.scala 21:27]
    iota.io.iota_in[1][3] <= chi.io.chi_out[1][3] @[Round.scala 21:27]
    iota.io.iota_in[1][4] <= chi.io.chi_out[1][4] @[Round.scala 21:27]
    iota.io.iota_in[2][0] <= chi.io.chi_out[2][0] @[Round.scala 21:27]
    iota.io.iota_in[2][1] <= chi.io.chi_out[2][1] @[Round.scala 21:27]
    iota.io.iota_in[2][2] <= chi.io.chi_out[2][2] @[Round.scala 21:27]
    iota.io.iota_in[2][3] <= chi.io.chi_out[2][3] @[Round.scala 21:27]
    iota.io.iota_in[2][4] <= chi.io.chi_out[2][4] @[Round.scala 21:27]
    iota.io.iota_in[3][0] <= chi.io.chi_out[3][0] @[Round.scala 21:27]
    iota.io.iota_in[3][1] <= chi.io.chi_out[3][1] @[Round.scala 21:27]
    iota.io.iota_in[3][2] <= chi.io.chi_out[3][2] @[Round.scala 21:27]
    iota.io.iota_in[3][3] <= chi.io.chi_out[3][3] @[Round.scala 21:27]
    iota.io.iota_in[3][4] <= chi.io.chi_out[3][4] @[Round.scala 21:27]
    iota.io.iota_in[4][0] <= chi.io.chi_out[4][0] @[Round.scala 21:27]
    iota.io.iota_in[4][1] <= chi.io.chi_out[4][1] @[Round.scala 21:27]
    iota.io.iota_in[4][2] <= chi.io.chi_out[4][2] @[Round.scala 21:27]
    iota.io.iota_in[4][3] <= chi.io.chi_out[4][3] @[Round.scala 21:27]
    iota.io.iota_in[4][4] <= chi.io.chi_out[4][4] @[Round.scala 21:27]
    io.round_out[0][0] <= iota.io.iota_out @[Round.scala 22:27]
    io.R_theta_out[0][0] <= theta.io.theta_out[0][0] @[Round.scala 24:27]
    io.R_theta_out[0][1] <= theta.io.theta_out[0][1] @[Round.scala 24:27]
    io.R_theta_out[0][2] <= theta.io.theta_out[0][2] @[Round.scala 24:27]
    io.R_theta_out[0][3] <= theta.io.theta_out[0][3] @[Round.scala 24:27]
    io.R_theta_out[0][4] <= theta.io.theta_out[0][4] @[Round.scala 24:27]
    io.R_theta_out[1][0] <= theta.io.theta_out[1][0] @[Round.scala 24:27]
    io.R_theta_out[1][1] <= theta.io.theta_out[1][1] @[Round.scala 24:27]
    io.R_theta_out[1][2] <= theta.io.theta_out[1][2] @[Round.scala 24:27]
    io.R_theta_out[1][3] <= theta.io.theta_out[1][3] @[Round.scala 24:27]
    io.R_theta_out[1][4] <= theta.io.theta_out[1][4] @[Round.scala 24:27]
    io.R_theta_out[2][0] <= theta.io.theta_out[2][0] @[Round.scala 24:27]
    io.R_theta_out[2][1] <= theta.io.theta_out[2][1] @[Round.scala 24:27]
    io.R_theta_out[2][2] <= theta.io.theta_out[2][2] @[Round.scala 24:27]
    io.R_theta_out[2][3] <= theta.io.theta_out[2][3] @[Round.scala 24:27]
    io.R_theta_out[2][4] <= theta.io.theta_out[2][4] @[Round.scala 24:27]
    io.R_theta_out[3][0] <= theta.io.theta_out[3][0] @[Round.scala 24:27]
    io.R_theta_out[3][1] <= theta.io.theta_out[3][1] @[Round.scala 24:27]
    io.R_theta_out[3][2] <= theta.io.theta_out[3][2] @[Round.scala 24:27]
    io.R_theta_out[3][3] <= theta.io.theta_out[3][3] @[Round.scala 24:27]
    io.R_theta_out[3][4] <= theta.io.theta_out[3][4] @[Round.scala 24:27]
    io.R_theta_out[4][0] <= theta.io.theta_out[4][0] @[Round.scala 24:27]
    io.R_theta_out[4][1] <= theta.io.theta_out[4][1] @[Round.scala 24:27]
    io.R_theta_out[4][2] <= theta.io.theta_out[4][2] @[Round.scala 24:27]
    io.R_theta_out[4][3] <= theta.io.theta_out[4][3] @[Round.scala 24:27]
    io.R_theta_out[4][4] <= theta.io.theta_out[4][4] @[Round.scala 24:27]
    io.R_rhoPi_out[0][0] <= rhoPi.io.rhoPi_out[0][0] @[Round.scala 25:27]
    io.R_rhoPi_out[0][1] <= rhoPi.io.rhoPi_out[0][1] @[Round.scala 25:27]
    io.R_rhoPi_out[0][2] <= rhoPi.io.rhoPi_out[0][2] @[Round.scala 25:27]
    io.R_rhoPi_out[0][3] <= rhoPi.io.rhoPi_out[0][3] @[Round.scala 25:27]
    io.R_rhoPi_out[0][4] <= rhoPi.io.rhoPi_out[0][4] @[Round.scala 25:27]
    io.R_rhoPi_out[1][0] <= rhoPi.io.rhoPi_out[1][0] @[Round.scala 25:27]
    io.R_rhoPi_out[1][1] <= rhoPi.io.rhoPi_out[1][1] @[Round.scala 25:27]
    io.R_rhoPi_out[1][2] <= rhoPi.io.rhoPi_out[1][2] @[Round.scala 25:27]
    io.R_rhoPi_out[1][3] <= rhoPi.io.rhoPi_out[1][3] @[Round.scala 25:27]
    io.R_rhoPi_out[1][4] <= rhoPi.io.rhoPi_out[1][4] @[Round.scala 25:27]
    io.R_rhoPi_out[2][0] <= rhoPi.io.rhoPi_out[2][0] @[Round.scala 25:27]
    io.R_rhoPi_out[2][1] <= rhoPi.io.rhoPi_out[2][1] @[Round.scala 25:27]
    io.R_rhoPi_out[2][2] <= rhoPi.io.rhoPi_out[2][2] @[Round.scala 25:27]
    io.R_rhoPi_out[2][3] <= rhoPi.io.rhoPi_out[2][3] @[Round.scala 25:27]
    io.R_rhoPi_out[2][4] <= rhoPi.io.rhoPi_out[2][4] @[Round.scala 25:27]
    io.R_rhoPi_out[3][0] <= rhoPi.io.rhoPi_out[3][0] @[Round.scala 25:27]
    io.R_rhoPi_out[3][1] <= rhoPi.io.rhoPi_out[3][1] @[Round.scala 25:27]
    io.R_rhoPi_out[3][2] <= rhoPi.io.rhoPi_out[3][2] @[Round.scala 25:27]
    io.R_rhoPi_out[3][3] <= rhoPi.io.rhoPi_out[3][3] @[Round.scala 25:27]
    io.R_rhoPi_out[3][4] <= rhoPi.io.rhoPi_out[3][4] @[Round.scala 25:27]
    io.R_rhoPi_out[4][0] <= rhoPi.io.rhoPi_out[4][0] @[Round.scala 25:27]
    io.R_rhoPi_out[4][1] <= rhoPi.io.rhoPi_out[4][1] @[Round.scala 25:27]
    io.R_rhoPi_out[4][2] <= rhoPi.io.rhoPi_out[4][2] @[Round.scala 25:27]
    io.R_rhoPi_out[4][3] <= rhoPi.io.rhoPi_out[4][3] @[Round.scala 25:27]
    io.R_rhoPi_out[4][4] <= rhoPi.io.rhoPi_out[4][4] @[Round.scala 25:27]
    io.R_chi_out[0][0] <= chi.io.chi_out[0][0] @[Round.scala 26:27]
    io.R_chi_out[0][1] <= chi.io.chi_out[0][1] @[Round.scala 26:27]
    io.R_chi_out[0][2] <= chi.io.chi_out[0][2] @[Round.scala 26:27]
    io.R_chi_out[0][3] <= chi.io.chi_out[0][3] @[Round.scala 26:27]
    io.R_chi_out[0][4] <= chi.io.chi_out[0][4] @[Round.scala 26:27]
    io.R_chi_out[1][0] <= chi.io.chi_out[1][0] @[Round.scala 26:27]
    io.R_chi_out[1][1] <= chi.io.chi_out[1][1] @[Round.scala 26:27]
    io.R_chi_out[1][2] <= chi.io.chi_out[1][2] @[Round.scala 26:27]
    io.R_chi_out[1][3] <= chi.io.chi_out[1][3] @[Round.scala 26:27]
    io.R_chi_out[1][4] <= chi.io.chi_out[1][4] @[Round.scala 26:27]
    io.R_chi_out[2][0] <= chi.io.chi_out[2][0] @[Round.scala 26:27]
    io.R_chi_out[2][1] <= chi.io.chi_out[2][1] @[Round.scala 26:27]
    io.R_chi_out[2][2] <= chi.io.chi_out[2][2] @[Round.scala 26:27]
    io.R_chi_out[2][3] <= chi.io.chi_out[2][3] @[Round.scala 26:27]
    io.R_chi_out[2][4] <= chi.io.chi_out[2][4] @[Round.scala 26:27]
    io.R_chi_out[3][0] <= chi.io.chi_out[3][0] @[Round.scala 26:27]
    io.R_chi_out[3][1] <= chi.io.chi_out[3][1] @[Round.scala 26:27]
    io.R_chi_out[3][2] <= chi.io.chi_out[3][2] @[Round.scala 26:27]
    io.R_chi_out[3][3] <= chi.io.chi_out[3][3] @[Round.scala 26:27]
    io.R_chi_out[3][4] <= chi.io.chi_out[3][4] @[Round.scala 26:27]
    io.R_chi_out[4][0] <= chi.io.chi_out[4][0] @[Round.scala 26:27]
    io.R_chi_out[4][1] <= chi.io.chi_out[4][1] @[Round.scala 26:27]
    io.R_chi_out[4][2] <= chi.io.chi_out[4][2] @[Round.scala 26:27]
    io.R_chi_out[4][3] <= chi.io.chi_out[4][3] @[Round.scala 26:27]
    io.R_chi_out[4][4] <= chi.io.chi_out[4][4] @[Round.scala 26:27]
    io.R_iota_out <= iota.io.iota_out @[Round.scala 27:27]
    io.round_out[1][0] <= chi.io.chi_out[1][0] @[Round.scala 31:26]
    io.round_out[1][1] <= chi.io.chi_out[1][1] @[Round.scala 31:26]
    io.round_out[1][2] <= chi.io.chi_out[1][2] @[Round.scala 31:26]
    io.round_out[1][3] <= chi.io.chi_out[1][3] @[Round.scala 31:26]
    io.round_out[1][4] <= chi.io.chi_out[1][4] @[Round.scala 31:26]
    io.round_out[2][0] <= chi.io.chi_out[2][0] @[Round.scala 31:26]
    io.round_out[2][1] <= chi.io.chi_out[2][1] @[Round.scala 31:26]
    io.round_out[2][2] <= chi.io.chi_out[2][2] @[Round.scala 31:26]
    io.round_out[2][3] <= chi.io.chi_out[2][3] @[Round.scala 31:26]
    io.round_out[2][4] <= chi.io.chi_out[2][4] @[Round.scala 31:26]
    io.round_out[3][0] <= chi.io.chi_out[3][0] @[Round.scala 31:26]
    io.round_out[3][1] <= chi.io.chi_out[3][1] @[Round.scala 31:26]
    io.round_out[3][2] <= chi.io.chi_out[3][2] @[Round.scala 31:26]
    io.round_out[3][3] <= chi.io.chi_out[3][3] @[Round.scala 31:26]
    io.round_out[3][4] <= chi.io.chi_out[3][4] @[Round.scala 31:26]
    io.round_out[4][0] <= chi.io.chi_out[4][0] @[Round.scala 31:26]
    io.round_out[4][1] <= chi.io.chi_out[4][1] @[Round.scala 31:26]
    io.round_out[4][2] <= chi.io.chi_out[4][2] @[Round.scala 31:26]
    io.round_out[4][3] <= chi.io.chi_out[4][3] @[Round.scala 31:26]
    io.round_out[4][4] <= chi.io.chi_out[4][4] @[Round.scala 31:26]
    io.round_out[0][1] <= chi.io.chi_out[0][1] @[Round.scala 34:24]
    io.round_out[0][2] <= chi.io.chi_out[0][2] @[Round.scala 34:24]
    io.round_out[0][3] <= chi.io.chi_out[0][3] @[Round.scala 34:24]
    io.round_out[0][4] <= chi.io.chi_out[0][4] @[Round.scala 34:24]
    
