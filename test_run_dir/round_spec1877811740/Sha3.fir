;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Sha3 : 
  module Theta : 
    input clock : Clock
    input reset : Reset
    output io : {flip theta_in : UInt<64>[5][5], theta_out : UInt<64>[5][5], c_out : UInt<64>[5], d_out : UInt<64>[5]}
    
    wire st : UInt<64>[5][5] @[Theta.scala 12:17]
    wire rotation1 : UInt<64>[5] @[Theta.scala 15:23]
    wire rotation2 : UInt<64>[5] @[Theta.scala 16:23]
    wire rotation_result : UInt<64>[5] @[Theta.scala 17:29]
    io.theta_out[0][0] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[0][1] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[0][2] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[0][3] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[0][4] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[1][0] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[1][1] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[1][2] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[1][3] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[1][4] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[2][0] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[2][1] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[2][2] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[2][3] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[2][4] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[3][0] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[3][1] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[3][2] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[3][3] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[3][4] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[4][0] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[4][1] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[4][2] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[4][3] <= UInt<1>("h00") @[Theta.scala 21:30]
    io.theta_out[4][4] <= UInt<1>("h00") @[Theta.scala 21:30]
    rotation1[0] <= UInt<1>("h00") @[Theta.scala 26:18]
    rotation2[0] <= UInt<1>("h00") @[Theta.scala 27:18]
    rotation1[1] <= UInt<1>("h00") @[Theta.scala 26:18]
    rotation2[1] <= UInt<1>("h00") @[Theta.scala 27:18]
    rotation1[2] <= UInt<1>("h00") @[Theta.scala 26:18]
    rotation2[2] <= UInt<1>("h00") @[Theta.scala 27:18]
    rotation1[3] <= UInt<1>("h00") @[Theta.scala 26:18]
    rotation2[3] <= UInt<1>("h00") @[Theta.scala 27:18]
    rotation1[4] <= UInt<1>("h00") @[Theta.scala 26:18]
    rotation2[4] <= UInt<1>("h00") @[Theta.scala 27:18]
    wire c : UInt<64>[5] @[Theta.scala 34:15]
    wire d : UInt<64>[5] @[Theta.scala 35:15]
    node _T = xor(io.theta_in[0][0], io.theta_in[0][1]) @[Theta.scala 38:30]
    node _T_1 = xor(_T, io.theta_in[0][2]) @[Theta.scala 38:48]
    node _T_2 = xor(_T_1, io.theta_in[0][3]) @[Theta.scala 38:66]
    node _T_3 = xor(_T_2, io.theta_in[0][4]) @[Theta.scala 38:84]
    c[0] <= _T_3 @[Theta.scala 38:10]
    node _T_4 = xor(io.theta_in[1][0], io.theta_in[1][1]) @[Theta.scala 38:30]
    node _T_5 = xor(_T_4, io.theta_in[1][2]) @[Theta.scala 38:48]
    node _T_6 = xor(_T_5, io.theta_in[1][3]) @[Theta.scala 38:66]
    node _T_7 = xor(_T_6, io.theta_in[1][4]) @[Theta.scala 38:84]
    c[1] <= _T_7 @[Theta.scala 38:10]
    node _T_8 = xor(io.theta_in[2][0], io.theta_in[2][1]) @[Theta.scala 38:30]
    node _T_9 = xor(_T_8, io.theta_in[2][2]) @[Theta.scala 38:48]
    node _T_10 = xor(_T_9, io.theta_in[2][3]) @[Theta.scala 38:66]
    node _T_11 = xor(_T_10, io.theta_in[2][4]) @[Theta.scala 38:84]
    c[2] <= _T_11 @[Theta.scala 38:10]
    node _T_12 = xor(io.theta_in[3][0], io.theta_in[3][1]) @[Theta.scala 38:30]
    node _T_13 = xor(_T_12, io.theta_in[3][2]) @[Theta.scala 38:48]
    node _T_14 = xor(_T_13, io.theta_in[3][3]) @[Theta.scala 38:66]
    node _T_15 = xor(_T_14, io.theta_in[3][4]) @[Theta.scala 38:84]
    c[3] <= _T_15 @[Theta.scala 38:10]
    node _T_16 = xor(io.theta_in[4][0], io.theta_in[4][1]) @[Theta.scala 38:30]
    node _T_17 = xor(_T_16, io.theta_in[4][2]) @[Theta.scala 38:48]
    node _T_18 = xor(_T_17, io.theta_in[4][3]) @[Theta.scala 38:66]
    node _T_19 = xor(_T_18, io.theta_in[4][4]) @[Theta.scala 38:84]
    c[4] <= _T_19 @[Theta.scala 38:10]
    node _T_20 = shl(c[1], 1) @[Theta.scala 44:44]
    rotation1[0] <= _T_20 @[Theta.scala 44:25]
    node _T_21 = shr(c[1], 63) @[Theta.scala 45:44]
    rotation2[0] <= _T_21 @[Theta.scala 45:25]
    node _T_22 = or(rotation1[0], rotation2[0]) @[Theta.scala 46:41]
    rotation_result[0] <= _T_22 @[Theta.scala 46:25]
    node _T_23 = xor(c[4], rotation_result[0]) @[Theta.scala 47:30]
    d[0] <= _T_23 @[Theta.scala 47:11]
    node _T_24 = shl(c[2], 1) @[Theta.scala 44:44]
    rotation1[1] <= _T_24 @[Theta.scala 44:25]
    node _T_25 = shr(c[2], 63) @[Theta.scala 45:44]
    rotation2[1] <= _T_25 @[Theta.scala 45:25]
    node _T_26 = or(rotation1[1], rotation2[1]) @[Theta.scala 46:41]
    rotation_result[1] <= _T_26 @[Theta.scala 46:25]
    node _T_27 = xor(c[0], rotation_result[1]) @[Theta.scala 47:30]
    d[1] <= _T_27 @[Theta.scala 47:11]
    node _T_28 = shl(c[3], 1) @[Theta.scala 44:44]
    rotation1[2] <= _T_28 @[Theta.scala 44:25]
    node _T_29 = shr(c[3], 63) @[Theta.scala 45:44]
    rotation2[2] <= _T_29 @[Theta.scala 45:25]
    node _T_30 = or(rotation1[2], rotation2[2]) @[Theta.scala 46:41]
    rotation_result[2] <= _T_30 @[Theta.scala 46:25]
    node _T_31 = xor(c[1], rotation_result[2]) @[Theta.scala 47:30]
    d[2] <= _T_31 @[Theta.scala 47:11]
    node _T_32 = shl(c[4], 1) @[Theta.scala 44:44]
    rotation1[3] <= _T_32 @[Theta.scala 44:25]
    node _T_33 = shr(c[4], 63) @[Theta.scala 45:44]
    rotation2[3] <= _T_33 @[Theta.scala 45:25]
    node _T_34 = or(rotation1[3], rotation2[3]) @[Theta.scala 46:41]
    rotation_result[3] <= _T_34 @[Theta.scala 46:25]
    node _T_35 = xor(c[2], rotation_result[3]) @[Theta.scala 47:30]
    d[3] <= _T_35 @[Theta.scala 47:11]
    node _T_36 = shl(c[0], 1) @[Theta.scala 44:44]
    rotation1[4] <= _T_36 @[Theta.scala 44:25]
    node _T_37 = shr(c[0], 63) @[Theta.scala 45:44]
    rotation2[4] <= _T_37 @[Theta.scala 45:25]
    node _T_38 = or(rotation1[4], rotation2[4]) @[Theta.scala 46:41]
    rotation_result[4] <= _T_38 @[Theta.scala 46:25]
    node _T_39 = xor(c[3], rotation_result[4]) @[Theta.scala 47:30]
    d[4] <= _T_39 @[Theta.scala 47:11]
    node _T_40 = xor(io.theta_in[0][0], d[0]) @[Theta.scala 53:38]
    st[0][0] <= _T_40 @[Theta.scala 53:18]
    node _T_41 = xor(io.theta_in[0][1], d[0]) @[Theta.scala 53:38]
    st[0][1] <= _T_41 @[Theta.scala 53:18]
    node _T_42 = xor(io.theta_in[0][2], d[0]) @[Theta.scala 53:38]
    st[0][2] <= _T_42 @[Theta.scala 53:18]
    node _T_43 = xor(io.theta_in[0][3], d[0]) @[Theta.scala 53:38]
    st[0][3] <= _T_43 @[Theta.scala 53:18]
    node _T_44 = xor(io.theta_in[0][4], d[0]) @[Theta.scala 53:38]
    st[0][4] <= _T_44 @[Theta.scala 53:18]
    node _T_45 = xor(io.theta_in[1][0], d[1]) @[Theta.scala 53:38]
    st[1][0] <= _T_45 @[Theta.scala 53:18]
    node _T_46 = xor(io.theta_in[1][1], d[1]) @[Theta.scala 53:38]
    st[1][1] <= _T_46 @[Theta.scala 53:18]
    node _T_47 = xor(io.theta_in[1][2], d[1]) @[Theta.scala 53:38]
    st[1][2] <= _T_47 @[Theta.scala 53:18]
    node _T_48 = xor(io.theta_in[1][3], d[1]) @[Theta.scala 53:38]
    st[1][3] <= _T_48 @[Theta.scala 53:18]
    node _T_49 = xor(io.theta_in[1][4], d[1]) @[Theta.scala 53:38]
    st[1][4] <= _T_49 @[Theta.scala 53:18]
    node _T_50 = xor(io.theta_in[2][0], d[2]) @[Theta.scala 53:38]
    st[2][0] <= _T_50 @[Theta.scala 53:18]
    node _T_51 = xor(io.theta_in[2][1], d[2]) @[Theta.scala 53:38]
    st[2][1] <= _T_51 @[Theta.scala 53:18]
    node _T_52 = xor(io.theta_in[2][2], d[2]) @[Theta.scala 53:38]
    st[2][2] <= _T_52 @[Theta.scala 53:18]
    node _T_53 = xor(io.theta_in[2][3], d[2]) @[Theta.scala 53:38]
    st[2][3] <= _T_53 @[Theta.scala 53:18]
    node _T_54 = xor(io.theta_in[2][4], d[2]) @[Theta.scala 53:38]
    st[2][4] <= _T_54 @[Theta.scala 53:18]
    node _T_55 = xor(io.theta_in[3][0], d[3]) @[Theta.scala 53:38]
    st[3][0] <= _T_55 @[Theta.scala 53:18]
    node _T_56 = xor(io.theta_in[3][1], d[3]) @[Theta.scala 53:38]
    st[3][1] <= _T_56 @[Theta.scala 53:18]
    node _T_57 = xor(io.theta_in[3][2], d[3]) @[Theta.scala 53:38]
    st[3][2] <= _T_57 @[Theta.scala 53:18]
    node _T_58 = xor(io.theta_in[3][3], d[3]) @[Theta.scala 53:38]
    st[3][3] <= _T_58 @[Theta.scala 53:18]
    node _T_59 = xor(io.theta_in[3][4], d[3]) @[Theta.scala 53:38]
    st[3][4] <= _T_59 @[Theta.scala 53:18]
    node _T_60 = xor(io.theta_in[4][0], d[4]) @[Theta.scala 53:38]
    st[4][0] <= _T_60 @[Theta.scala 53:18]
    node _T_61 = xor(io.theta_in[4][1], d[4]) @[Theta.scala 53:38]
    st[4][1] <= _T_61 @[Theta.scala 53:18]
    node _T_62 = xor(io.theta_in[4][2], d[4]) @[Theta.scala 53:38]
    st[4][2] <= _T_62 @[Theta.scala 53:18]
    node _T_63 = xor(io.theta_in[4][3], d[4]) @[Theta.scala 53:38]
    st[4][3] <= _T_63 @[Theta.scala 53:18]
    node _T_64 = xor(io.theta_in[4][4], d[4]) @[Theta.scala 53:38]
    st[4][4] <= _T_64 @[Theta.scala 53:18]
    io.theta_out[0][0] <= st[0][0] @[Theta.scala 55:16]
    io.theta_out[0][1] <= st[0][1] @[Theta.scala 55:16]
    io.theta_out[0][2] <= st[0][2] @[Theta.scala 55:16]
    io.theta_out[0][3] <= st[0][3] @[Theta.scala 55:16]
    io.theta_out[0][4] <= st[0][4] @[Theta.scala 55:16]
    io.theta_out[1][0] <= st[1][0] @[Theta.scala 55:16]
    io.theta_out[1][1] <= st[1][1] @[Theta.scala 55:16]
    io.theta_out[1][2] <= st[1][2] @[Theta.scala 55:16]
    io.theta_out[1][3] <= st[1][3] @[Theta.scala 55:16]
    io.theta_out[1][4] <= st[1][4] @[Theta.scala 55:16]
    io.theta_out[2][0] <= st[2][0] @[Theta.scala 55:16]
    io.theta_out[2][1] <= st[2][1] @[Theta.scala 55:16]
    io.theta_out[2][2] <= st[2][2] @[Theta.scala 55:16]
    io.theta_out[2][3] <= st[2][3] @[Theta.scala 55:16]
    io.theta_out[2][4] <= st[2][4] @[Theta.scala 55:16]
    io.theta_out[3][0] <= st[3][0] @[Theta.scala 55:16]
    io.theta_out[3][1] <= st[3][1] @[Theta.scala 55:16]
    io.theta_out[3][2] <= st[3][2] @[Theta.scala 55:16]
    io.theta_out[3][3] <= st[3][3] @[Theta.scala 55:16]
    io.theta_out[3][4] <= st[3][4] @[Theta.scala 55:16]
    io.theta_out[4][0] <= st[4][0] @[Theta.scala 55:16]
    io.theta_out[4][1] <= st[4][1] @[Theta.scala 55:16]
    io.theta_out[4][2] <= st[4][2] @[Theta.scala 55:16]
    io.theta_out[4][3] <= st[4][3] @[Theta.scala 55:16]
    io.theta_out[4][4] <= st[4][4] @[Theta.scala 55:16]
    io.d_out[0] <= d[0] @[Theta.scala 56:12]
    io.d_out[1] <= d[1] @[Theta.scala 56:12]
    io.d_out[2] <= d[2] @[Theta.scala 56:12]
    io.d_out[3] <= d[3] @[Theta.scala 56:12]
    io.d_out[4] <= d[4] @[Theta.scala 56:12]
    io.c_out[0] <= c[0] @[Theta.scala 57:12]
    io.c_out[1] <= c[1] @[Theta.scala 57:12]
    io.c_out[2] <= c[2] @[Theta.scala 57:12]
    io.c_out[3] <= c[3] @[Theta.scala 57:12]
    io.c_out[4] <= c[4] @[Theta.scala 57:12]
    
  module RhoPi : 
    input clock : Clock
    input reset : Reset
    output io : {flip rhoPi_in : UInt<64>[5][5], rhoPi_out : UInt<64>[5][5]}
    
    wire r : UInt<19>[5][5] @[RhoPi.scala 9:17]
    r[0][0] <= UInt<1>("h00") @[RhoPi.scala 10:11]
    r[0][1] <= UInt<6>("h024") @[RhoPi.scala 11:11]
    r[0][2] <= UInt<2>("h03") @[RhoPi.scala 12:11]
    r[0][3] <= UInt<6>("h029") @[RhoPi.scala 13:11]
    r[0][4] <= UInt<5>("h012") @[RhoPi.scala 14:11]
    r[1][0] <= UInt<1>("h01") @[RhoPi.scala 16:11]
    r[1][1] <= UInt<6>("h02c") @[RhoPi.scala 17:11]
    r[1][2] <= UInt<4>("h0a") @[RhoPi.scala 18:11]
    r[1][3] <= UInt<6>("h02d") @[RhoPi.scala 19:11]
    r[1][4] <= UInt<2>("h02") @[RhoPi.scala 20:11]
    r[2][0] <= UInt<6>("h03e") @[RhoPi.scala 22:11]
    r[2][1] <= UInt<3>("h06") @[RhoPi.scala 23:11]
    r[2][2] <= UInt<6>("h02b") @[RhoPi.scala 24:11]
    r[2][3] <= UInt<4>("h0f") @[RhoPi.scala 25:11]
    r[2][4] <= UInt<6>("h03d") @[RhoPi.scala 26:11]
    r[3][0] <= UInt<5>("h01c") @[RhoPi.scala 28:11]
    r[3][1] <= UInt<6>("h037") @[RhoPi.scala 29:11]
    r[3][2] <= UInt<5>("h019") @[RhoPi.scala 30:11]
    r[3][3] <= UInt<5>("h015") @[RhoPi.scala 31:11]
    r[3][4] <= UInt<6>("h038") @[RhoPi.scala 32:11]
    r[4][0] <= UInt<5>("h01b") @[RhoPi.scala 34:11]
    r[4][1] <= UInt<5>("h014") @[RhoPi.scala 35:11]
    r[4][2] <= UInt<6>("h027") @[RhoPi.scala 36:11]
    r[4][3] <= UInt<4>("h08") @[RhoPi.scala 37:11]
    r[4][4] <= UInt<4>("h0e") @[RhoPi.scala 38:11]
    wire rotationWire_1 : UInt<64>[5][5] @[RhoPi.scala 41:28]
    wire rotationWire_2 : UInt<64>[5][5] @[RhoPi.scala 42:28]
    node _T = dshl(io.rhoPi_in[0][0], r[0][0]) @[RhoPi.scala 46:49]
    rotationWire_1[0][0] <= _T @[RhoPi.scala 46:28]
    node _T_1 = sub(UInt<7>("h040"), r[0][0]) @[RhoPi.scala 47:57]
    node _T_2 = tail(_T_1, 1) @[RhoPi.scala 47:57]
    node _T_3 = dshr(io.rhoPi_in[0][0], _T_2) @[RhoPi.scala 47:49]
    rotationWire_2[0][0] <= _T_3 @[RhoPi.scala 47:28]
    node _T_4 = or(rotationWire_1[0][0], rotationWire_2[0][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][0] <= _T_4 @[RhoPi.scala 48:49]
    node _T_5 = dshl(io.rhoPi_in[0][1], r[0][1]) @[RhoPi.scala 46:49]
    rotationWire_1[0][1] <= _T_5 @[RhoPi.scala 46:28]
    node _T_6 = sub(UInt<7>("h040"), r[0][1]) @[RhoPi.scala 47:57]
    node _T_7 = tail(_T_6, 1) @[RhoPi.scala 47:57]
    node _T_8 = dshr(io.rhoPi_in[0][1], _T_7) @[RhoPi.scala 47:49]
    rotationWire_2[0][1] <= _T_8 @[RhoPi.scala 47:28]
    node _T_9 = or(rotationWire_1[0][1], rotationWire_2[0][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][3] <= _T_9 @[RhoPi.scala 48:49]
    node _T_10 = dshl(io.rhoPi_in[0][2], r[0][2]) @[RhoPi.scala 46:49]
    rotationWire_1[0][2] <= _T_10 @[RhoPi.scala 46:28]
    node _T_11 = sub(UInt<7>("h040"), r[0][2]) @[RhoPi.scala 47:57]
    node _T_12 = tail(_T_11, 1) @[RhoPi.scala 47:57]
    node _T_13 = dshr(io.rhoPi_in[0][2], _T_12) @[RhoPi.scala 47:49]
    rotationWire_2[0][2] <= _T_13 @[RhoPi.scala 47:28]
    node _T_14 = or(rotationWire_1[0][2], rotationWire_2[0][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][1] <= _T_14 @[RhoPi.scala 48:49]
    node _T_15 = dshl(io.rhoPi_in[0][3], r[0][3]) @[RhoPi.scala 46:49]
    rotationWire_1[0][3] <= _T_15 @[RhoPi.scala 46:28]
    node _T_16 = sub(UInt<7>("h040"), r[0][3]) @[RhoPi.scala 47:57]
    node _T_17 = tail(_T_16, 1) @[RhoPi.scala 47:57]
    node _T_18 = dshr(io.rhoPi_in[0][3], _T_17) @[RhoPi.scala 47:49]
    rotationWire_2[0][3] <= _T_18 @[RhoPi.scala 47:28]
    node _T_19 = or(rotationWire_1[0][3], rotationWire_2[0][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][4] <= _T_19 @[RhoPi.scala 48:49]
    node _T_20 = dshl(io.rhoPi_in[0][4], r[0][4]) @[RhoPi.scala 46:49]
    rotationWire_1[0][4] <= _T_20 @[RhoPi.scala 46:28]
    node _T_21 = sub(UInt<7>("h040"), r[0][4]) @[RhoPi.scala 47:57]
    node _T_22 = tail(_T_21, 1) @[RhoPi.scala 47:57]
    node _T_23 = dshr(io.rhoPi_in[0][4], _T_22) @[RhoPi.scala 47:49]
    rotationWire_2[0][4] <= _T_23 @[RhoPi.scala 47:28]
    node _T_24 = or(rotationWire_1[0][4], rotationWire_2[0][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][2] <= _T_24 @[RhoPi.scala 48:49]
    node _T_25 = dshl(io.rhoPi_in[1][0], r[1][0]) @[RhoPi.scala 46:49]
    rotationWire_1[1][0] <= _T_25 @[RhoPi.scala 46:28]
    node _T_26 = sub(UInt<7>("h040"), r[1][0]) @[RhoPi.scala 47:57]
    node _T_27 = tail(_T_26, 1) @[RhoPi.scala 47:57]
    node _T_28 = dshr(io.rhoPi_in[1][0], _T_27) @[RhoPi.scala 47:49]
    rotationWire_2[1][0] <= _T_28 @[RhoPi.scala 47:28]
    node _T_29 = or(rotationWire_1[1][0], rotationWire_2[1][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][2] <= _T_29 @[RhoPi.scala 48:49]
    node _T_30 = dshl(io.rhoPi_in[1][1], r[1][1]) @[RhoPi.scala 46:49]
    rotationWire_1[1][1] <= _T_30 @[RhoPi.scala 46:28]
    node _T_31 = sub(UInt<7>("h040"), r[1][1]) @[RhoPi.scala 47:57]
    node _T_32 = tail(_T_31, 1) @[RhoPi.scala 47:57]
    node _T_33 = dshr(io.rhoPi_in[1][1], _T_32) @[RhoPi.scala 47:49]
    rotationWire_2[1][1] <= _T_33 @[RhoPi.scala 47:28]
    node _T_34 = or(rotationWire_1[1][1], rotationWire_2[1][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][0] <= _T_34 @[RhoPi.scala 48:49]
    node _T_35 = dshl(io.rhoPi_in[1][2], r[1][2]) @[RhoPi.scala 46:49]
    rotationWire_1[1][2] <= _T_35 @[RhoPi.scala 46:28]
    node _T_36 = sub(UInt<7>("h040"), r[1][2]) @[RhoPi.scala 47:57]
    node _T_37 = tail(_T_36, 1) @[RhoPi.scala 47:57]
    node _T_38 = dshr(io.rhoPi_in[1][2], _T_37) @[RhoPi.scala 47:49]
    rotationWire_2[1][2] <= _T_38 @[RhoPi.scala 47:28]
    node _T_39 = or(rotationWire_1[1][2], rotationWire_2[1][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][3] <= _T_39 @[RhoPi.scala 48:49]
    node _T_40 = dshl(io.rhoPi_in[1][3], r[1][3]) @[RhoPi.scala 46:49]
    rotationWire_1[1][3] <= _T_40 @[RhoPi.scala 46:28]
    node _T_41 = sub(UInt<7>("h040"), r[1][3]) @[RhoPi.scala 47:57]
    node _T_42 = tail(_T_41, 1) @[RhoPi.scala 47:57]
    node _T_43 = dshr(io.rhoPi_in[1][3], _T_42) @[RhoPi.scala 47:49]
    rotationWire_2[1][3] <= _T_43 @[RhoPi.scala 47:28]
    node _T_44 = or(rotationWire_1[1][3], rotationWire_2[1][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][1] <= _T_44 @[RhoPi.scala 48:49]
    node _T_45 = dshl(io.rhoPi_in[1][4], r[1][4]) @[RhoPi.scala 46:49]
    rotationWire_1[1][4] <= _T_45 @[RhoPi.scala 46:28]
    node _T_46 = sub(UInt<7>("h040"), r[1][4]) @[RhoPi.scala 47:57]
    node _T_47 = tail(_T_46, 1) @[RhoPi.scala 47:57]
    node _T_48 = dshr(io.rhoPi_in[1][4], _T_47) @[RhoPi.scala 47:49]
    rotationWire_2[1][4] <= _T_48 @[RhoPi.scala 47:28]
    node _T_49 = or(rotationWire_1[1][4], rotationWire_2[1][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][4] <= _T_49 @[RhoPi.scala 48:49]
    node _T_50 = dshl(io.rhoPi_in[2][0], r[2][0]) @[RhoPi.scala 46:49]
    rotationWire_1[2][0] <= _T_50 @[RhoPi.scala 46:28]
    node _T_51 = sub(UInt<7>("h040"), r[2][0]) @[RhoPi.scala 47:57]
    node _T_52 = tail(_T_51, 1) @[RhoPi.scala 47:57]
    node _T_53 = dshr(io.rhoPi_in[2][0], _T_52) @[RhoPi.scala 47:49]
    rotationWire_2[2][0] <= _T_53 @[RhoPi.scala 47:28]
    node _T_54 = or(rotationWire_1[2][0], rotationWire_2[2][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][4] <= _T_54 @[RhoPi.scala 48:49]
    node _T_55 = dshl(io.rhoPi_in[2][1], r[2][1]) @[RhoPi.scala 46:49]
    rotationWire_1[2][1] <= _T_55 @[RhoPi.scala 46:28]
    node _T_56 = sub(UInt<7>("h040"), r[2][1]) @[RhoPi.scala 47:57]
    node _T_57 = tail(_T_56, 1) @[RhoPi.scala 47:57]
    node _T_58 = dshr(io.rhoPi_in[2][1], _T_57) @[RhoPi.scala 47:49]
    rotationWire_2[2][1] <= _T_58 @[RhoPi.scala 47:28]
    node _T_59 = or(rotationWire_1[2][1], rotationWire_2[2][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][2] <= _T_59 @[RhoPi.scala 48:49]
    node _T_60 = dshl(io.rhoPi_in[2][2], r[2][2]) @[RhoPi.scala 46:49]
    rotationWire_1[2][2] <= _T_60 @[RhoPi.scala 46:28]
    node _T_61 = sub(UInt<7>("h040"), r[2][2]) @[RhoPi.scala 47:57]
    node _T_62 = tail(_T_61, 1) @[RhoPi.scala 47:57]
    node _T_63 = dshr(io.rhoPi_in[2][2], _T_62) @[RhoPi.scala 47:49]
    rotationWire_2[2][2] <= _T_63 @[RhoPi.scala 47:28]
    node _T_64 = or(rotationWire_1[2][2], rotationWire_2[2][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][0] <= _T_64 @[RhoPi.scala 48:49]
    node _T_65 = dshl(io.rhoPi_in[2][3], r[2][3]) @[RhoPi.scala 46:49]
    rotationWire_1[2][3] <= _T_65 @[RhoPi.scala 46:28]
    node _T_66 = sub(UInt<7>("h040"), r[2][3]) @[RhoPi.scala 47:57]
    node _T_67 = tail(_T_66, 1) @[RhoPi.scala 47:57]
    node _T_68 = dshr(io.rhoPi_in[2][3], _T_67) @[RhoPi.scala 47:49]
    rotationWire_2[2][3] <= _T_68 @[RhoPi.scala 47:28]
    node _T_69 = or(rotationWire_1[2][3], rotationWire_2[2][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][3] <= _T_69 @[RhoPi.scala 48:49]
    node _T_70 = dshl(io.rhoPi_in[2][4], r[2][4]) @[RhoPi.scala 46:49]
    rotationWire_1[2][4] <= _T_70 @[RhoPi.scala 46:28]
    node _T_71 = sub(UInt<7>("h040"), r[2][4]) @[RhoPi.scala 47:57]
    node _T_72 = tail(_T_71, 1) @[RhoPi.scala 47:57]
    node _T_73 = dshr(io.rhoPi_in[2][4], _T_72) @[RhoPi.scala 47:49]
    rotationWire_2[2][4] <= _T_73 @[RhoPi.scala 47:28]
    node _T_74 = or(rotationWire_1[2][4], rotationWire_2[2][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][1] <= _T_74 @[RhoPi.scala 48:49]
    node _T_75 = dshl(io.rhoPi_in[3][0], r[3][0]) @[RhoPi.scala 46:49]
    rotationWire_1[3][0] <= _T_75 @[RhoPi.scala 46:28]
    node _T_76 = sub(UInt<7>("h040"), r[3][0]) @[RhoPi.scala 47:57]
    node _T_77 = tail(_T_76, 1) @[RhoPi.scala 47:57]
    node _T_78 = dshr(io.rhoPi_in[3][0], _T_77) @[RhoPi.scala 47:49]
    rotationWire_2[3][0] <= _T_78 @[RhoPi.scala 47:28]
    node _T_79 = or(rotationWire_1[3][0], rotationWire_2[3][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][1] <= _T_79 @[RhoPi.scala 48:49]
    node _T_80 = dshl(io.rhoPi_in[3][1], r[3][1]) @[RhoPi.scala 46:49]
    rotationWire_1[3][1] <= _T_80 @[RhoPi.scala 46:28]
    node _T_81 = sub(UInt<7>("h040"), r[3][1]) @[RhoPi.scala 47:57]
    node _T_82 = tail(_T_81, 1) @[RhoPi.scala 47:57]
    node _T_83 = dshr(io.rhoPi_in[3][1], _T_82) @[RhoPi.scala 47:49]
    rotationWire_2[3][1] <= _T_83 @[RhoPi.scala 47:28]
    node _T_84 = or(rotationWire_1[3][1], rotationWire_2[3][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][4] <= _T_84 @[RhoPi.scala 48:49]
    node _T_85 = dshl(io.rhoPi_in[3][2], r[3][2]) @[RhoPi.scala 46:49]
    rotationWire_1[3][2] <= _T_85 @[RhoPi.scala 46:28]
    node _T_86 = sub(UInt<7>("h040"), r[3][2]) @[RhoPi.scala 47:57]
    node _T_87 = tail(_T_86, 1) @[RhoPi.scala 47:57]
    node _T_88 = dshr(io.rhoPi_in[3][2], _T_87) @[RhoPi.scala 47:49]
    rotationWire_2[3][2] <= _T_88 @[RhoPi.scala 47:28]
    node _T_89 = or(rotationWire_1[3][2], rotationWire_2[3][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][2] <= _T_89 @[RhoPi.scala 48:49]
    node _T_90 = dshl(io.rhoPi_in[3][3], r[3][3]) @[RhoPi.scala 46:49]
    rotationWire_1[3][3] <= _T_90 @[RhoPi.scala 46:28]
    node _T_91 = sub(UInt<7>("h040"), r[3][3]) @[RhoPi.scala 47:57]
    node _T_92 = tail(_T_91, 1) @[RhoPi.scala 47:57]
    node _T_93 = dshr(io.rhoPi_in[3][3], _T_92) @[RhoPi.scala 47:49]
    rotationWire_2[3][3] <= _T_93 @[RhoPi.scala 47:28]
    node _T_94 = or(rotationWire_1[3][3], rotationWire_2[3][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][0] <= _T_94 @[RhoPi.scala 48:49]
    node _T_95 = dshl(io.rhoPi_in[3][4], r[3][4]) @[RhoPi.scala 46:49]
    rotationWire_1[3][4] <= _T_95 @[RhoPi.scala 46:28]
    node _T_96 = sub(UInt<7>("h040"), r[3][4]) @[RhoPi.scala 47:57]
    node _T_97 = tail(_T_96, 1) @[RhoPi.scala 47:57]
    node _T_98 = dshr(io.rhoPi_in[3][4], _T_97) @[RhoPi.scala 47:49]
    rotationWire_2[3][4] <= _T_98 @[RhoPi.scala 47:28]
    node _T_99 = or(rotationWire_1[3][4], rotationWire_2[3][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][3] <= _T_99 @[RhoPi.scala 48:49]
    node _T_100 = dshl(io.rhoPi_in[4][0], r[4][0]) @[RhoPi.scala 46:49]
    rotationWire_1[4][0] <= _T_100 @[RhoPi.scala 46:28]
    node _T_101 = sub(UInt<7>("h040"), r[4][0]) @[RhoPi.scala 47:57]
    node _T_102 = tail(_T_101, 1) @[RhoPi.scala 47:57]
    node _T_103 = dshr(io.rhoPi_in[4][0], _T_102) @[RhoPi.scala 47:49]
    rotationWire_2[4][0] <= _T_103 @[RhoPi.scala 47:28]
    node _T_104 = or(rotationWire_1[4][0], rotationWire_2[4][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][3] <= _T_104 @[RhoPi.scala 48:49]
    node _T_105 = dshl(io.rhoPi_in[4][1], r[4][1]) @[RhoPi.scala 46:49]
    rotationWire_1[4][1] <= _T_105 @[RhoPi.scala 46:28]
    node _T_106 = sub(UInt<7>("h040"), r[4][1]) @[RhoPi.scala 47:57]
    node _T_107 = tail(_T_106, 1) @[RhoPi.scala 47:57]
    node _T_108 = dshr(io.rhoPi_in[4][1], _T_107) @[RhoPi.scala 47:49]
    rotationWire_2[4][1] <= _T_108 @[RhoPi.scala 47:28]
    node _T_109 = or(rotationWire_1[4][1], rotationWire_2[4][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][1] <= _T_109 @[RhoPi.scala 48:49]
    node _T_110 = dshl(io.rhoPi_in[4][2], r[4][2]) @[RhoPi.scala 46:49]
    rotationWire_1[4][2] <= _T_110 @[RhoPi.scala 46:28]
    node _T_111 = sub(UInt<7>("h040"), r[4][2]) @[RhoPi.scala 47:57]
    node _T_112 = tail(_T_111, 1) @[RhoPi.scala 47:57]
    node _T_113 = dshr(io.rhoPi_in[4][2], _T_112) @[RhoPi.scala 47:49]
    rotationWire_2[4][2] <= _T_113 @[RhoPi.scala 47:28]
    node _T_114 = or(rotationWire_1[4][2], rotationWire_2[4][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][4] <= _T_114 @[RhoPi.scala 48:49]
    node _T_115 = dshl(io.rhoPi_in[4][3], r[4][3]) @[RhoPi.scala 46:49]
    rotationWire_1[4][3] <= _T_115 @[RhoPi.scala 46:28]
    node _T_116 = sub(UInt<7>("h040"), r[4][3]) @[RhoPi.scala 47:57]
    node _T_117 = tail(_T_116, 1) @[RhoPi.scala 47:57]
    node _T_118 = dshr(io.rhoPi_in[4][3], _T_117) @[RhoPi.scala 47:49]
    rotationWire_2[4][3] <= _T_118 @[RhoPi.scala 47:28]
    node _T_119 = or(rotationWire_1[4][3], rotationWire_2[4][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][2] <= _T_119 @[RhoPi.scala 48:49]
    node _T_120 = dshl(io.rhoPi_in[4][4], r[4][4]) @[RhoPi.scala 46:49]
    rotationWire_1[4][4] <= _T_120 @[RhoPi.scala 46:28]
    node _T_121 = sub(UInt<7>("h040"), r[4][4]) @[RhoPi.scala 47:57]
    node _T_122 = tail(_T_121, 1) @[RhoPi.scala 47:57]
    node _T_123 = dshr(io.rhoPi_in[4][4], _T_122) @[RhoPi.scala 47:49]
    rotationWire_2[4][4] <= _T_123 @[RhoPi.scala 47:28]
    node _T_124 = or(rotationWire_1[4][4], rotationWire_2[4][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][0] <= _T_124 @[RhoPi.scala 48:49]
    
  module Chi : 
    input clock : Clock
    input reset : Reset
    output io : {flip chi_in : UInt<64>[5][5], chi_out : UInt<64>[5][5]}
    
    wire chi_wire : UInt<64>[5][5] @[Chi.scala 10:26]
    wire chi_b_wire : UInt<64>[5][5] @[Chi.scala 11:26]
    wire chi_not_wire : UInt<64>[5][5] @[Chi.scala 12:26]
    node _T = not(io.chi_in[1][0]) @[Chi.scala 16:29]
    chi_not_wire[0][0] <= _T @[Chi.scala 16:26]
    node _T_1 = and(chi_not_wire[0][0], io.chi_in[2][0]) @[Chi.scala 17:45]
    chi_wire[0][0] <= _T_1 @[Chi.scala 17:22]
    chi_b_wire[0][0] <= io.chi_in[0][0] @[Chi.scala 18:24]
    node _T_2 = xor(chi_b_wire[0][0], chi_wire[0][0]) @[Chi.scala 19:44]
    io.chi_out[0][0] <= _T_2 @[Chi.scala 19:24]
    node _T_3 = not(io.chi_in[1][1]) @[Chi.scala 16:29]
    chi_not_wire[0][1] <= _T_3 @[Chi.scala 16:26]
    node _T_4 = and(chi_not_wire[0][1], io.chi_in[2][1]) @[Chi.scala 17:45]
    chi_wire[0][1] <= _T_4 @[Chi.scala 17:22]
    chi_b_wire[0][1] <= io.chi_in[0][1] @[Chi.scala 18:24]
    node _T_5 = xor(chi_b_wire[0][1], chi_wire[0][1]) @[Chi.scala 19:44]
    io.chi_out[0][1] <= _T_5 @[Chi.scala 19:24]
    node _T_6 = not(io.chi_in[1][2]) @[Chi.scala 16:29]
    chi_not_wire[0][2] <= _T_6 @[Chi.scala 16:26]
    node _T_7 = and(chi_not_wire[0][2], io.chi_in[2][2]) @[Chi.scala 17:45]
    chi_wire[0][2] <= _T_7 @[Chi.scala 17:22]
    chi_b_wire[0][2] <= io.chi_in[0][2] @[Chi.scala 18:24]
    node _T_8 = xor(chi_b_wire[0][2], chi_wire[0][2]) @[Chi.scala 19:44]
    io.chi_out[0][2] <= _T_8 @[Chi.scala 19:24]
    node _T_9 = not(io.chi_in[1][3]) @[Chi.scala 16:29]
    chi_not_wire[0][3] <= _T_9 @[Chi.scala 16:26]
    node _T_10 = and(chi_not_wire[0][3], io.chi_in[2][3]) @[Chi.scala 17:45]
    chi_wire[0][3] <= _T_10 @[Chi.scala 17:22]
    chi_b_wire[0][3] <= io.chi_in[0][3] @[Chi.scala 18:24]
    node _T_11 = xor(chi_b_wire[0][3], chi_wire[0][3]) @[Chi.scala 19:44]
    io.chi_out[0][3] <= _T_11 @[Chi.scala 19:24]
    node _T_12 = not(io.chi_in[1][4]) @[Chi.scala 16:29]
    chi_not_wire[0][4] <= _T_12 @[Chi.scala 16:26]
    node _T_13 = and(chi_not_wire[0][4], io.chi_in[2][4]) @[Chi.scala 17:45]
    chi_wire[0][4] <= _T_13 @[Chi.scala 17:22]
    chi_b_wire[0][4] <= io.chi_in[0][4] @[Chi.scala 18:24]
    node _T_14 = xor(chi_b_wire[0][4], chi_wire[0][4]) @[Chi.scala 19:44]
    io.chi_out[0][4] <= _T_14 @[Chi.scala 19:24]
    node _T_15 = not(io.chi_in[2][0]) @[Chi.scala 16:29]
    chi_not_wire[1][0] <= _T_15 @[Chi.scala 16:26]
    node _T_16 = and(chi_not_wire[1][0], io.chi_in[3][0]) @[Chi.scala 17:45]
    chi_wire[1][0] <= _T_16 @[Chi.scala 17:22]
    chi_b_wire[1][0] <= io.chi_in[1][0] @[Chi.scala 18:24]
    node _T_17 = xor(chi_b_wire[1][0], chi_wire[1][0]) @[Chi.scala 19:44]
    io.chi_out[1][0] <= _T_17 @[Chi.scala 19:24]
    node _T_18 = not(io.chi_in[2][1]) @[Chi.scala 16:29]
    chi_not_wire[1][1] <= _T_18 @[Chi.scala 16:26]
    node _T_19 = and(chi_not_wire[1][1], io.chi_in[3][1]) @[Chi.scala 17:45]
    chi_wire[1][1] <= _T_19 @[Chi.scala 17:22]
    chi_b_wire[1][1] <= io.chi_in[1][1] @[Chi.scala 18:24]
    node _T_20 = xor(chi_b_wire[1][1], chi_wire[1][1]) @[Chi.scala 19:44]
    io.chi_out[1][1] <= _T_20 @[Chi.scala 19:24]
    node _T_21 = not(io.chi_in[2][2]) @[Chi.scala 16:29]
    chi_not_wire[1][2] <= _T_21 @[Chi.scala 16:26]
    node _T_22 = and(chi_not_wire[1][2], io.chi_in[3][2]) @[Chi.scala 17:45]
    chi_wire[1][2] <= _T_22 @[Chi.scala 17:22]
    chi_b_wire[1][2] <= io.chi_in[1][2] @[Chi.scala 18:24]
    node _T_23 = xor(chi_b_wire[1][2], chi_wire[1][2]) @[Chi.scala 19:44]
    io.chi_out[1][2] <= _T_23 @[Chi.scala 19:24]
    node _T_24 = not(io.chi_in[2][3]) @[Chi.scala 16:29]
    chi_not_wire[1][3] <= _T_24 @[Chi.scala 16:26]
    node _T_25 = and(chi_not_wire[1][3], io.chi_in[3][3]) @[Chi.scala 17:45]
    chi_wire[1][3] <= _T_25 @[Chi.scala 17:22]
    chi_b_wire[1][3] <= io.chi_in[1][3] @[Chi.scala 18:24]
    node _T_26 = xor(chi_b_wire[1][3], chi_wire[1][3]) @[Chi.scala 19:44]
    io.chi_out[1][3] <= _T_26 @[Chi.scala 19:24]
    node _T_27 = not(io.chi_in[2][4]) @[Chi.scala 16:29]
    chi_not_wire[1][4] <= _T_27 @[Chi.scala 16:26]
    node _T_28 = and(chi_not_wire[1][4], io.chi_in[3][4]) @[Chi.scala 17:45]
    chi_wire[1][4] <= _T_28 @[Chi.scala 17:22]
    chi_b_wire[1][4] <= io.chi_in[1][4] @[Chi.scala 18:24]
    node _T_29 = xor(chi_b_wire[1][4], chi_wire[1][4]) @[Chi.scala 19:44]
    io.chi_out[1][4] <= _T_29 @[Chi.scala 19:24]
    node _T_30 = not(io.chi_in[3][0]) @[Chi.scala 16:29]
    chi_not_wire[2][0] <= _T_30 @[Chi.scala 16:26]
    node _T_31 = and(chi_not_wire[2][0], io.chi_in[4][0]) @[Chi.scala 17:45]
    chi_wire[2][0] <= _T_31 @[Chi.scala 17:22]
    chi_b_wire[2][0] <= io.chi_in[2][0] @[Chi.scala 18:24]
    node _T_32 = xor(chi_b_wire[2][0], chi_wire[2][0]) @[Chi.scala 19:44]
    io.chi_out[2][0] <= _T_32 @[Chi.scala 19:24]
    node _T_33 = not(io.chi_in[3][1]) @[Chi.scala 16:29]
    chi_not_wire[2][1] <= _T_33 @[Chi.scala 16:26]
    node _T_34 = and(chi_not_wire[2][1], io.chi_in[4][1]) @[Chi.scala 17:45]
    chi_wire[2][1] <= _T_34 @[Chi.scala 17:22]
    chi_b_wire[2][1] <= io.chi_in[2][1] @[Chi.scala 18:24]
    node _T_35 = xor(chi_b_wire[2][1], chi_wire[2][1]) @[Chi.scala 19:44]
    io.chi_out[2][1] <= _T_35 @[Chi.scala 19:24]
    node _T_36 = not(io.chi_in[3][2]) @[Chi.scala 16:29]
    chi_not_wire[2][2] <= _T_36 @[Chi.scala 16:26]
    node _T_37 = and(chi_not_wire[2][2], io.chi_in[4][2]) @[Chi.scala 17:45]
    chi_wire[2][2] <= _T_37 @[Chi.scala 17:22]
    chi_b_wire[2][2] <= io.chi_in[2][2] @[Chi.scala 18:24]
    node _T_38 = xor(chi_b_wire[2][2], chi_wire[2][2]) @[Chi.scala 19:44]
    io.chi_out[2][2] <= _T_38 @[Chi.scala 19:24]
    node _T_39 = not(io.chi_in[3][3]) @[Chi.scala 16:29]
    chi_not_wire[2][3] <= _T_39 @[Chi.scala 16:26]
    node _T_40 = and(chi_not_wire[2][3], io.chi_in[4][3]) @[Chi.scala 17:45]
    chi_wire[2][3] <= _T_40 @[Chi.scala 17:22]
    chi_b_wire[2][3] <= io.chi_in[2][3] @[Chi.scala 18:24]
    node _T_41 = xor(chi_b_wire[2][3], chi_wire[2][3]) @[Chi.scala 19:44]
    io.chi_out[2][3] <= _T_41 @[Chi.scala 19:24]
    node _T_42 = not(io.chi_in[3][4]) @[Chi.scala 16:29]
    chi_not_wire[2][4] <= _T_42 @[Chi.scala 16:26]
    node _T_43 = and(chi_not_wire[2][4], io.chi_in[4][4]) @[Chi.scala 17:45]
    chi_wire[2][4] <= _T_43 @[Chi.scala 17:22]
    chi_b_wire[2][4] <= io.chi_in[2][4] @[Chi.scala 18:24]
    node _T_44 = xor(chi_b_wire[2][4], chi_wire[2][4]) @[Chi.scala 19:44]
    io.chi_out[2][4] <= _T_44 @[Chi.scala 19:24]
    node _T_45 = not(io.chi_in[4][0]) @[Chi.scala 16:29]
    chi_not_wire[3][0] <= _T_45 @[Chi.scala 16:26]
    node _T_46 = and(chi_not_wire[3][0], io.chi_in[0][0]) @[Chi.scala 17:45]
    chi_wire[3][0] <= _T_46 @[Chi.scala 17:22]
    chi_b_wire[3][0] <= io.chi_in[3][0] @[Chi.scala 18:24]
    node _T_47 = xor(chi_b_wire[3][0], chi_wire[3][0]) @[Chi.scala 19:44]
    io.chi_out[3][0] <= _T_47 @[Chi.scala 19:24]
    node _T_48 = not(io.chi_in[4][1]) @[Chi.scala 16:29]
    chi_not_wire[3][1] <= _T_48 @[Chi.scala 16:26]
    node _T_49 = and(chi_not_wire[3][1], io.chi_in[0][1]) @[Chi.scala 17:45]
    chi_wire[3][1] <= _T_49 @[Chi.scala 17:22]
    chi_b_wire[3][1] <= io.chi_in[3][1] @[Chi.scala 18:24]
    node _T_50 = xor(chi_b_wire[3][1], chi_wire[3][1]) @[Chi.scala 19:44]
    io.chi_out[3][1] <= _T_50 @[Chi.scala 19:24]
    node _T_51 = not(io.chi_in[4][2]) @[Chi.scala 16:29]
    chi_not_wire[3][2] <= _T_51 @[Chi.scala 16:26]
    node _T_52 = and(chi_not_wire[3][2], io.chi_in[0][2]) @[Chi.scala 17:45]
    chi_wire[3][2] <= _T_52 @[Chi.scala 17:22]
    chi_b_wire[3][2] <= io.chi_in[3][2] @[Chi.scala 18:24]
    node _T_53 = xor(chi_b_wire[3][2], chi_wire[3][2]) @[Chi.scala 19:44]
    io.chi_out[3][2] <= _T_53 @[Chi.scala 19:24]
    node _T_54 = not(io.chi_in[4][3]) @[Chi.scala 16:29]
    chi_not_wire[3][3] <= _T_54 @[Chi.scala 16:26]
    node _T_55 = and(chi_not_wire[3][3], io.chi_in[0][3]) @[Chi.scala 17:45]
    chi_wire[3][3] <= _T_55 @[Chi.scala 17:22]
    chi_b_wire[3][3] <= io.chi_in[3][3] @[Chi.scala 18:24]
    node _T_56 = xor(chi_b_wire[3][3], chi_wire[3][3]) @[Chi.scala 19:44]
    io.chi_out[3][3] <= _T_56 @[Chi.scala 19:24]
    node _T_57 = not(io.chi_in[4][4]) @[Chi.scala 16:29]
    chi_not_wire[3][4] <= _T_57 @[Chi.scala 16:26]
    node _T_58 = and(chi_not_wire[3][4], io.chi_in[0][4]) @[Chi.scala 17:45]
    chi_wire[3][4] <= _T_58 @[Chi.scala 17:22]
    chi_b_wire[3][4] <= io.chi_in[3][4] @[Chi.scala 18:24]
    node _T_59 = xor(chi_b_wire[3][4], chi_wire[3][4]) @[Chi.scala 19:44]
    io.chi_out[3][4] <= _T_59 @[Chi.scala 19:24]
    node _T_60 = not(io.chi_in[0][0]) @[Chi.scala 16:29]
    chi_not_wire[4][0] <= _T_60 @[Chi.scala 16:26]
    node _T_61 = and(chi_not_wire[4][0], io.chi_in[1][0]) @[Chi.scala 17:45]
    chi_wire[4][0] <= _T_61 @[Chi.scala 17:22]
    chi_b_wire[4][0] <= io.chi_in[4][0] @[Chi.scala 18:24]
    node _T_62 = xor(chi_b_wire[4][0], chi_wire[4][0]) @[Chi.scala 19:44]
    io.chi_out[4][0] <= _T_62 @[Chi.scala 19:24]
    node _T_63 = not(io.chi_in[0][1]) @[Chi.scala 16:29]
    chi_not_wire[4][1] <= _T_63 @[Chi.scala 16:26]
    node _T_64 = and(chi_not_wire[4][1], io.chi_in[1][1]) @[Chi.scala 17:45]
    chi_wire[4][1] <= _T_64 @[Chi.scala 17:22]
    chi_b_wire[4][1] <= io.chi_in[4][1] @[Chi.scala 18:24]
    node _T_65 = xor(chi_b_wire[4][1], chi_wire[4][1]) @[Chi.scala 19:44]
    io.chi_out[4][1] <= _T_65 @[Chi.scala 19:24]
    node _T_66 = not(io.chi_in[0][2]) @[Chi.scala 16:29]
    chi_not_wire[4][2] <= _T_66 @[Chi.scala 16:26]
    node _T_67 = and(chi_not_wire[4][2], io.chi_in[1][2]) @[Chi.scala 17:45]
    chi_wire[4][2] <= _T_67 @[Chi.scala 17:22]
    chi_b_wire[4][2] <= io.chi_in[4][2] @[Chi.scala 18:24]
    node _T_68 = xor(chi_b_wire[4][2], chi_wire[4][2]) @[Chi.scala 19:44]
    io.chi_out[4][2] <= _T_68 @[Chi.scala 19:24]
    node _T_69 = not(io.chi_in[0][3]) @[Chi.scala 16:29]
    chi_not_wire[4][3] <= _T_69 @[Chi.scala 16:26]
    node _T_70 = and(chi_not_wire[4][3], io.chi_in[1][3]) @[Chi.scala 17:45]
    chi_wire[4][3] <= _T_70 @[Chi.scala 17:22]
    chi_b_wire[4][3] <= io.chi_in[4][3] @[Chi.scala 18:24]
    node _T_71 = xor(chi_b_wire[4][3], chi_wire[4][3]) @[Chi.scala 19:44]
    io.chi_out[4][3] <= _T_71 @[Chi.scala 19:24]
    node _T_72 = not(io.chi_in[0][4]) @[Chi.scala 16:29]
    chi_not_wire[4][4] <= _T_72 @[Chi.scala 16:26]
    node _T_73 = and(chi_not_wire[4][4], io.chi_in[1][4]) @[Chi.scala 17:45]
    chi_wire[4][4] <= _T_73 @[Chi.scala 17:22]
    chi_b_wire[4][4] <= io.chi_in[4][4] @[Chi.scala 18:24]
    node _T_74 = xor(chi_b_wire[4][4], chi_wire[4][4]) @[Chi.scala 19:44]
    io.chi_out[4][4] <= _T_74 @[Chi.scala 19:24]
    
  module Iota : 
    input clock : Clock
    input reset : Reset
    output io : {flip iota_in : UInt<64>, flip iota_round : UInt<64>, iota_out : UInt<64>}
    
    wire RC : UInt<64>[24] @[Iota.scala 11:17]
    RC[0] <= UInt<1>("h01") @[Iota.scala 12:11]
    RC[1] <= UInt<16>("h08082") @[Iota.scala 13:11]
    RC[2] <= UInt<64>("h0800000000000808a") @[Iota.scala 14:11]
    RC[3] <= UInt<64>("h08000000080008000") @[Iota.scala 15:11]
    RC[4] <= UInt<16>("h0808b") @[Iota.scala 16:11]
    RC[5] <= UInt<32>("h080000001") @[Iota.scala 17:11]
    RC[6] <= UInt<64>("h08000000080008081") @[Iota.scala 18:11]
    RC[7] <= UInt<64>("h08000000000008009") @[Iota.scala 19:11]
    RC[8] <= UInt<8>("h08a") @[Iota.scala 20:11]
    RC[9] <= UInt<8>("h088") @[Iota.scala 21:11]
    RC[10] <= UInt<32>("h080008009") @[Iota.scala 22:11]
    RC[11] <= UInt<32>("h08000000a") @[Iota.scala 23:11]
    RC[12] <= UInt<32>("h08000808b") @[Iota.scala 24:11]
    RC[13] <= UInt<64>("h0800000000000008b") @[Iota.scala 25:11]
    RC[14] <= UInt<64>("h08000000000008089") @[Iota.scala 26:11]
    RC[15] <= UInt<64>("h08000000000008003") @[Iota.scala 27:11]
    RC[16] <= UInt<64>("h08000000000008002") @[Iota.scala 28:11]
    RC[17] <= UInt<64>("h08000000000000080") @[Iota.scala 29:11]
    RC[18] <= UInt<16>("h0800a") @[Iota.scala 30:11]
    RC[19] <= UInt<64>("h0800000008000000a") @[Iota.scala 31:11]
    RC[20] <= UInt<64>("h08000000080008081") @[Iota.scala 32:11]
    RC[21] <= UInt<64>("h08000000000008080") @[Iota.scala 33:11]
    RC[22] <= UInt<32>("h080000001") @[Iota.scala 34:11]
    RC[23] <= UInt<64>("h08000000080008008") @[Iota.scala 35:11]
    node _T = bits(io.iota_round, 4, 0)
    node _T_1 = xor(io.iota_in, RC[_T]) @[Iota.scala 38:28]
    io.iota_out <= _T_1 @[Iota.scala 38:15]
    
  module Round : 
    input clock : Clock
    input reset : Reset
    output io : {flip round_in : UInt<64>[5][5], round_out : UInt<64>[5][5], flip R_iota_round : UInt<64>, R_theta_out : UInt<64>[5][5], R_rhoPi_out : UInt<64>[5][5], R_chi_out : UInt<64>[5][5], R_iota_out : UInt<64>, R_theta_d_out : UInt<64>[5], R_theta_c_out : UInt<64>[5]}
    
    inst theta of Theta @[Round.scala 16:23]
    theta.clock <= clock
    theta.reset <= reset
    inst rhoPi of RhoPi @[Round.scala 17:23]
    rhoPi.clock <= clock
    rhoPi.reset <= reset
    inst chi of Chi @[Round.scala 18:23]
    chi.clock <= clock
    chi.reset <= reset
    inst iota of Iota @[Round.scala 19:23]
    iota.clock <= clock
    iota.reset <= reset
    theta.io.theta_in[0][0] <= io.round_in[0][0] @[Round.scala 21:27]
    theta.io.theta_in[0][1] <= io.round_in[0][1] @[Round.scala 21:27]
    theta.io.theta_in[0][2] <= io.round_in[0][2] @[Round.scala 21:27]
    theta.io.theta_in[0][3] <= io.round_in[0][3] @[Round.scala 21:27]
    theta.io.theta_in[0][4] <= io.round_in[0][4] @[Round.scala 21:27]
    theta.io.theta_in[1][0] <= io.round_in[1][0] @[Round.scala 21:27]
    theta.io.theta_in[1][1] <= io.round_in[1][1] @[Round.scala 21:27]
    theta.io.theta_in[1][2] <= io.round_in[1][2] @[Round.scala 21:27]
    theta.io.theta_in[1][3] <= io.round_in[1][3] @[Round.scala 21:27]
    theta.io.theta_in[1][4] <= io.round_in[1][4] @[Round.scala 21:27]
    theta.io.theta_in[2][0] <= io.round_in[2][0] @[Round.scala 21:27]
    theta.io.theta_in[2][1] <= io.round_in[2][1] @[Round.scala 21:27]
    theta.io.theta_in[2][2] <= io.round_in[2][2] @[Round.scala 21:27]
    theta.io.theta_in[2][3] <= io.round_in[2][3] @[Round.scala 21:27]
    theta.io.theta_in[2][4] <= io.round_in[2][4] @[Round.scala 21:27]
    theta.io.theta_in[3][0] <= io.round_in[3][0] @[Round.scala 21:27]
    theta.io.theta_in[3][1] <= io.round_in[3][1] @[Round.scala 21:27]
    theta.io.theta_in[3][2] <= io.round_in[3][2] @[Round.scala 21:27]
    theta.io.theta_in[3][3] <= io.round_in[3][3] @[Round.scala 21:27]
    theta.io.theta_in[3][4] <= io.round_in[3][4] @[Round.scala 21:27]
    theta.io.theta_in[4][0] <= io.round_in[4][0] @[Round.scala 21:27]
    theta.io.theta_in[4][1] <= io.round_in[4][1] @[Round.scala 21:27]
    theta.io.theta_in[4][2] <= io.round_in[4][2] @[Round.scala 21:27]
    theta.io.theta_in[4][3] <= io.round_in[4][3] @[Round.scala 21:27]
    theta.io.theta_in[4][4] <= io.round_in[4][4] @[Round.scala 21:27]
    rhoPi.io.rhoPi_in[0][0] <= theta.io.theta_out[0][0] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[0][1] <= theta.io.theta_out[0][1] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[0][2] <= theta.io.theta_out[0][2] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[0][3] <= theta.io.theta_out[0][3] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[0][4] <= theta.io.theta_out[0][4] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[1][0] <= theta.io.theta_out[1][0] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[1][1] <= theta.io.theta_out[1][1] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[1][2] <= theta.io.theta_out[1][2] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[1][3] <= theta.io.theta_out[1][3] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[1][4] <= theta.io.theta_out[1][4] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[2][0] <= theta.io.theta_out[2][0] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[2][1] <= theta.io.theta_out[2][1] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[2][2] <= theta.io.theta_out[2][2] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[2][3] <= theta.io.theta_out[2][3] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[2][4] <= theta.io.theta_out[2][4] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[3][0] <= theta.io.theta_out[3][0] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[3][1] <= theta.io.theta_out[3][1] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[3][2] <= theta.io.theta_out[3][2] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[3][3] <= theta.io.theta_out[3][3] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[3][4] <= theta.io.theta_out[3][4] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[4][0] <= theta.io.theta_out[4][0] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[4][1] <= theta.io.theta_out[4][1] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[4][2] <= theta.io.theta_out[4][2] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[4][3] <= theta.io.theta_out[4][3] @[Round.scala 22:27]
    rhoPi.io.rhoPi_in[4][4] <= theta.io.theta_out[4][4] @[Round.scala 22:27]
    chi.io.chi_in[0][0] <= rhoPi.io.rhoPi_out[0][0] @[Round.scala 23:27]
    chi.io.chi_in[0][1] <= rhoPi.io.rhoPi_out[0][1] @[Round.scala 23:27]
    chi.io.chi_in[0][2] <= rhoPi.io.rhoPi_out[0][2] @[Round.scala 23:27]
    chi.io.chi_in[0][3] <= rhoPi.io.rhoPi_out[0][3] @[Round.scala 23:27]
    chi.io.chi_in[0][4] <= rhoPi.io.rhoPi_out[0][4] @[Round.scala 23:27]
    chi.io.chi_in[1][0] <= rhoPi.io.rhoPi_out[1][0] @[Round.scala 23:27]
    chi.io.chi_in[1][1] <= rhoPi.io.rhoPi_out[1][1] @[Round.scala 23:27]
    chi.io.chi_in[1][2] <= rhoPi.io.rhoPi_out[1][2] @[Round.scala 23:27]
    chi.io.chi_in[1][3] <= rhoPi.io.rhoPi_out[1][3] @[Round.scala 23:27]
    chi.io.chi_in[1][4] <= rhoPi.io.rhoPi_out[1][4] @[Round.scala 23:27]
    chi.io.chi_in[2][0] <= rhoPi.io.rhoPi_out[2][0] @[Round.scala 23:27]
    chi.io.chi_in[2][1] <= rhoPi.io.rhoPi_out[2][1] @[Round.scala 23:27]
    chi.io.chi_in[2][2] <= rhoPi.io.rhoPi_out[2][2] @[Round.scala 23:27]
    chi.io.chi_in[2][3] <= rhoPi.io.rhoPi_out[2][3] @[Round.scala 23:27]
    chi.io.chi_in[2][4] <= rhoPi.io.rhoPi_out[2][4] @[Round.scala 23:27]
    chi.io.chi_in[3][0] <= rhoPi.io.rhoPi_out[3][0] @[Round.scala 23:27]
    chi.io.chi_in[3][1] <= rhoPi.io.rhoPi_out[3][1] @[Round.scala 23:27]
    chi.io.chi_in[3][2] <= rhoPi.io.rhoPi_out[3][2] @[Round.scala 23:27]
    chi.io.chi_in[3][3] <= rhoPi.io.rhoPi_out[3][3] @[Round.scala 23:27]
    chi.io.chi_in[3][4] <= rhoPi.io.rhoPi_out[3][4] @[Round.scala 23:27]
    chi.io.chi_in[4][0] <= rhoPi.io.rhoPi_out[4][0] @[Round.scala 23:27]
    chi.io.chi_in[4][1] <= rhoPi.io.rhoPi_out[4][1] @[Round.scala 23:27]
    chi.io.chi_in[4][2] <= rhoPi.io.rhoPi_out[4][2] @[Round.scala 23:27]
    chi.io.chi_in[4][3] <= rhoPi.io.rhoPi_out[4][3] @[Round.scala 23:27]
    chi.io.chi_in[4][4] <= rhoPi.io.rhoPi_out[4][4] @[Round.scala 23:27]
    iota.io.iota_in <= chi.io.chi_out[0][0] @[Round.scala 24:27]
    iota.io.iota_round <= io.R_iota_round @[Round.scala 26:27]
    io.round_out[0][0] <= iota.io.iota_out @[Round.scala 27:27]
    io.R_theta_out[0][0] <= theta.io.theta_out[0][0] @[Round.scala 29:27]
    io.R_theta_out[0][1] <= theta.io.theta_out[0][1] @[Round.scala 29:27]
    io.R_theta_out[0][2] <= theta.io.theta_out[0][2] @[Round.scala 29:27]
    io.R_theta_out[0][3] <= theta.io.theta_out[0][3] @[Round.scala 29:27]
    io.R_theta_out[0][4] <= theta.io.theta_out[0][4] @[Round.scala 29:27]
    io.R_theta_out[1][0] <= theta.io.theta_out[1][0] @[Round.scala 29:27]
    io.R_theta_out[1][1] <= theta.io.theta_out[1][1] @[Round.scala 29:27]
    io.R_theta_out[1][2] <= theta.io.theta_out[1][2] @[Round.scala 29:27]
    io.R_theta_out[1][3] <= theta.io.theta_out[1][3] @[Round.scala 29:27]
    io.R_theta_out[1][4] <= theta.io.theta_out[1][4] @[Round.scala 29:27]
    io.R_theta_out[2][0] <= theta.io.theta_out[2][0] @[Round.scala 29:27]
    io.R_theta_out[2][1] <= theta.io.theta_out[2][1] @[Round.scala 29:27]
    io.R_theta_out[2][2] <= theta.io.theta_out[2][2] @[Round.scala 29:27]
    io.R_theta_out[2][3] <= theta.io.theta_out[2][3] @[Round.scala 29:27]
    io.R_theta_out[2][4] <= theta.io.theta_out[2][4] @[Round.scala 29:27]
    io.R_theta_out[3][0] <= theta.io.theta_out[3][0] @[Round.scala 29:27]
    io.R_theta_out[3][1] <= theta.io.theta_out[3][1] @[Round.scala 29:27]
    io.R_theta_out[3][2] <= theta.io.theta_out[3][2] @[Round.scala 29:27]
    io.R_theta_out[3][3] <= theta.io.theta_out[3][3] @[Round.scala 29:27]
    io.R_theta_out[3][4] <= theta.io.theta_out[3][4] @[Round.scala 29:27]
    io.R_theta_out[4][0] <= theta.io.theta_out[4][0] @[Round.scala 29:27]
    io.R_theta_out[4][1] <= theta.io.theta_out[4][1] @[Round.scala 29:27]
    io.R_theta_out[4][2] <= theta.io.theta_out[4][2] @[Round.scala 29:27]
    io.R_theta_out[4][3] <= theta.io.theta_out[4][3] @[Round.scala 29:27]
    io.R_theta_out[4][4] <= theta.io.theta_out[4][4] @[Round.scala 29:27]
    io.R_rhoPi_out[0][0] <= rhoPi.io.rhoPi_out[0][0] @[Round.scala 30:27]
    io.R_rhoPi_out[0][1] <= rhoPi.io.rhoPi_out[0][1] @[Round.scala 30:27]
    io.R_rhoPi_out[0][2] <= rhoPi.io.rhoPi_out[0][2] @[Round.scala 30:27]
    io.R_rhoPi_out[0][3] <= rhoPi.io.rhoPi_out[0][3] @[Round.scala 30:27]
    io.R_rhoPi_out[0][4] <= rhoPi.io.rhoPi_out[0][4] @[Round.scala 30:27]
    io.R_rhoPi_out[1][0] <= rhoPi.io.rhoPi_out[1][0] @[Round.scala 30:27]
    io.R_rhoPi_out[1][1] <= rhoPi.io.rhoPi_out[1][1] @[Round.scala 30:27]
    io.R_rhoPi_out[1][2] <= rhoPi.io.rhoPi_out[1][2] @[Round.scala 30:27]
    io.R_rhoPi_out[1][3] <= rhoPi.io.rhoPi_out[1][3] @[Round.scala 30:27]
    io.R_rhoPi_out[1][4] <= rhoPi.io.rhoPi_out[1][4] @[Round.scala 30:27]
    io.R_rhoPi_out[2][0] <= rhoPi.io.rhoPi_out[2][0] @[Round.scala 30:27]
    io.R_rhoPi_out[2][1] <= rhoPi.io.rhoPi_out[2][1] @[Round.scala 30:27]
    io.R_rhoPi_out[2][2] <= rhoPi.io.rhoPi_out[2][2] @[Round.scala 30:27]
    io.R_rhoPi_out[2][3] <= rhoPi.io.rhoPi_out[2][3] @[Round.scala 30:27]
    io.R_rhoPi_out[2][4] <= rhoPi.io.rhoPi_out[2][4] @[Round.scala 30:27]
    io.R_rhoPi_out[3][0] <= rhoPi.io.rhoPi_out[3][0] @[Round.scala 30:27]
    io.R_rhoPi_out[3][1] <= rhoPi.io.rhoPi_out[3][1] @[Round.scala 30:27]
    io.R_rhoPi_out[3][2] <= rhoPi.io.rhoPi_out[3][2] @[Round.scala 30:27]
    io.R_rhoPi_out[3][3] <= rhoPi.io.rhoPi_out[3][3] @[Round.scala 30:27]
    io.R_rhoPi_out[3][4] <= rhoPi.io.rhoPi_out[3][4] @[Round.scala 30:27]
    io.R_rhoPi_out[4][0] <= rhoPi.io.rhoPi_out[4][0] @[Round.scala 30:27]
    io.R_rhoPi_out[4][1] <= rhoPi.io.rhoPi_out[4][1] @[Round.scala 30:27]
    io.R_rhoPi_out[4][2] <= rhoPi.io.rhoPi_out[4][2] @[Round.scala 30:27]
    io.R_rhoPi_out[4][3] <= rhoPi.io.rhoPi_out[4][3] @[Round.scala 30:27]
    io.R_rhoPi_out[4][4] <= rhoPi.io.rhoPi_out[4][4] @[Round.scala 30:27]
    io.R_chi_out[0][0] <= chi.io.chi_out[0][0] @[Round.scala 31:27]
    io.R_chi_out[0][1] <= chi.io.chi_out[0][1] @[Round.scala 31:27]
    io.R_chi_out[0][2] <= chi.io.chi_out[0][2] @[Round.scala 31:27]
    io.R_chi_out[0][3] <= chi.io.chi_out[0][3] @[Round.scala 31:27]
    io.R_chi_out[0][4] <= chi.io.chi_out[0][4] @[Round.scala 31:27]
    io.R_chi_out[1][0] <= chi.io.chi_out[1][0] @[Round.scala 31:27]
    io.R_chi_out[1][1] <= chi.io.chi_out[1][1] @[Round.scala 31:27]
    io.R_chi_out[1][2] <= chi.io.chi_out[1][2] @[Round.scala 31:27]
    io.R_chi_out[1][3] <= chi.io.chi_out[1][3] @[Round.scala 31:27]
    io.R_chi_out[1][4] <= chi.io.chi_out[1][4] @[Round.scala 31:27]
    io.R_chi_out[2][0] <= chi.io.chi_out[2][0] @[Round.scala 31:27]
    io.R_chi_out[2][1] <= chi.io.chi_out[2][1] @[Round.scala 31:27]
    io.R_chi_out[2][2] <= chi.io.chi_out[2][2] @[Round.scala 31:27]
    io.R_chi_out[2][3] <= chi.io.chi_out[2][3] @[Round.scala 31:27]
    io.R_chi_out[2][4] <= chi.io.chi_out[2][4] @[Round.scala 31:27]
    io.R_chi_out[3][0] <= chi.io.chi_out[3][0] @[Round.scala 31:27]
    io.R_chi_out[3][1] <= chi.io.chi_out[3][1] @[Round.scala 31:27]
    io.R_chi_out[3][2] <= chi.io.chi_out[3][2] @[Round.scala 31:27]
    io.R_chi_out[3][3] <= chi.io.chi_out[3][3] @[Round.scala 31:27]
    io.R_chi_out[3][4] <= chi.io.chi_out[3][4] @[Round.scala 31:27]
    io.R_chi_out[4][0] <= chi.io.chi_out[4][0] @[Round.scala 31:27]
    io.R_chi_out[4][1] <= chi.io.chi_out[4][1] @[Round.scala 31:27]
    io.R_chi_out[4][2] <= chi.io.chi_out[4][2] @[Round.scala 31:27]
    io.R_chi_out[4][3] <= chi.io.chi_out[4][3] @[Round.scala 31:27]
    io.R_chi_out[4][4] <= chi.io.chi_out[4][4] @[Round.scala 31:27]
    io.R_iota_out <= iota.io.iota_out @[Round.scala 32:27]
    io.R_theta_c_out[0] <= theta.io.c_out[0] @[Round.scala 34:27]
    io.R_theta_c_out[1] <= theta.io.c_out[1] @[Round.scala 34:27]
    io.R_theta_c_out[2] <= theta.io.c_out[2] @[Round.scala 34:27]
    io.R_theta_c_out[3] <= theta.io.c_out[3] @[Round.scala 34:27]
    io.R_theta_c_out[4] <= theta.io.c_out[4] @[Round.scala 34:27]
    io.R_theta_d_out[0] <= theta.io.d_out[0] @[Round.scala 35:27]
    io.R_theta_d_out[1] <= theta.io.d_out[1] @[Round.scala 35:27]
    io.R_theta_d_out[2] <= theta.io.d_out[2] @[Round.scala 35:27]
    io.R_theta_d_out[3] <= theta.io.d_out[3] @[Round.scala 35:27]
    io.R_theta_d_out[4] <= theta.io.d_out[4] @[Round.scala 35:27]
    io.round_out[1][0] <= chi.io.chi_out[1][0] @[Round.scala 39:26]
    io.round_out[1][1] <= chi.io.chi_out[1][1] @[Round.scala 39:26]
    io.round_out[1][2] <= chi.io.chi_out[1][2] @[Round.scala 39:26]
    io.round_out[1][3] <= chi.io.chi_out[1][3] @[Round.scala 39:26]
    io.round_out[1][4] <= chi.io.chi_out[1][4] @[Round.scala 39:26]
    io.round_out[2][0] <= chi.io.chi_out[2][0] @[Round.scala 39:26]
    io.round_out[2][1] <= chi.io.chi_out[2][1] @[Round.scala 39:26]
    io.round_out[2][2] <= chi.io.chi_out[2][2] @[Round.scala 39:26]
    io.round_out[2][3] <= chi.io.chi_out[2][3] @[Round.scala 39:26]
    io.round_out[2][4] <= chi.io.chi_out[2][4] @[Round.scala 39:26]
    io.round_out[3][0] <= chi.io.chi_out[3][0] @[Round.scala 39:26]
    io.round_out[3][1] <= chi.io.chi_out[3][1] @[Round.scala 39:26]
    io.round_out[3][2] <= chi.io.chi_out[3][2] @[Round.scala 39:26]
    io.round_out[3][3] <= chi.io.chi_out[3][3] @[Round.scala 39:26]
    io.round_out[3][4] <= chi.io.chi_out[3][4] @[Round.scala 39:26]
    io.round_out[4][0] <= chi.io.chi_out[4][0] @[Round.scala 39:26]
    io.round_out[4][1] <= chi.io.chi_out[4][1] @[Round.scala 39:26]
    io.round_out[4][2] <= chi.io.chi_out[4][2] @[Round.scala 39:26]
    io.round_out[4][3] <= chi.io.chi_out[4][3] @[Round.scala 39:26]
    io.round_out[4][4] <= chi.io.chi_out[4][4] @[Round.scala 39:26]
    io.round_out[0][1] <= chi.io.chi_out[0][1] @[Round.scala 42:24]
    io.round_out[0][2] <= chi.io.chi_out[0][2] @[Round.scala 42:24]
    io.round_out[0][3] <= chi.io.chi_out[0][3] @[Round.scala 42:24]
    io.round_out[0][4] <= chi.io.chi_out[0][4] @[Round.scala 42:24]
    
  module Sha3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip r_in : UInt<64>[9], flip c_in : UInt<64>[16], flip buffer_ready : UInt<1>, round_out : UInt<64>[5][5], theta_out : UInt<64>[5][5], theta_d : UInt<64>[5], theta_c : UInt<64>[5], rhoPi_out : UInt<64>[5][5], chi_out : UInt<64>[5][5], iota_out : UInt<64>, round_in : UInt<64>[5][5], register_out : UInt<64>[5][5]}
    
    inst round of Round @[Sha3.scala 27:24]
    round.clock <= clock
    round.reset <= reset
    wire _WIRE : UInt<64>[5] @[Sha3.scala 30:53]
    _WIRE[0] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE[1] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE[2] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE[3] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE[4] <= UInt<64>("h00") @[Sha3.scala 30:53]
    wire _WIRE_1 : UInt<64>[5] @[Sha3.scala 30:53]
    _WIRE_1[0] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_1[1] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_1[2] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_1[3] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_1[4] <= UInt<64>("h00") @[Sha3.scala 30:53]
    wire _WIRE_2 : UInt<64>[5] @[Sha3.scala 30:53]
    _WIRE_2[0] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_2[1] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_2[2] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_2[3] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_2[4] <= UInt<64>("h00") @[Sha3.scala 30:53]
    wire _WIRE_3 : UInt<64>[5] @[Sha3.scala 30:53]
    _WIRE_3[0] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_3[1] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_3[2] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_3[3] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_3[4] <= UInt<64>("h00") @[Sha3.scala 30:53]
    wire _WIRE_4 : UInt<64>[5] @[Sha3.scala 30:53]
    _WIRE_4[0] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_4[1] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_4[2] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_4[3] <= UInt<64>("h00") @[Sha3.scala 30:53]
    _WIRE_4[4] <= UInt<64>("h00") @[Sha3.scala 30:53]
    wire _WIRE_5 : UInt<64>[5][5] @[Sha3.scala 30:33]
    _WIRE_5[0][0] <= _WIRE[0] @[Sha3.scala 30:33]
    _WIRE_5[0][1] <= _WIRE[1] @[Sha3.scala 30:33]
    _WIRE_5[0][2] <= _WIRE[2] @[Sha3.scala 30:33]
    _WIRE_5[0][3] <= _WIRE[3] @[Sha3.scala 30:33]
    _WIRE_5[0][4] <= _WIRE[4] @[Sha3.scala 30:33]
    _WIRE_5[1][0] <= _WIRE_1[0] @[Sha3.scala 30:33]
    _WIRE_5[1][1] <= _WIRE_1[1] @[Sha3.scala 30:33]
    _WIRE_5[1][2] <= _WIRE_1[2] @[Sha3.scala 30:33]
    _WIRE_5[1][3] <= _WIRE_1[3] @[Sha3.scala 30:33]
    _WIRE_5[1][4] <= _WIRE_1[4] @[Sha3.scala 30:33]
    _WIRE_5[2][0] <= _WIRE_2[0] @[Sha3.scala 30:33]
    _WIRE_5[2][1] <= _WIRE_2[1] @[Sha3.scala 30:33]
    _WIRE_5[2][2] <= _WIRE_2[2] @[Sha3.scala 30:33]
    _WIRE_5[2][3] <= _WIRE_2[3] @[Sha3.scala 30:33]
    _WIRE_5[2][4] <= _WIRE_2[4] @[Sha3.scala 30:33]
    _WIRE_5[3][0] <= _WIRE_3[0] @[Sha3.scala 30:33]
    _WIRE_5[3][1] <= _WIRE_3[1] @[Sha3.scala 30:33]
    _WIRE_5[3][2] <= _WIRE_3[2] @[Sha3.scala 30:33]
    _WIRE_5[3][3] <= _WIRE_3[3] @[Sha3.scala 30:33]
    _WIRE_5[3][4] <= _WIRE_3[4] @[Sha3.scala 30:33]
    _WIRE_5[4][0] <= _WIRE_4[0] @[Sha3.scala 30:33]
    _WIRE_5[4][1] <= _WIRE_4[1] @[Sha3.scala 30:33]
    _WIRE_5[4][2] <= _WIRE_4[2] @[Sha3.scala 30:33]
    _WIRE_5[4][3] <= _WIRE_4[3] @[Sha3.scala 30:33]
    _WIRE_5[4][4] <= _WIRE_4[4] @[Sha3.scala 30:33]
    reg stateReg : UInt<64>[5][5], clock with : (reset => (reset, _WIRE_5)) @[Sha3.scala 30:25]
    reg next_state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[Sha3.scala 35:30]
    reg xor_select : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Sha3.scala 36:30]
    reg iota_round : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Sha3.scala 37:30]
    io.theta_d[0] <= round.io.R_theta_d_out[0] @[Sha3.scala 40:19]
    io.theta_d[1] <= round.io.R_theta_d_out[1] @[Sha3.scala 40:19]
    io.theta_d[2] <= round.io.R_theta_d_out[2] @[Sha3.scala 40:19]
    io.theta_d[3] <= round.io.R_theta_d_out[3] @[Sha3.scala 40:19]
    io.theta_d[4] <= round.io.R_theta_d_out[4] @[Sha3.scala 40:19]
    io.theta_c[0] <= round.io.R_theta_c_out[0] @[Sha3.scala 41:19]
    io.theta_c[1] <= round.io.R_theta_c_out[1] @[Sha3.scala 41:19]
    io.theta_c[2] <= round.io.R_theta_c_out[2] @[Sha3.scala 41:19]
    io.theta_c[3] <= round.io.R_theta_c_out[3] @[Sha3.scala 41:19]
    io.theta_c[4] <= round.io.R_theta_c_out[4] @[Sha3.scala 41:19]
    io.theta_out[0][0] <= round.io.R_theta_out[0][0] @[Sha3.scala 42:19]
    io.theta_out[0][1] <= round.io.R_theta_out[0][1] @[Sha3.scala 42:19]
    io.theta_out[0][2] <= round.io.R_theta_out[0][2] @[Sha3.scala 42:19]
    io.theta_out[0][3] <= round.io.R_theta_out[0][3] @[Sha3.scala 42:19]
    io.theta_out[0][4] <= round.io.R_theta_out[0][4] @[Sha3.scala 42:19]
    io.theta_out[1][0] <= round.io.R_theta_out[1][0] @[Sha3.scala 42:19]
    io.theta_out[1][1] <= round.io.R_theta_out[1][1] @[Sha3.scala 42:19]
    io.theta_out[1][2] <= round.io.R_theta_out[1][2] @[Sha3.scala 42:19]
    io.theta_out[1][3] <= round.io.R_theta_out[1][3] @[Sha3.scala 42:19]
    io.theta_out[1][4] <= round.io.R_theta_out[1][4] @[Sha3.scala 42:19]
    io.theta_out[2][0] <= round.io.R_theta_out[2][0] @[Sha3.scala 42:19]
    io.theta_out[2][1] <= round.io.R_theta_out[2][1] @[Sha3.scala 42:19]
    io.theta_out[2][2] <= round.io.R_theta_out[2][2] @[Sha3.scala 42:19]
    io.theta_out[2][3] <= round.io.R_theta_out[2][3] @[Sha3.scala 42:19]
    io.theta_out[2][4] <= round.io.R_theta_out[2][4] @[Sha3.scala 42:19]
    io.theta_out[3][0] <= round.io.R_theta_out[3][0] @[Sha3.scala 42:19]
    io.theta_out[3][1] <= round.io.R_theta_out[3][1] @[Sha3.scala 42:19]
    io.theta_out[3][2] <= round.io.R_theta_out[3][2] @[Sha3.scala 42:19]
    io.theta_out[3][3] <= round.io.R_theta_out[3][3] @[Sha3.scala 42:19]
    io.theta_out[3][4] <= round.io.R_theta_out[3][4] @[Sha3.scala 42:19]
    io.theta_out[4][0] <= round.io.R_theta_out[4][0] @[Sha3.scala 42:19]
    io.theta_out[4][1] <= round.io.R_theta_out[4][1] @[Sha3.scala 42:19]
    io.theta_out[4][2] <= round.io.R_theta_out[4][2] @[Sha3.scala 42:19]
    io.theta_out[4][3] <= round.io.R_theta_out[4][3] @[Sha3.scala 42:19]
    io.theta_out[4][4] <= round.io.R_theta_out[4][4] @[Sha3.scala 42:19]
    io.rhoPi_out[0][0] <= round.io.R_rhoPi_out[0][0] @[Sha3.scala 43:19]
    io.rhoPi_out[0][1] <= round.io.R_rhoPi_out[0][1] @[Sha3.scala 43:19]
    io.rhoPi_out[0][2] <= round.io.R_rhoPi_out[0][2] @[Sha3.scala 43:19]
    io.rhoPi_out[0][3] <= round.io.R_rhoPi_out[0][3] @[Sha3.scala 43:19]
    io.rhoPi_out[0][4] <= round.io.R_rhoPi_out[0][4] @[Sha3.scala 43:19]
    io.rhoPi_out[1][0] <= round.io.R_rhoPi_out[1][0] @[Sha3.scala 43:19]
    io.rhoPi_out[1][1] <= round.io.R_rhoPi_out[1][1] @[Sha3.scala 43:19]
    io.rhoPi_out[1][2] <= round.io.R_rhoPi_out[1][2] @[Sha3.scala 43:19]
    io.rhoPi_out[1][3] <= round.io.R_rhoPi_out[1][3] @[Sha3.scala 43:19]
    io.rhoPi_out[1][4] <= round.io.R_rhoPi_out[1][4] @[Sha3.scala 43:19]
    io.rhoPi_out[2][0] <= round.io.R_rhoPi_out[2][0] @[Sha3.scala 43:19]
    io.rhoPi_out[2][1] <= round.io.R_rhoPi_out[2][1] @[Sha3.scala 43:19]
    io.rhoPi_out[2][2] <= round.io.R_rhoPi_out[2][2] @[Sha3.scala 43:19]
    io.rhoPi_out[2][3] <= round.io.R_rhoPi_out[2][3] @[Sha3.scala 43:19]
    io.rhoPi_out[2][4] <= round.io.R_rhoPi_out[2][4] @[Sha3.scala 43:19]
    io.rhoPi_out[3][0] <= round.io.R_rhoPi_out[3][0] @[Sha3.scala 43:19]
    io.rhoPi_out[3][1] <= round.io.R_rhoPi_out[3][1] @[Sha3.scala 43:19]
    io.rhoPi_out[3][2] <= round.io.R_rhoPi_out[3][2] @[Sha3.scala 43:19]
    io.rhoPi_out[3][3] <= round.io.R_rhoPi_out[3][3] @[Sha3.scala 43:19]
    io.rhoPi_out[3][4] <= round.io.R_rhoPi_out[3][4] @[Sha3.scala 43:19]
    io.rhoPi_out[4][0] <= round.io.R_rhoPi_out[4][0] @[Sha3.scala 43:19]
    io.rhoPi_out[4][1] <= round.io.R_rhoPi_out[4][1] @[Sha3.scala 43:19]
    io.rhoPi_out[4][2] <= round.io.R_rhoPi_out[4][2] @[Sha3.scala 43:19]
    io.rhoPi_out[4][3] <= round.io.R_rhoPi_out[4][3] @[Sha3.scala 43:19]
    io.rhoPi_out[4][4] <= round.io.R_rhoPi_out[4][4] @[Sha3.scala 43:19]
    io.chi_out[0][0] <= round.io.R_chi_out[0][0] @[Sha3.scala 44:19]
    io.chi_out[0][1] <= round.io.R_chi_out[0][1] @[Sha3.scala 44:19]
    io.chi_out[0][2] <= round.io.R_chi_out[0][2] @[Sha3.scala 44:19]
    io.chi_out[0][3] <= round.io.R_chi_out[0][3] @[Sha3.scala 44:19]
    io.chi_out[0][4] <= round.io.R_chi_out[0][4] @[Sha3.scala 44:19]
    io.chi_out[1][0] <= round.io.R_chi_out[1][0] @[Sha3.scala 44:19]
    io.chi_out[1][1] <= round.io.R_chi_out[1][1] @[Sha3.scala 44:19]
    io.chi_out[1][2] <= round.io.R_chi_out[1][2] @[Sha3.scala 44:19]
    io.chi_out[1][3] <= round.io.R_chi_out[1][3] @[Sha3.scala 44:19]
    io.chi_out[1][4] <= round.io.R_chi_out[1][4] @[Sha3.scala 44:19]
    io.chi_out[2][0] <= round.io.R_chi_out[2][0] @[Sha3.scala 44:19]
    io.chi_out[2][1] <= round.io.R_chi_out[2][1] @[Sha3.scala 44:19]
    io.chi_out[2][2] <= round.io.R_chi_out[2][2] @[Sha3.scala 44:19]
    io.chi_out[2][3] <= round.io.R_chi_out[2][3] @[Sha3.scala 44:19]
    io.chi_out[2][4] <= round.io.R_chi_out[2][4] @[Sha3.scala 44:19]
    io.chi_out[3][0] <= round.io.R_chi_out[3][0] @[Sha3.scala 44:19]
    io.chi_out[3][1] <= round.io.R_chi_out[3][1] @[Sha3.scala 44:19]
    io.chi_out[3][2] <= round.io.R_chi_out[3][2] @[Sha3.scala 44:19]
    io.chi_out[3][3] <= round.io.R_chi_out[3][3] @[Sha3.scala 44:19]
    io.chi_out[3][4] <= round.io.R_chi_out[3][4] @[Sha3.scala 44:19]
    io.chi_out[4][0] <= round.io.R_chi_out[4][0] @[Sha3.scala 44:19]
    io.chi_out[4][1] <= round.io.R_chi_out[4][1] @[Sha3.scala 44:19]
    io.chi_out[4][2] <= round.io.R_chi_out[4][2] @[Sha3.scala 44:19]
    io.chi_out[4][3] <= round.io.R_chi_out[4][3] @[Sha3.scala 44:19]
    io.chi_out[4][4] <= round.io.R_chi_out[4][4] @[Sha3.scala 44:19]
    io.iota_out <= round.io.R_iota_out @[Sha3.scala 45:19]
    io.round_in[0][0] <= round.io.round_in[0][0] @[Sha3.scala 46:19]
    io.round_in[0][1] <= round.io.round_in[0][1] @[Sha3.scala 46:19]
    io.round_in[0][2] <= round.io.round_in[0][2] @[Sha3.scala 46:19]
    io.round_in[0][3] <= round.io.round_in[0][3] @[Sha3.scala 46:19]
    io.round_in[0][4] <= round.io.round_in[0][4] @[Sha3.scala 46:19]
    io.round_in[1][0] <= round.io.round_in[1][0] @[Sha3.scala 46:19]
    io.round_in[1][1] <= round.io.round_in[1][1] @[Sha3.scala 46:19]
    io.round_in[1][2] <= round.io.round_in[1][2] @[Sha3.scala 46:19]
    io.round_in[1][3] <= round.io.round_in[1][3] @[Sha3.scala 46:19]
    io.round_in[1][4] <= round.io.round_in[1][4] @[Sha3.scala 46:19]
    io.round_in[2][0] <= round.io.round_in[2][0] @[Sha3.scala 46:19]
    io.round_in[2][1] <= round.io.round_in[2][1] @[Sha3.scala 46:19]
    io.round_in[2][2] <= round.io.round_in[2][2] @[Sha3.scala 46:19]
    io.round_in[2][3] <= round.io.round_in[2][3] @[Sha3.scala 46:19]
    io.round_in[2][4] <= round.io.round_in[2][4] @[Sha3.scala 46:19]
    io.round_in[3][0] <= round.io.round_in[3][0] @[Sha3.scala 46:19]
    io.round_in[3][1] <= round.io.round_in[3][1] @[Sha3.scala 46:19]
    io.round_in[3][2] <= round.io.round_in[3][2] @[Sha3.scala 46:19]
    io.round_in[3][3] <= round.io.round_in[3][3] @[Sha3.scala 46:19]
    io.round_in[3][4] <= round.io.round_in[3][4] @[Sha3.scala 46:19]
    io.round_in[4][0] <= round.io.round_in[4][0] @[Sha3.scala 46:19]
    io.round_in[4][1] <= round.io.round_in[4][1] @[Sha3.scala 46:19]
    io.round_in[4][2] <= round.io.round_in[4][2] @[Sha3.scala 46:19]
    io.round_in[4][3] <= round.io.round_in[4][3] @[Sha3.scala 46:19]
    io.round_in[4][4] <= round.io.round_in[4][4] @[Sha3.scala 46:19]
    io.register_out[0][0] <= stateReg[0][0] @[Sha3.scala 47:19]
    io.register_out[0][1] <= stateReg[0][1] @[Sha3.scala 47:19]
    io.register_out[0][2] <= stateReg[0][2] @[Sha3.scala 47:19]
    io.register_out[0][3] <= stateReg[0][3] @[Sha3.scala 47:19]
    io.register_out[0][4] <= stateReg[0][4] @[Sha3.scala 47:19]
    io.register_out[1][0] <= stateReg[1][0] @[Sha3.scala 47:19]
    io.register_out[1][1] <= stateReg[1][1] @[Sha3.scala 47:19]
    io.register_out[1][2] <= stateReg[1][2] @[Sha3.scala 47:19]
    io.register_out[1][3] <= stateReg[1][3] @[Sha3.scala 47:19]
    io.register_out[1][4] <= stateReg[1][4] @[Sha3.scala 47:19]
    io.register_out[2][0] <= stateReg[2][0] @[Sha3.scala 47:19]
    io.register_out[2][1] <= stateReg[2][1] @[Sha3.scala 47:19]
    io.register_out[2][2] <= stateReg[2][2] @[Sha3.scala 47:19]
    io.register_out[2][3] <= stateReg[2][3] @[Sha3.scala 47:19]
    io.register_out[2][4] <= stateReg[2][4] @[Sha3.scala 47:19]
    io.register_out[3][0] <= stateReg[3][0] @[Sha3.scala 47:19]
    io.register_out[3][1] <= stateReg[3][1] @[Sha3.scala 47:19]
    io.register_out[3][2] <= stateReg[3][2] @[Sha3.scala 47:19]
    io.register_out[3][3] <= stateReg[3][3] @[Sha3.scala 47:19]
    io.register_out[3][4] <= stateReg[3][4] @[Sha3.scala 47:19]
    io.register_out[4][0] <= stateReg[4][0] @[Sha3.scala 47:19]
    io.register_out[4][1] <= stateReg[4][1] @[Sha3.scala 47:19]
    io.register_out[4][2] <= stateReg[4][2] @[Sha3.scala 47:19]
    io.register_out[4][3] <= stateReg[4][3] @[Sha3.scala 47:19]
    io.register_out[4][4] <= stateReg[4][4] @[Sha3.scala 47:19]
    io.round_out[0][0] <= round.io.round_out[0][0] @[Sha3.scala 54:26]
    io.round_out[0][1] <= round.io.round_out[0][1] @[Sha3.scala 54:26]
    io.round_out[0][2] <= round.io.round_out[0][2] @[Sha3.scala 54:26]
    io.round_out[0][3] <= round.io.round_out[0][3] @[Sha3.scala 54:26]
    io.round_out[0][4] <= round.io.round_out[0][4] @[Sha3.scala 54:26]
    io.round_out[1][0] <= round.io.round_out[1][0] @[Sha3.scala 54:26]
    io.round_out[1][1] <= round.io.round_out[1][1] @[Sha3.scala 54:26]
    io.round_out[1][2] <= round.io.round_out[1][2] @[Sha3.scala 54:26]
    io.round_out[1][3] <= round.io.round_out[1][3] @[Sha3.scala 54:26]
    io.round_out[1][4] <= round.io.round_out[1][4] @[Sha3.scala 54:26]
    io.round_out[2][0] <= round.io.round_out[2][0] @[Sha3.scala 54:26]
    io.round_out[2][1] <= round.io.round_out[2][1] @[Sha3.scala 54:26]
    io.round_out[2][2] <= round.io.round_out[2][2] @[Sha3.scala 54:26]
    io.round_out[2][3] <= round.io.round_out[2][3] @[Sha3.scala 54:26]
    io.round_out[2][4] <= round.io.round_out[2][4] @[Sha3.scala 54:26]
    io.round_out[3][0] <= round.io.round_out[3][0] @[Sha3.scala 54:26]
    io.round_out[3][1] <= round.io.round_out[3][1] @[Sha3.scala 54:26]
    io.round_out[3][2] <= round.io.round_out[3][2] @[Sha3.scala 54:26]
    io.round_out[3][3] <= round.io.round_out[3][3] @[Sha3.scala 54:26]
    io.round_out[3][4] <= round.io.round_out[3][4] @[Sha3.scala 54:26]
    io.round_out[4][0] <= round.io.round_out[4][0] @[Sha3.scala 54:26]
    io.round_out[4][1] <= round.io.round_out[4][1] @[Sha3.scala 54:26]
    io.round_out[4][2] <= round.io.round_out[4][2] @[Sha3.scala 54:26]
    io.round_out[4][3] <= round.io.round_out[4][3] @[Sha3.scala 54:26]
    io.round_out[4][4] <= round.io.round_out[4][4] @[Sha3.scala 54:26]
    node _T = eq(UInt<2>("h00"), next_state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      xor_select <= UInt<1>("h01") @[Sha3.scala 61:18]
      iota_round <= UInt<1>("h00") @[Sha3.scala 62:18]
      when io.buffer_ready : @[Sha3.scala 63:28]
        next_state <= UInt<2>("h01") @[Sha3.scala 64:21]
        skip @[Sha3.scala 63:28]
      else : @[Sha3.scala 67:18]
        next_state <= UInt<2>("h00") @[Sha3.scala 68:20]
        skip @[Sha3.scala 67:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<2>("h01"), next_state) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        xor_select <= UInt<1>("h00") @[Sha3.scala 73:18]
        stateReg[0][0] <= round.io.round_out[0][0] @[Sha3.scala 74:18]
        stateReg[0][1] <= round.io.round_out[0][1] @[Sha3.scala 74:18]
        stateReg[0][2] <= round.io.round_out[0][2] @[Sha3.scala 74:18]
        stateReg[0][3] <= round.io.round_out[0][3] @[Sha3.scala 74:18]
        stateReg[0][4] <= round.io.round_out[0][4] @[Sha3.scala 74:18]
        stateReg[1][0] <= round.io.round_out[1][0] @[Sha3.scala 74:18]
        stateReg[1][1] <= round.io.round_out[1][1] @[Sha3.scala 74:18]
        stateReg[1][2] <= round.io.round_out[1][2] @[Sha3.scala 74:18]
        stateReg[1][3] <= round.io.round_out[1][3] @[Sha3.scala 74:18]
        stateReg[1][4] <= round.io.round_out[1][4] @[Sha3.scala 74:18]
        stateReg[2][0] <= round.io.round_out[2][0] @[Sha3.scala 74:18]
        stateReg[2][1] <= round.io.round_out[2][1] @[Sha3.scala 74:18]
        stateReg[2][2] <= round.io.round_out[2][2] @[Sha3.scala 74:18]
        stateReg[2][3] <= round.io.round_out[2][3] @[Sha3.scala 74:18]
        stateReg[2][4] <= round.io.round_out[2][4] @[Sha3.scala 74:18]
        stateReg[3][0] <= round.io.round_out[3][0] @[Sha3.scala 74:18]
        stateReg[3][1] <= round.io.round_out[3][1] @[Sha3.scala 74:18]
        stateReg[3][2] <= round.io.round_out[3][2] @[Sha3.scala 74:18]
        stateReg[3][3] <= round.io.round_out[3][3] @[Sha3.scala 74:18]
        stateReg[3][4] <= round.io.round_out[3][4] @[Sha3.scala 74:18]
        stateReg[4][0] <= round.io.round_out[4][0] @[Sha3.scala 74:18]
        stateReg[4][1] <= round.io.round_out[4][1] @[Sha3.scala 74:18]
        stateReg[4][2] <= round.io.round_out[4][2] @[Sha3.scala 74:18]
        stateReg[4][3] <= round.io.round_out[4][3] @[Sha3.scala 74:18]
        stateReg[4][4] <= round.io.round_out[4][4] @[Sha3.scala 74:18]
        node _T_2 = lt(iota_round, UInt<5>("h017")) @[Sha3.scala 75:23]
        when _T_2 : @[Sha3.scala 75:30]
          next_state <= UInt<2>("h01") @[Sha3.scala 76:20]
          node _T_3 = add(iota_round, UInt<1>("h01")) @[Sha3.scala 77:34]
          node _T_4 = tail(_T_3, 1) @[Sha3.scala 77:34]
          iota_round <= _T_4 @[Sha3.scala 77:20]
          skip @[Sha3.scala 75:30]
        else : @[Sha3.scala 78:18]
          iota_round <= UInt<1>("h00") @[Sha3.scala 79:20]
          next_state <= UInt<2>("h00") @[Sha3.scala 80:20]
          skip @[Sha3.scala 78:18]
        skip @[Conditional.scala 39:67]
    round.io.R_iota_round <= iota_round @[Sha3.scala 93:25]
    when xor_select : @[Sha3.scala 100:19]
      node _T_5 = xor(io.r_in[0], stateReg[0][0]) @[Sha3.scala 101:42]
      round.io.round_in[0][0] <= _T_5 @[Sha3.scala 101:29]
      node _T_6 = xor(io.r_in[1], stateReg[1][0]) @[Sha3.scala 102:42]
      round.io.round_in[1][0] <= _T_6 @[Sha3.scala 102:29]
      node _T_7 = xor(io.r_in[2], stateReg[2][0]) @[Sha3.scala 103:42]
      round.io.round_in[2][0] <= _T_7 @[Sha3.scala 103:29]
      node _T_8 = xor(io.r_in[3], stateReg[3][0]) @[Sha3.scala 104:42]
      round.io.round_in[3][0] <= _T_8 @[Sha3.scala 104:29]
      node _T_9 = xor(io.r_in[4], stateReg[4][0]) @[Sha3.scala 105:42]
      round.io.round_in[4][0] <= _T_9 @[Sha3.scala 105:29]
      node _T_10 = xor(io.r_in[5], stateReg[0][1]) @[Sha3.scala 106:42]
      round.io.round_in[0][1] <= _T_10 @[Sha3.scala 106:29]
      node _T_11 = xor(io.r_in[6], stateReg[1][1]) @[Sha3.scala 107:42]
      round.io.round_in[1][1] <= _T_11 @[Sha3.scala 107:29]
      node _T_12 = xor(io.r_in[7], stateReg[2][1]) @[Sha3.scala 108:42]
      round.io.round_in[2][1] <= _T_12 @[Sha3.scala 108:29]
      node _T_13 = xor(io.r_in[8], stateReg[3][1]) @[Sha3.scala 109:42]
      round.io.round_in[3][1] <= _T_13 @[Sha3.scala 109:29]
      skip @[Sha3.scala 100:19]
    else : @[Sha3.scala 110:14]
      round.io.round_in[0][0] <= stateReg[0][0] @[Sha3.scala 111:29]
      round.io.round_in[1][0] <= stateReg[1][0] @[Sha3.scala 112:29]
      round.io.round_in[2][0] <= stateReg[2][0] @[Sha3.scala 113:29]
      round.io.round_in[3][0] <= stateReg[3][0] @[Sha3.scala 114:29]
      round.io.round_in[4][0] <= stateReg[4][0] @[Sha3.scala 115:29]
      round.io.round_in[0][1] <= stateReg[0][1] @[Sha3.scala 116:29]
      round.io.round_in[1][1] <= stateReg[1][1] @[Sha3.scala 117:29]
      round.io.round_in[2][1] <= stateReg[2][1] @[Sha3.scala 118:29]
      round.io.round_in[3][1] <= stateReg[3][1] @[Sha3.scala 119:29]
      skip @[Sha3.scala 110:14]
    round.io.round_in[4][1] <= stateReg[4][1] @[Sha3.scala 123:27]
    round.io.round_in[0][2] <= stateReg[0][2] @[Sha3.scala 124:27]
    round.io.round_in[1][2] <= stateReg[1][2] @[Sha3.scala 125:27]
    round.io.round_in[2][2] <= stateReg[2][2] @[Sha3.scala 126:27]
    round.io.round_in[3][2] <= stateReg[3][2] @[Sha3.scala 127:27]
    round.io.round_in[4][2] <= stateReg[4][2] @[Sha3.scala 128:27]
    round.io.round_in[0][3] <= stateReg[0][3] @[Sha3.scala 129:27]
    round.io.round_in[1][3] <= stateReg[1][3] @[Sha3.scala 130:27]
    round.io.round_in[2][3] <= stateReg[2][3] @[Sha3.scala 131:27]
    round.io.round_in[3][3] <= stateReg[3][3] @[Sha3.scala 132:27]
    round.io.round_in[4][3] <= stateReg[4][3] @[Sha3.scala 133:27]
    round.io.round_in[0][4] <= stateReg[0][4] @[Sha3.scala 134:27]
    round.io.round_in[1][4] <= stateReg[1][4] @[Sha3.scala 135:27]
    round.io.round_in[2][4] <= stateReg[2][4] @[Sha3.scala 136:27]
    round.io.round_in[3][4] <= stateReg[3][4] @[Sha3.scala 137:27]
    round.io.round_in[4][4] <= stateReg[4][4] @[Sha3.scala 138:27]
    
