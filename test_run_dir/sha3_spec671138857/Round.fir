;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Round : 
  module Round : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip round_in : UInt<64>[5][5], round_out : UInt<64>[5][5], theta_c : UInt<64>[5], theta_d : UInt<64>[5]}
    
    wire r : UInt<19>[5][5] @[Round.scala 12:17]
    wire st : UInt<64>[5][5] @[Round.scala 13:17]
    r[0][0] <= UInt<1>("h00") @[Round.scala 15:11]
    r[0][1] <= UInt<6>("h024") @[Round.scala 16:11]
    r[0][2] <= UInt<2>("h03") @[Round.scala 17:11]
    r[0][3] <= UInt<6>("h029") @[Round.scala 18:11]
    r[0][4] <= UInt<5>("h012") @[Round.scala 19:11]
    r[1][0] <= UInt<1>("h01") @[Round.scala 20:11]
    r[1][1] <= UInt<6>("h02c") @[Round.scala 21:11]
    r[1][2] <= UInt<4>("h0a") @[Round.scala 22:11]
    r[1][3] <= UInt<6>("h02d") @[Round.scala 23:11]
    r[1][4] <= UInt<2>("h02") @[Round.scala 24:11]
    r[2][0] <= UInt<6>("h03e") @[Round.scala 25:11]
    r[2][1] <= UInt<3>("h06") @[Round.scala 26:11]
    r[2][2] <= UInt<6>("h02b") @[Round.scala 27:11]
    r[2][3] <= UInt<4>("h0f") @[Round.scala 28:11]
    r[2][4] <= UInt<6>("h03d") @[Round.scala 29:11]
    r[3][0] <= UInt<5>("h01c") @[Round.scala 30:11]
    r[3][1] <= UInt<6>("h037") @[Round.scala 31:11]
    r[3][2] <= UInt<5>("h019") @[Round.scala 32:11]
    r[3][3] <= UInt<5>("h015") @[Round.scala 33:11]
    r[3][4] <= UInt<6>("h038") @[Round.scala 34:11]
    r[4][0] <= UInt<5>("h01b") @[Round.scala 35:11]
    r[4][1] <= UInt<5>("h014") @[Round.scala 36:11]
    r[4][2] <= UInt<6>("h027") @[Round.scala 37:11]
    r[4][3] <= UInt<4>("h08") @[Round.scala 38:11]
    r[4][4] <= UInt<4>("h0e") @[Round.scala 39:11]
    wire RC : UInt<64>[24] @[Round.scala 42:17]
    RC[0] <= UInt<1>("h01") @[Round.scala 43:11]
    RC[1] <= UInt<16>("h08082") @[Round.scala 44:11]
    RC[2] <= UInt<64>("h0800000000000808a") @[Round.scala 45:11]
    RC[3] <= UInt<64>("h08000000080008000") @[Round.scala 46:11]
    RC[4] <= UInt<16>("h0808b") @[Round.scala 47:11]
    RC[5] <= UInt<32>("h080000001") @[Round.scala 48:11]
    RC[6] <= UInt<64>("h08000000080008081") @[Round.scala 49:11]
    RC[7] <= UInt<64>("h08000000000008009") @[Round.scala 50:11]
    RC[8] <= UInt<8>("h08a") @[Round.scala 51:11]
    RC[9] <= UInt<8>("h088") @[Round.scala 52:11]
    RC[10] <= UInt<32>("h080008009") @[Round.scala 53:11]
    RC[11] <= UInt<32>("h08000000a") @[Round.scala 54:11]
    RC[12] <= UInt<32>("h08000808b") @[Round.scala 55:11]
    RC[13] <= UInt<64>("h0800000000000008b") @[Round.scala 56:11]
    RC[14] <= UInt<64>("h08000000000008089") @[Round.scala 57:11]
    RC[15] <= UInt<64>("h08000000000008003") @[Round.scala 58:11]
    RC[16] <= UInt<64>("h08000000000008002") @[Round.scala 59:11]
    RC[17] <= UInt<64>("h08000000000000080") @[Round.scala 60:11]
    RC[18] <= UInt<16>("h0800a") @[Round.scala 61:11]
    RC[19] <= UInt<64>("h0800000008000000a") @[Round.scala 62:11]
    RC[20] <= UInt<64>("h08000000080008081") @[Round.scala 63:11]
    RC[21] <= UInt<64>("h08000000000008080") @[Round.scala 64:11]
    RC[22] <= UInt<32>("h080000001") @[Round.scala 65:11]
    RC[23] <= UInt<64>("h08000000080008008") @[Round.scala 66:11]
    io.round_out[0][0] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[0][1] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[0][2] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[0][3] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[0][4] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[1][0] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[1][1] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[1][2] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[1][3] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[1][4] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[2][0] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[2][1] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[2][2] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[2][3] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[2][4] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[3][0] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[3][1] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[3][2] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[3][3] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[3][4] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[4][0] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[4][1] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[4][2] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[4][3] <= UInt<1>("h00") @[Round.scala 70:30]
    io.round_out[4][4] <= UInt<1>("h00") @[Round.scala 70:30]
    wire c : UInt<64>[5] @[Round.scala 75:15]
    wire d : UInt<64>[5] @[Round.scala 76:15]
    node _T = xor(io.round_in[0][0], io.round_in[0][1]) @[Round.scala 79:30]
    node _T_1 = xor(_T, io.round_in[0][2]) @[Round.scala 79:48]
    node _T_2 = xor(_T_1, io.round_in[0][3]) @[Round.scala 79:66]
    node _T_3 = xor(_T_2, io.round_in[0][4]) @[Round.scala 79:84]
    c[0] <= _T_3 @[Round.scala 79:10]
    node _T_4 = xor(io.round_in[1][0], io.round_in[1][1]) @[Round.scala 79:30]
    node _T_5 = xor(_T_4, io.round_in[1][2]) @[Round.scala 79:48]
    node _T_6 = xor(_T_5, io.round_in[1][3]) @[Round.scala 79:66]
    node _T_7 = xor(_T_6, io.round_in[1][4]) @[Round.scala 79:84]
    c[1] <= _T_7 @[Round.scala 79:10]
    node _T_8 = xor(io.round_in[2][0], io.round_in[2][1]) @[Round.scala 79:30]
    node _T_9 = xor(_T_8, io.round_in[2][2]) @[Round.scala 79:48]
    node _T_10 = xor(_T_9, io.round_in[2][3]) @[Round.scala 79:66]
    node _T_11 = xor(_T_10, io.round_in[2][4]) @[Round.scala 79:84]
    c[2] <= _T_11 @[Round.scala 79:10]
    node _T_12 = xor(io.round_in[3][0], io.round_in[3][1]) @[Round.scala 79:30]
    node _T_13 = xor(_T_12, io.round_in[3][2]) @[Round.scala 79:48]
    node _T_14 = xor(_T_13, io.round_in[3][3]) @[Round.scala 79:66]
    node _T_15 = xor(_T_14, io.round_in[3][4]) @[Round.scala 79:84]
    c[3] <= _T_15 @[Round.scala 79:10]
    node _T_16 = xor(io.round_in[4][0], io.round_in[4][1]) @[Round.scala 79:30]
    node _T_17 = xor(_T_16, io.round_in[4][2]) @[Round.scala 79:48]
    node _T_18 = xor(_T_17, io.round_in[4][3]) @[Round.scala 79:66]
    node _T_19 = xor(_T_18, io.round_in[4][4]) @[Round.scala 79:84]
    c[4] <= _T_19 @[Round.scala 79:10]
    wire rotation1 : UInt<64>[5] @[Round.scala 83:23]
    wire rotation2 : UInt<64>[5] @[Round.scala 84:23]
    wire rotation_result : UInt<64>[5] @[Round.scala 85:29]
    rotation1[0] <= UInt<1>("h00") @[Round.scala 90:18]
    rotation2[0] <= UInt<1>("h00") @[Round.scala 91:18]
    rotation1[1] <= UInt<1>("h00") @[Round.scala 90:18]
    rotation2[1] <= UInt<1>("h00") @[Round.scala 91:18]
    rotation1[2] <= UInt<1>("h00") @[Round.scala 90:18]
    rotation2[2] <= UInt<1>("h00") @[Round.scala 91:18]
    rotation1[3] <= UInt<1>("h00") @[Round.scala 90:18]
    rotation2[3] <= UInt<1>("h00") @[Round.scala 91:18]
    rotation1[4] <= UInt<1>("h00") @[Round.scala 90:18]
    rotation2[4] <= UInt<1>("h00") @[Round.scala 91:18]
    node _T_20 = shl(c[1], 1) @[Round.scala 97:44]
    rotation1[0] <= _T_20 @[Round.scala 97:25]
    node _T_21 = shr(c[1], 63) @[Round.scala 98:44]
    rotation2[0] <= _T_21 @[Round.scala 98:25]
    node _T_22 = or(rotation1[0], rotation2[0]) @[Round.scala 99:41]
    rotation_result[0] <= _T_22 @[Round.scala 99:25]
    node _T_23 = xor(c[4], rotation_result[0]) @[Round.scala 100:30]
    d[0] <= _T_23 @[Round.scala 100:11]
    node _T_24 = shl(c[2], 1) @[Round.scala 97:44]
    rotation1[1] <= _T_24 @[Round.scala 97:25]
    node _T_25 = shr(c[2], 63) @[Round.scala 98:44]
    rotation2[1] <= _T_25 @[Round.scala 98:25]
    node _T_26 = or(rotation1[1], rotation2[1]) @[Round.scala 99:41]
    rotation_result[1] <= _T_26 @[Round.scala 99:25]
    node _T_27 = xor(c[0], rotation_result[1]) @[Round.scala 100:30]
    d[1] <= _T_27 @[Round.scala 100:11]
    node _T_28 = shl(c[3], 1) @[Round.scala 97:44]
    rotation1[2] <= _T_28 @[Round.scala 97:25]
    node _T_29 = shr(c[3], 63) @[Round.scala 98:44]
    rotation2[2] <= _T_29 @[Round.scala 98:25]
    node _T_30 = or(rotation1[2], rotation2[2]) @[Round.scala 99:41]
    rotation_result[2] <= _T_30 @[Round.scala 99:25]
    node _T_31 = xor(c[1], rotation_result[2]) @[Round.scala 100:30]
    d[2] <= _T_31 @[Round.scala 100:11]
    node _T_32 = shl(c[4], 1) @[Round.scala 97:44]
    rotation1[3] <= _T_32 @[Round.scala 97:25]
    node _T_33 = shr(c[4], 63) @[Round.scala 98:44]
    rotation2[3] <= _T_33 @[Round.scala 98:25]
    node _T_34 = or(rotation1[3], rotation2[3]) @[Round.scala 99:41]
    rotation_result[3] <= _T_34 @[Round.scala 99:25]
    node _T_35 = xor(c[2], rotation_result[3]) @[Round.scala 100:30]
    d[3] <= _T_35 @[Round.scala 100:11]
    node _T_36 = shl(c[0], 1) @[Round.scala 97:44]
    rotation1[4] <= _T_36 @[Round.scala 97:25]
    node _T_37 = shr(c[0], 63) @[Round.scala 98:44]
    rotation2[4] <= _T_37 @[Round.scala 98:25]
    node _T_38 = or(rotation1[4], rotation2[4]) @[Round.scala 99:41]
    rotation_result[4] <= _T_38 @[Round.scala 99:25]
    node _T_39 = xor(c[3], rotation_result[4]) @[Round.scala 100:30]
    d[4] <= _T_39 @[Round.scala 100:11]
    node _T_40 = xor(io.round_in[0][0], d[0]) @[Round.scala 106:38]
    st[0][0] <= _T_40 @[Round.scala 106:18]
    node _T_41 = xor(io.round_in[0][1], d[0]) @[Round.scala 106:38]
    st[0][1] <= _T_41 @[Round.scala 106:18]
    node _T_42 = xor(io.round_in[0][2], d[0]) @[Round.scala 106:38]
    st[0][2] <= _T_42 @[Round.scala 106:18]
    node _T_43 = xor(io.round_in[0][3], d[0]) @[Round.scala 106:38]
    st[0][3] <= _T_43 @[Round.scala 106:18]
    node _T_44 = xor(io.round_in[0][4], d[0]) @[Round.scala 106:38]
    st[0][4] <= _T_44 @[Round.scala 106:18]
    node _T_45 = xor(io.round_in[1][0], d[1]) @[Round.scala 106:38]
    st[1][0] <= _T_45 @[Round.scala 106:18]
    node _T_46 = xor(io.round_in[1][1], d[1]) @[Round.scala 106:38]
    st[1][1] <= _T_46 @[Round.scala 106:18]
    node _T_47 = xor(io.round_in[1][2], d[1]) @[Round.scala 106:38]
    st[1][2] <= _T_47 @[Round.scala 106:18]
    node _T_48 = xor(io.round_in[1][3], d[1]) @[Round.scala 106:38]
    st[1][3] <= _T_48 @[Round.scala 106:18]
    node _T_49 = xor(io.round_in[1][4], d[1]) @[Round.scala 106:38]
    st[1][4] <= _T_49 @[Round.scala 106:18]
    node _T_50 = xor(io.round_in[2][0], d[2]) @[Round.scala 106:38]
    st[2][0] <= _T_50 @[Round.scala 106:18]
    node _T_51 = xor(io.round_in[2][1], d[2]) @[Round.scala 106:38]
    st[2][1] <= _T_51 @[Round.scala 106:18]
    node _T_52 = xor(io.round_in[2][2], d[2]) @[Round.scala 106:38]
    st[2][2] <= _T_52 @[Round.scala 106:18]
    node _T_53 = xor(io.round_in[2][3], d[2]) @[Round.scala 106:38]
    st[2][3] <= _T_53 @[Round.scala 106:18]
    node _T_54 = xor(io.round_in[2][4], d[2]) @[Round.scala 106:38]
    st[2][4] <= _T_54 @[Round.scala 106:18]
    node _T_55 = xor(io.round_in[3][0], d[3]) @[Round.scala 106:38]
    st[3][0] <= _T_55 @[Round.scala 106:18]
    node _T_56 = xor(io.round_in[3][1], d[3]) @[Round.scala 106:38]
    st[3][1] <= _T_56 @[Round.scala 106:18]
    node _T_57 = xor(io.round_in[3][2], d[3]) @[Round.scala 106:38]
    st[3][2] <= _T_57 @[Round.scala 106:18]
    node _T_58 = xor(io.round_in[3][3], d[3]) @[Round.scala 106:38]
    st[3][3] <= _T_58 @[Round.scala 106:18]
    node _T_59 = xor(io.round_in[3][4], d[3]) @[Round.scala 106:38]
    st[3][4] <= _T_59 @[Round.scala 106:18]
    node _T_60 = xor(io.round_in[4][0], d[4]) @[Round.scala 106:38]
    st[4][0] <= _T_60 @[Round.scala 106:18]
    node _T_61 = xor(io.round_in[4][1], d[4]) @[Round.scala 106:38]
    st[4][1] <= _T_61 @[Round.scala 106:18]
    node _T_62 = xor(io.round_in[4][2], d[4]) @[Round.scala 106:38]
    st[4][2] <= _T_62 @[Round.scala 106:18]
    node _T_63 = xor(io.round_in[4][3], d[4]) @[Round.scala 106:38]
    st[4][3] <= _T_63 @[Round.scala 106:18]
    node _T_64 = xor(io.round_in[4][4], d[4]) @[Round.scala 106:38]
    st[4][4] <= _T_64 @[Round.scala 106:18]
    io.theta_c[0] <= c[0] @[Round.scala 110:14]
    io.theta_c[1] <= c[1] @[Round.scala 110:14]
    io.theta_c[2] <= c[2] @[Round.scala 110:14]
    io.theta_c[3] <= c[3] @[Round.scala 110:14]
    io.theta_c[4] <= c[4] @[Round.scala 110:14]
    io.theta_d[0] <= d[0] @[Round.scala 111:14]
    io.theta_d[1] <= d[1] @[Round.scala 111:14]
    io.theta_d[2] <= d[2] @[Round.scala 111:14]
    io.theta_d[3] <= d[3] @[Round.scala 111:14]
    io.theta_d[4] <= d[4] @[Round.scala 111:14]
    wire b : UInt<64>[5][5] @[Round.scala 116:15]
    wire chi_wire : UInt<64> @[Round.scala 125:22]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_65 = xor(b[0][0], chi_wire) @[Round.scala 132:27]
    st[0][0] <= _T_65 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_66 = xor(b[0][1], chi_wire) @[Round.scala 132:27]
    st[0][1] <= _T_66 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_67 = xor(b[0][2], chi_wire) @[Round.scala 132:27]
    st[0][2] <= _T_67 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_68 = xor(b[0][3], chi_wire) @[Round.scala 132:27]
    st[0][3] <= _T_68 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_69 = xor(b[0][4], chi_wire) @[Round.scala 132:27]
    st[0][4] <= _T_69 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_70 = xor(b[1][0], chi_wire) @[Round.scala 132:27]
    st[1][0] <= _T_70 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_71 = xor(b[1][1], chi_wire) @[Round.scala 132:27]
    st[1][1] <= _T_71 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_72 = xor(b[1][2], chi_wire) @[Round.scala 132:27]
    st[1][2] <= _T_72 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_73 = xor(b[1][3], chi_wire) @[Round.scala 132:27]
    st[1][3] <= _T_73 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_74 = xor(b[1][4], chi_wire) @[Round.scala 132:27]
    st[1][4] <= _T_74 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_75 = xor(b[2][0], chi_wire) @[Round.scala 132:27]
    st[2][0] <= _T_75 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_76 = xor(b[2][1], chi_wire) @[Round.scala 132:27]
    st[2][1] <= _T_76 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_77 = xor(b[2][2], chi_wire) @[Round.scala 132:27]
    st[2][2] <= _T_77 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_78 = xor(b[2][3], chi_wire) @[Round.scala 132:27]
    st[2][3] <= _T_78 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_79 = xor(b[2][4], chi_wire) @[Round.scala 132:27]
    st[2][4] <= _T_79 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_80 = xor(b[3][0], chi_wire) @[Round.scala 132:27]
    st[3][0] <= _T_80 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_81 = xor(b[3][1], chi_wire) @[Round.scala 132:27]
    st[3][1] <= _T_81 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_82 = xor(b[3][2], chi_wire) @[Round.scala 132:27]
    st[3][2] <= _T_82 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_83 = xor(b[3][3], chi_wire) @[Round.scala 132:27]
    st[3][3] <= _T_83 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_84 = xor(b[3][4], chi_wire) @[Round.scala 132:27]
    st[3][4] <= _T_84 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_85 = xor(b[4][0], chi_wire) @[Round.scala 132:27]
    st[4][0] <= _T_85 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_86 = xor(b[4][1], chi_wire) @[Round.scala 132:27]
    st[4][1] <= _T_86 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_87 = xor(b[4][2], chi_wire) @[Round.scala 132:27]
    st[4][2] <= _T_87 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_88 = xor(b[4][3], chi_wire) @[Round.scala 132:27]
    st[4][3] <= _T_88 @[Round.scala 132:16]
    chi_wire <= UInt<1>("h00") @[Round.scala 131:16]
    node _T_89 = xor(b[4][4], chi_wire) @[Round.scala 132:27]
    st[4][4] <= _T_89 @[Round.scala 132:16]
    
