;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit THETA : 
  module THETA : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip theta_in : UInt<64>[5][5], theta_out : UInt<64>[5][5]}
    
    io.theta_out[0][0] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[0][1] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[0][2] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[0][3] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[0][4] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[1][0] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[1][1] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[1][2] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[1][3] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[1][4] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[2][0] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[2][1] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[2][2] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[2][3] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[2][4] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[3][0] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[3][1] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[3][2] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[3][3] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[3][4] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[4][0] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[4][1] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[4][2] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[4][3] <= UInt<1>("h00") @[THETA.scala 13:30]
    io.theta_out[4][4] <= UInt<1>("h00") @[THETA.scala 13:30]
    wire c : UInt<64>[5] @[THETA.scala 16:15]
    wire d : UInt<64>[5] @[THETA.scala 17:15]
    node _T = xor(io.theta_in[0][0], io.theta_in[0][1]) @[THETA.scala 20:30]
    node _T_1 = xor(_T, io.theta_in[0][2]) @[THETA.scala 20:48]
    node _T_2 = xor(_T_1, io.theta_in[0][3]) @[THETA.scala 20:66]
    node _T_3 = xor(_T_2, io.theta_in[0][4]) @[THETA.scala 20:84]
    c[0] <= _T_3 @[THETA.scala 20:10]
    node _T_4 = xor(io.theta_in[1][0], io.theta_in[1][1]) @[THETA.scala 20:30]
    node _T_5 = xor(_T_4, io.theta_in[1][2]) @[THETA.scala 20:48]
    node _T_6 = xor(_T_5, io.theta_in[1][3]) @[THETA.scala 20:66]
    node _T_7 = xor(_T_6, io.theta_in[1][4]) @[THETA.scala 20:84]
    c[1] <= _T_7 @[THETA.scala 20:10]
    node _T_8 = xor(io.theta_in[2][0], io.theta_in[2][1]) @[THETA.scala 20:30]
    node _T_9 = xor(_T_8, io.theta_in[2][2]) @[THETA.scala 20:48]
    node _T_10 = xor(_T_9, io.theta_in[2][3]) @[THETA.scala 20:66]
    node _T_11 = xor(_T_10, io.theta_in[2][4]) @[THETA.scala 20:84]
    c[2] <= _T_11 @[THETA.scala 20:10]
    node _T_12 = xor(io.theta_in[3][0], io.theta_in[3][1]) @[THETA.scala 20:30]
    node _T_13 = xor(_T_12, io.theta_in[3][2]) @[THETA.scala 20:48]
    node _T_14 = xor(_T_13, io.theta_in[3][3]) @[THETA.scala 20:66]
    node _T_15 = xor(_T_14, io.theta_in[3][4]) @[THETA.scala 20:84]
    c[3] <= _T_15 @[THETA.scala 20:10]
    node _T_16 = xor(io.theta_in[4][0], io.theta_in[4][1]) @[THETA.scala 20:30]
    node _T_17 = xor(_T_16, io.theta_in[4][2]) @[THETA.scala 20:48]
    node _T_18 = xor(_T_17, io.theta_in[4][3]) @[THETA.scala 20:66]
    node _T_19 = xor(_T_18, io.theta_in[4][4]) @[THETA.scala 20:84]
    c[4] <= _T_19 @[THETA.scala 20:10]
    wire rotation : UInt<54>[5] @[THETA.scala 23:22]
    node _T_20 = shl(c[1], 1) @[THETA.scala 25:43]
    node _T_21 = shr(c[1], 63) @[THETA.scala 25:72]
    node _T_22 = or(_T_20, _T_21) @[THETA.scala 25:47]
    rotation[0] <= _T_22 @[THETA.scala 25:17]
    node _T_23 = xor(c[4], rotation[0]) @[THETA.scala 26:36]
    d[0] <= _T_23 @[THETA.scala 26:10]
    node _T_24 = shl(c[2], 1) @[THETA.scala 25:43]
    node _T_25 = shr(c[2], 63) @[THETA.scala 25:72]
    node _T_26 = or(_T_24, _T_25) @[THETA.scala 25:47]
    rotation[1] <= _T_26 @[THETA.scala 25:17]
    node _T_27 = xor(c[0], rotation[1]) @[THETA.scala 26:36]
    d[1] <= _T_27 @[THETA.scala 26:10]
    node _T_28 = shl(c[3], 1) @[THETA.scala 25:43]
    node _T_29 = shr(c[3], 63) @[THETA.scala 25:72]
    node _T_30 = or(_T_28, _T_29) @[THETA.scala 25:47]
    rotation[2] <= _T_30 @[THETA.scala 25:17]
    node _T_31 = xor(c[1], rotation[2]) @[THETA.scala 26:36]
    d[2] <= _T_31 @[THETA.scala 26:10]
    node _T_32 = shl(c[4], 1) @[THETA.scala 25:43]
    node _T_33 = shr(c[4], 63) @[THETA.scala 25:72]
    node _T_34 = or(_T_32, _T_33) @[THETA.scala 25:47]
    rotation[3] <= _T_34 @[THETA.scala 25:17]
    node _T_35 = xor(c[2], rotation[3]) @[THETA.scala 26:36]
    d[3] <= _T_35 @[THETA.scala 26:10]
    node _T_36 = shl(c[0], 1) @[THETA.scala 25:43]
    node _T_37 = shr(c[0], 63) @[THETA.scala 25:72]
    node _T_38 = or(_T_36, _T_37) @[THETA.scala 25:47]
    rotation[4] <= _T_38 @[THETA.scala 25:17]
    node _T_39 = xor(c[3], rotation[4]) @[THETA.scala 26:36]
    d[4] <= _T_39 @[THETA.scala 26:10]
    io.theta_out[0][0] <= d[0] @[THETA.scala 40:24]
    io.theta_out[1][0] <= d[1] @[THETA.scala 40:24]
    io.theta_out[2][0] <= d[2] @[THETA.scala 40:24]
    io.theta_out[3][0] <= d[3] @[THETA.scala 40:24]
    io.theta_out[4][0] <= d[4] @[THETA.scala 40:24]
    io.theta_out[0][1] <= c[0] @[THETA.scala 43:24]
    io.theta_out[1][1] <= c[1] @[THETA.scala 43:24]
    io.theta_out[2][1] <= c[2] @[THETA.scala 43:24]
    io.theta_out[3][1] <= c[3] @[THETA.scala 43:24]
    io.theta_out[4][1] <= c[4] @[THETA.scala 43:24]
    
