;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Round : 
  module Round : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip round_in : UInt<64>[5][5], round_out : UInt<64>[5][5], theta_c : UInt<64>[5], theta_d : UInt<64>[5], rotation_test : UInt<64>[5], rotation_test_test : UInt<64>[5]}
    
    io.round_out[0][0] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[0][1] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[0][2] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[0][3] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[0][4] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[1][0] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[1][1] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[1][2] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[1][3] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[1][4] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[2][0] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[2][1] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[2][2] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[2][3] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[2][4] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[3][0] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[3][1] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[3][2] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[3][3] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[3][4] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[4][0] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[4][1] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[4][2] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[4][3] <= UInt<1>("h00") @[Round.scala 21:30]
    io.round_out[4][4] <= UInt<1>("h00") @[Round.scala 21:30]
    wire c : UInt<64>[5] @[Round.scala 29:15]
    wire d : UInt<64>[5] @[Round.scala 30:15]
    node _T = xor(io.round_in[0][0], io.round_in[0][1]) @[Round.scala 33:30]
    node _T_1 = xor(_T, io.round_in[0][2]) @[Round.scala 33:48]
    node _T_2 = xor(_T_1, io.round_in[0][3]) @[Round.scala 33:66]
    node _T_3 = xor(_T_2, io.round_in[0][4]) @[Round.scala 33:84]
    c[0] <= _T_3 @[Round.scala 33:10]
    node _T_4 = xor(io.round_in[1][0], io.round_in[1][1]) @[Round.scala 33:30]
    node _T_5 = xor(_T_4, io.round_in[1][2]) @[Round.scala 33:48]
    node _T_6 = xor(_T_5, io.round_in[1][3]) @[Round.scala 33:66]
    node _T_7 = xor(_T_6, io.round_in[1][4]) @[Round.scala 33:84]
    c[1] <= _T_7 @[Round.scala 33:10]
    node _T_8 = xor(io.round_in[2][0], io.round_in[2][1]) @[Round.scala 33:30]
    node _T_9 = xor(_T_8, io.round_in[2][2]) @[Round.scala 33:48]
    node _T_10 = xor(_T_9, io.round_in[2][3]) @[Round.scala 33:66]
    node _T_11 = xor(_T_10, io.round_in[2][4]) @[Round.scala 33:84]
    c[2] <= _T_11 @[Round.scala 33:10]
    node _T_12 = xor(io.round_in[3][0], io.round_in[3][1]) @[Round.scala 33:30]
    node _T_13 = xor(_T_12, io.round_in[3][2]) @[Round.scala 33:48]
    node _T_14 = xor(_T_13, io.round_in[3][3]) @[Round.scala 33:66]
    node _T_15 = xor(_T_14, io.round_in[3][4]) @[Round.scala 33:84]
    c[3] <= _T_15 @[Round.scala 33:10]
    node _T_16 = xor(io.round_in[4][0], io.round_in[4][1]) @[Round.scala 33:30]
    node _T_17 = xor(_T_16, io.round_in[4][2]) @[Round.scala 33:48]
    node _T_18 = xor(_T_17, io.round_in[4][3]) @[Round.scala 33:66]
    node _T_19 = xor(_T_18, io.round_in[4][4]) @[Round.scala 33:84]
    c[4] <= _T_19 @[Round.scala 33:10]
    wire rotation1 : UInt<64>[5] @[Round.scala 37:23]
    wire rotation2 : UInt<64>[5] @[Round.scala 38:23]
    node _T_20 = shl(c[1], 1) @[Round.scala 48:37]
    rotation1[0] <= _T_20 @[Round.scala 48:18]
    node _T_21 = shr(c[1], 63) @[Round.scala 49:37]
    rotation2[0] <= _T_21 @[Round.scala 49:18]
    node _T_22 = or(rotation1[0], rotation2[0]) @[Round.scala 52:44]
    node _T_23 = xor(c[4], _T_22) @[Round.scala 52:29]
    d[0] <= _T_23 @[Round.scala 52:10]
    node _T_24 = shl(c[2], 1) @[Round.scala 48:37]
    rotation1[1] <= _T_24 @[Round.scala 48:18]
    node _T_25 = shr(c[2], 63) @[Round.scala 49:37]
    rotation2[1] <= _T_25 @[Round.scala 49:18]
    node _T_26 = or(rotation1[1], rotation2[1]) @[Round.scala 52:44]
    node _T_27 = xor(c[0], _T_26) @[Round.scala 52:29]
    d[1] <= _T_27 @[Round.scala 52:10]
    node _T_28 = shl(c[3], 1) @[Round.scala 48:37]
    rotation1[2] <= _T_28 @[Round.scala 48:18]
    node _T_29 = shr(c[3], 63) @[Round.scala 49:37]
    rotation2[2] <= _T_29 @[Round.scala 49:18]
    node _T_30 = or(rotation1[2], rotation2[2]) @[Round.scala 52:44]
    node _T_31 = xor(c[1], _T_30) @[Round.scala 52:29]
    d[2] <= _T_31 @[Round.scala 52:10]
    node _T_32 = shl(c[4], 1) @[Round.scala 48:37]
    rotation1[3] <= _T_32 @[Round.scala 48:18]
    node _T_33 = shr(c[4], 63) @[Round.scala 49:37]
    rotation2[3] <= _T_33 @[Round.scala 49:18]
    node _T_34 = or(rotation1[3], rotation2[3]) @[Round.scala 52:44]
    node _T_35 = xor(c[2], _T_34) @[Round.scala 52:29]
    d[3] <= _T_35 @[Round.scala 52:10]
    node _T_36 = shl(c[0], 1) @[Round.scala 48:37]
    rotation1[4] <= _T_36 @[Round.scala 48:18]
    node _T_37 = shr(c[0], 63) @[Round.scala 49:37]
    rotation2[4] <= _T_37 @[Round.scala 49:18]
    node _T_38 = or(rotation1[4], rotation2[4]) @[Round.scala 52:44]
    node _T_39 = xor(c[3], _T_38) @[Round.scala 52:29]
    d[4] <= _T_39 @[Round.scala 52:10]
    node _T_40 = xor(io.round_in[0][0], d[0]) @[Round.scala 57:48]
    io.round_out[0][0] <= _T_40 @[Round.scala 57:28]
    node _T_41 = xor(io.round_in[0][1], d[0]) @[Round.scala 57:48]
    io.round_out[0][1] <= _T_41 @[Round.scala 57:28]
    node _T_42 = xor(io.round_in[0][2], d[0]) @[Round.scala 57:48]
    io.round_out[0][2] <= _T_42 @[Round.scala 57:28]
    node _T_43 = xor(io.round_in[0][3], d[0]) @[Round.scala 57:48]
    io.round_out[0][3] <= _T_43 @[Round.scala 57:28]
    node _T_44 = xor(io.round_in[0][4], d[0]) @[Round.scala 57:48]
    io.round_out[0][4] <= _T_44 @[Round.scala 57:28]
    node _T_45 = xor(io.round_in[1][0], d[1]) @[Round.scala 57:48]
    io.round_out[1][0] <= _T_45 @[Round.scala 57:28]
    node _T_46 = xor(io.round_in[1][1], d[1]) @[Round.scala 57:48]
    io.round_out[1][1] <= _T_46 @[Round.scala 57:28]
    node _T_47 = xor(io.round_in[1][2], d[1]) @[Round.scala 57:48]
    io.round_out[1][2] <= _T_47 @[Round.scala 57:28]
    node _T_48 = xor(io.round_in[1][3], d[1]) @[Round.scala 57:48]
    io.round_out[1][3] <= _T_48 @[Round.scala 57:28]
    node _T_49 = xor(io.round_in[1][4], d[1]) @[Round.scala 57:48]
    io.round_out[1][4] <= _T_49 @[Round.scala 57:28]
    node _T_50 = xor(io.round_in[2][0], d[2]) @[Round.scala 57:48]
    io.round_out[2][0] <= _T_50 @[Round.scala 57:28]
    node _T_51 = xor(io.round_in[2][1], d[2]) @[Round.scala 57:48]
    io.round_out[2][1] <= _T_51 @[Round.scala 57:28]
    node _T_52 = xor(io.round_in[2][2], d[2]) @[Round.scala 57:48]
    io.round_out[2][2] <= _T_52 @[Round.scala 57:28]
    node _T_53 = xor(io.round_in[2][3], d[2]) @[Round.scala 57:48]
    io.round_out[2][3] <= _T_53 @[Round.scala 57:28]
    node _T_54 = xor(io.round_in[2][4], d[2]) @[Round.scala 57:48]
    io.round_out[2][4] <= _T_54 @[Round.scala 57:28]
    node _T_55 = xor(io.round_in[3][0], d[3]) @[Round.scala 57:48]
    io.round_out[3][0] <= _T_55 @[Round.scala 57:28]
    node _T_56 = xor(io.round_in[3][1], d[3]) @[Round.scala 57:48]
    io.round_out[3][1] <= _T_56 @[Round.scala 57:28]
    node _T_57 = xor(io.round_in[3][2], d[3]) @[Round.scala 57:48]
    io.round_out[3][2] <= _T_57 @[Round.scala 57:28]
    node _T_58 = xor(io.round_in[3][3], d[3]) @[Round.scala 57:48]
    io.round_out[3][3] <= _T_58 @[Round.scala 57:28]
    node _T_59 = xor(io.round_in[3][4], d[3]) @[Round.scala 57:48]
    io.round_out[3][4] <= _T_59 @[Round.scala 57:28]
    node _T_60 = xor(io.round_in[4][0], d[4]) @[Round.scala 57:48]
    io.round_out[4][0] <= _T_60 @[Round.scala 57:28]
    node _T_61 = xor(io.round_in[4][1], d[4]) @[Round.scala 57:48]
    io.round_out[4][1] <= _T_61 @[Round.scala 57:28]
    node _T_62 = xor(io.round_in[4][2], d[4]) @[Round.scala 57:48]
    io.round_out[4][2] <= _T_62 @[Round.scala 57:28]
    node _T_63 = xor(io.round_in[4][3], d[4]) @[Round.scala 57:48]
    io.round_out[4][3] <= _T_63 @[Round.scala 57:28]
    node _T_64 = xor(io.round_in[4][4], d[4]) @[Round.scala 57:48]
    io.round_out[4][4] <= _T_64 @[Round.scala 57:28]
    io.theta_c[0] <= c[0] @[Round.scala 60:14]
    io.theta_c[1] <= c[1] @[Round.scala 60:14]
    io.theta_c[2] <= c[2] @[Round.scala 60:14]
    io.theta_c[3] <= c[3] @[Round.scala 60:14]
    io.theta_c[4] <= c[4] @[Round.scala 60:14]
    io.theta_d[0] <= d[0] @[Round.scala 61:14]
    io.theta_d[1] <= d[1] @[Round.scala 61:14]
    io.theta_d[2] <= d[2] @[Round.scala 61:14]
    io.theta_d[3] <= d[3] @[Round.scala 61:14]
    io.theta_d[4] <= d[4] @[Round.scala 61:14]
    
