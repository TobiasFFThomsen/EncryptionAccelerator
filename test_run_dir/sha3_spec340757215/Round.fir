;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Round : 
  module Theta : 
    input clock : Clock
    input reset : Reset
    output io : {flip theta_in : UInt<64>[5][5], theta_out : UInt<64>[5][5]}
    
    wire st : UInt<64>[5][5] @[Theta.scala 10:17]
    wire rotation1 : UInt<64>[5] @[Theta.scala 13:23]
    wire rotation2 : UInt<64>[5] @[Theta.scala 14:23]
    wire rotation_result : UInt<64>[5] @[Theta.scala 15:29]
    io.theta_out[0][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[0][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[1][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[2][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[3][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][0] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][1] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][2] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][3] <= UInt<1>("h00") @[Theta.scala 19:30]
    io.theta_out[4][4] <= UInt<1>("h00") @[Theta.scala 19:30]
    rotation1[0] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[0] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[1] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[1] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[2] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[2] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[3] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[3] <= UInt<1>("h00") @[Theta.scala 25:18]
    rotation1[4] <= UInt<1>("h00") @[Theta.scala 24:18]
    rotation2[4] <= UInt<1>("h00") @[Theta.scala 25:18]
    wire c : UInt<64>[5] @[Theta.scala 32:15]
    wire d : UInt<64>[5] @[Theta.scala 33:15]
    node _T = xor(io.theta_in[0][0], io.theta_in[0][1]) @[Theta.scala 36:30]
    node _T_1 = xor(_T, io.theta_in[0][2]) @[Theta.scala 36:48]
    node _T_2 = xor(_T_1, io.theta_in[0][3]) @[Theta.scala 36:66]
    node _T_3 = xor(_T_2, io.theta_in[0][4]) @[Theta.scala 36:84]
    c[0] <= _T_3 @[Theta.scala 36:10]
    node _T_4 = xor(io.theta_in[1][0], io.theta_in[1][1]) @[Theta.scala 36:30]
    node _T_5 = xor(_T_4, io.theta_in[1][2]) @[Theta.scala 36:48]
    node _T_6 = xor(_T_5, io.theta_in[1][3]) @[Theta.scala 36:66]
    node _T_7 = xor(_T_6, io.theta_in[1][4]) @[Theta.scala 36:84]
    c[1] <= _T_7 @[Theta.scala 36:10]
    node _T_8 = xor(io.theta_in[2][0], io.theta_in[2][1]) @[Theta.scala 36:30]
    node _T_9 = xor(_T_8, io.theta_in[2][2]) @[Theta.scala 36:48]
    node _T_10 = xor(_T_9, io.theta_in[2][3]) @[Theta.scala 36:66]
    node _T_11 = xor(_T_10, io.theta_in[2][4]) @[Theta.scala 36:84]
    c[2] <= _T_11 @[Theta.scala 36:10]
    node _T_12 = xor(io.theta_in[3][0], io.theta_in[3][1]) @[Theta.scala 36:30]
    node _T_13 = xor(_T_12, io.theta_in[3][2]) @[Theta.scala 36:48]
    node _T_14 = xor(_T_13, io.theta_in[3][3]) @[Theta.scala 36:66]
    node _T_15 = xor(_T_14, io.theta_in[3][4]) @[Theta.scala 36:84]
    c[3] <= _T_15 @[Theta.scala 36:10]
    node _T_16 = xor(io.theta_in[4][0], io.theta_in[4][1]) @[Theta.scala 36:30]
    node _T_17 = xor(_T_16, io.theta_in[4][2]) @[Theta.scala 36:48]
    node _T_18 = xor(_T_17, io.theta_in[4][3]) @[Theta.scala 36:66]
    node _T_19 = xor(_T_18, io.theta_in[4][4]) @[Theta.scala 36:84]
    c[4] <= _T_19 @[Theta.scala 36:10]
    node _T_20 = shl(c[1], 1) @[Theta.scala 42:44]
    rotation1[0] <= _T_20 @[Theta.scala 42:25]
    node _T_21 = shr(c[1], 63) @[Theta.scala 43:44]
    rotation2[0] <= _T_21 @[Theta.scala 43:25]
    node _T_22 = or(rotation1[0], rotation2[0]) @[Theta.scala 44:41]
    rotation_result[0] <= _T_22 @[Theta.scala 44:25]
    node _T_23 = xor(c[4], rotation_result[0]) @[Theta.scala 45:30]
    d[0] <= _T_23 @[Theta.scala 45:11]
    node _T_24 = shl(c[2], 1) @[Theta.scala 42:44]
    rotation1[1] <= _T_24 @[Theta.scala 42:25]
    node _T_25 = shr(c[2], 63) @[Theta.scala 43:44]
    rotation2[1] <= _T_25 @[Theta.scala 43:25]
    node _T_26 = or(rotation1[1], rotation2[1]) @[Theta.scala 44:41]
    rotation_result[1] <= _T_26 @[Theta.scala 44:25]
    node _T_27 = xor(c[0], rotation_result[1]) @[Theta.scala 45:30]
    d[1] <= _T_27 @[Theta.scala 45:11]
    node _T_28 = shl(c[3], 1) @[Theta.scala 42:44]
    rotation1[2] <= _T_28 @[Theta.scala 42:25]
    node _T_29 = shr(c[3], 63) @[Theta.scala 43:44]
    rotation2[2] <= _T_29 @[Theta.scala 43:25]
    node _T_30 = or(rotation1[2], rotation2[2]) @[Theta.scala 44:41]
    rotation_result[2] <= _T_30 @[Theta.scala 44:25]
    node _T_31 = xor(c[1], rotation_result[2]) @[Theta.scala 45:30]
    d[2] <= _T_31 @[Theta.scala 45:11]
    node _T_32 = shl(c[4], 1) @[Theta.scala 42:44]
    rotation1[3] <= _T_32 @[Theta.scala 42:25]
    node _T_33 = shr(c[4], 63) @[Theta.scala 43:44]
    rotation2[3] <= _T_33 @[Theta.scala 43:25]
    node _T_34 = or(rotation1[3], rotation2[3]) @[Theta.scala 44:41]
    rotation_result[3] <= _T_34 @[Theta.scala 44:25]
    node _T_35 = xor(c[2], rotation_result[3]) @[Theta.scala 45:30]
    d[3] <= _T_35 @[Theta.scala 45:11]
    node _T_36 = shl(c[0], 1) @[Theta.scala 42:44]
    rotation1[4] <= _T_36 @[Theta.scala 42:25]
    node _T_37 = shr(c[0], 63) @[Theta.scala 43:44]
    rotation2[4] <= _T_37 @[Theta.scala 43:25]
    node _T_38 = or(rotation1[4], rotation2[4]) @[Theta.scala 44:41]
    rotation_result[4] <= _T_38 @[Theta.scala 44:25]
    node _T_39 = xor(c[3], rotation_result[4]) @[Theta.scala 45:30]
    d[4] <= _T_39 @[Theta.scala 45:11]
    node _T_40 = xor(io.theta_in[0][0], d[0]) @[Theta.scala 51:38]
    st[0][0] <= _T_40 @[Theta.scala 51:18]
    node _T_41 = xor(io.theta_in[0][1], d[0]) @[Theta.scala 51:38]
    st[0][1] <= _T_41 @[Theta.scala 51:18]
    node _T_42 = xor(io.theta_in[0][2], d[0]) @[Theta.scala 51:38]
    st[0][2] <= _T_42 @[Theta.scala 51:18]
    node _T_43 = xor(io.theta_in[0][3], d[0]) @[Theta.scala 51:38]
    st[0][3] <= _T_43 @[Theta.scala 51:18]
    node _T_44 = xor(io.theta_in[0][4], d[0]) @[Theta.scala 51:38]
    st[0][4] <= _T_44 @[Theta.scala 51:18]
    node _T_45 = xor(io.theta_in[1][0], d[1]) @[Theta.scala 51:38]
    st[1][0] <= _T_45 @[Theta.scala 51:18]
    node _T_46 = xor(io.theta_in[1][1], d[1]) @[Theta.scala 51:38]
    st[1][1] <= _T_46 @[Theta.scala 51:18]
    node _T_47 = xor(io.theta_in[1][2], d[1]) @[Theta.scala 51:38]
    st[1][2] <= _T_47 @[Theta.scala 51:18]
    node _T_48 = xor(io.theta_in[1][3], d[1]) @[Theta.scala 51:38]
    st[1][3] <= _T_48 @[Theta.scala 51:18]
    node _T_49 = xor(io.theta_in[1][4], d[1]) @[Theta.scala 51:38]
    st[1][4] <= _T_49 @[Theta.scala 51:18]
    node _T_50 = xor(io.theta_in[2][0], d[2]) @[Theta.scala 51:38]
    st[2][0] <= _T_50 @[Theta.scala 51:18]
    node _T_51 = xor(io.theta_in[2][1], d[2]) @[Theta.scala 51:38]
    st[2][1] <= _T_51 @[Theta.scala 51:18]
    node _T_52 = xor(io.theta_in[2][2], d[2]) @[Theta.scala 51:38]
    st[2][2] <= _T_52 @[Theta.scala 51:18]
    node _T_53 = xor(io.theta_in[2][3], d[2]) @[Theta.scala 51:38]
    st[2][3] <= _T_53 @[Theta.scala 51:18]
    node _T_54 = xor(io.theta_in[2][4], d[2]) @[Theta.scala 51:38]
    st[2][4] <= _T_54 @[Theta.scala 51:18]
    node _T_55 = xor(io.theta_in[3][0], d[3]) @[Theta.scala 51:38]
    st[3][0] <= _T_55 @[Theta.scala 51:18]
    node _T_56 = xor(io.theta_in[3][1], d[3]) @[Theta.scala 51:38]
    st[3][1] <= _T_56 @[Theta.scala 51:18]
    node _T_57 = xor(io.theta_in[3][2], d[3]) @[Theta.scala 51:38]
    st[3][2] <= _T_57 @[Theta.scala 51:18]
    node _T_58 = xor(io.theta_in[3][3], d[3]) @[Theta.scala 51:38]
    st[3][3] <= _T_58 @[Theta.scala 51:18]
    node _T_59 = xor(io.theta_in[3][4], d[3]) @[Theta.scala 51:38]
    st[3][4] <= _T_59 @[Theta.scala 51:18]
    node _T_60 = xor(io.theta_in[4][0], d[4]) @[Theta.scala 51:38]
    st[4][0] <= _T_60 @[Theta.scala 51:18]
    node _T_61 = xor(io.theta_in[4][1], d[4]) @[Theta.scala 51:38]
    st[4][1] <= _T_61 @[Theta.scala 51:18]
    node _T_62 = xor(io.theta_in[4][2], d[4]) @[Theta.scala 51:38]
    st[4][2] <= _T_62 @[Theta.scala 51:18]
    node _T_63 = xor(io.theta_in[4][3], d[4]) @[Theta.scala 51:38]
    st[4][3] <= _T_63 @[Theta.scala 51:18]
    node _T_64 = xor(io.theta_in[4][4], d[4]) @[Theta.scala 51:38]
    st[4][4] <= _T_64 @[Theta.scala 51:18]
    io.theta_out[0][0] <= st[0][0] @[Theta.scala 53:16]
    io.theta_out[0][1] <= st[0][1] @[Theta.scala 53:16]
    io.theta_out[0][2] <= st[0][2] @[Theta.scala 53:16]
    io.theta_out[0][3] <= st[0][3] @[Theta.scala 53:16]
    io.theta_out[0][4] <= st[0][4] @[Theta.scala 53:16]
    io.theta_out[1][0] <= st[1][0] @[Theta.scala 53:16]
    io.theta_out[1][1] <= st[1][1] @[Theta.scala 53:16]
    io.theta_out[1][2] <= st[1][2] @[Theta.scala 53:16]
    io.theta_out[1][3] <= st[1][3] @[Theta.scala 53:16]
    io.theta_out[1][4] <= st[1][4] @[Theta.scala 53:16]
    io.theta_out[2][0] <= st[2][0] @[Theta.scala 53:16]
    io.theta_out[2][1] <= st[2][1] @[Theta.scala 53:16]
    io.theta_out[2][2] <= st[2][2] @[Theta.scala 53:16]
    io.theta_out[2][3] <= st[2][3] @[Theta.scala 53:16]
    io.theta_out[2][4] <= st[2][4] @[Theta.scala 53:16]
    io.theta_out[3][0] <= st[3][0] @[Theta.scala 53:16]
    io.theta_out[3][1] <= st[3][1] @[Theta.scala 53:16]
    io.theta_out[3][2] <= st[3][2] @[Theta.scala 53:16]
    io.theta_out[3][3] <= st[3][3] @[Theta.scala 53:16]
    io.theta_out[3][4] <= st[3][4] @[Theta.scala 53:16]
    io.theta_out[4][0] <= st[4][0] @[Theta.scala 53:16]
    io.theta_out[4][1] <= st[4][1] @[Theta.scala 53:16]
    io.theta_out[4][2] <= st[4][2] @[Theta.scala 53:16]
    io.theta_out[4][3] <= st[4][3] @[Theta.scala 53:16]
    io.theta_out[4][4] <= st[4][4] @[Theta.scala 53:16]
    
  module RhoPi : 
    input clock : Clock
    input reset : Reset
    output io : {flip rhoPi_in : UInt<64>[5][5], rhoPi_out : UInt<64>[5][5]}
    
    wire r : UInt<19>[5][5] @[RhoPi.scala 9:17]
    r[0][0] <= UInt<1>("h00") @[RhoPi.scala 10:11]
    r[0][1] <= UInt<6>("h024") @[RhoPi.scala 11:11]
    r[0][2] <= UInt<2>("h03") @[RhoPi.scala 12:11]
    r[0][3] <= UInt<6>("h029") @[RhoPi.scala 13:11]
    r[0][4] <= UInt<5>("h012") @[RhoPi.scala 14:11]
    r[1][0] <= UInt<1>("h01") @[RhoPi.scala 16:11]
    r[1][1] <= UInt<6>("h02c") @[RhoPi.scala 17:11]
    r[1][2] <= UInt<4>("h0a") @[RhoPi.scala 18:11]
    r[1][3] <= UInt<6>("h02d") @[RhoPi.scala 19:11]
    r[1][4] <= UInt<2>("h02") @[RhoPi.scala 20:11]
    r[2][0] <= UInt<6>("h03e") @[RhoPi.scala 22:11]
    r[2][1] <= UInt<3>("h06") @[RhoPi.scala 23:11]
    r[2][2] <= UInt<6>("h02b") @[RhoPi.scala 24:11]
    r[2][3] <= UInt<4>("h0f") @[RhoPi.scala 25:11]
    r[2][4] <= UInt<6>("h03d") @[RhoPi.scala 26:11]
    r[3][0] <= UInt<5>("h01c") @[RhoPi.scala 28:11]
    r[3][1] <= UInt<6>("h037") @[RhoPi.scala 29:11]
    r[3][2] <= UInt<5>("h019") @[RhoPi.scala 30:11]
    r[3][3] <= UInt<5>("h015") @[RhoPi.scala 31:11]
    r[3][4] <= UInt<6>("h038") @[RhoPi.scala 32:11]
    r[4][0] <= UInt<5>("h01b") @[RhoPi.scala 34:11]
    r[4][1] <= UInt<5>("h014") @[RhoPi.scala 35:11]
    r[4][2] <= UInt<6>("h027") @[RhoPi.scala 36:11]
    r[4][3] <= UInt<4>("h08") @[RhoPi.scala 37:11]
    r[4][4] <= UInt<4>("h0e") @[RhoPi.scala 38:11]
    wire rotationWire_1 : UInt<64>[5][5] @[RhoPi.scala 41:28]
    wire rotationWire_2 : UInt<64>[5][5] @[RhoPi.scala 42:28]
    node _T = dshl(io.rhoPi_in[0][0], r[0][0]) @[RhoPi.scala 46:49]
    rotationWire_1[0][0] <= _T @[RhoPi.scala 46:28]
    node _T_1 = sub(UInt<7>("h040"), r[0][0]) @[RhoPi.scala 47:57]
    node _T_2 = tail(_T_1, 1) @[RhoPi.scala 47:57]
    node _T_3 = dshr(io.rhoPi_in[0][0], _T_2) @[RhoPi.scala 47:49]
    rotationWire_2[0][0] <= _T_3 @[RhoPi.scala 47:28]
    node _T_4 = or(rotationWire_1[0][0], rotationWire_2[0][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][0] <= _T_4 @[RhoPi.scala 48:49]
    node _T_5 = dshl(io.rhoPi_in[0][1], r[0][1]) @[RhoPi.scala 46:49]
    rotationWire_1[0][1] <= _T_5 @[RhoPi.scala 46:28]
    node _T_6 = sub(UInt<7>("h040"), r[0][1]) @[RhoPi.scala 47:57]
    node _T_7 = tail(_T_6, 1) @[RhoPi.scala 47:57]
    node _T_8 = dshr(io.rhoPi_in[0][1], _T_7) @[RhoPi.scala 47:49]
    rotationWire_2[0][1] <= _T_8 @[RhoPi.scala 47:28]
    node _T_9 = or(rotationWire_1[0][1], rotationWire_2[0][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][3] <= _T_9 @[RhoPi.scala 48:49]
    node _T_10 = dshl(io.rhoPi_in[0][2], r[0][2]) @[RhoPi.scala 46:49]
    rotationWire_1[0][2] <= _T_10 @[RhoPi.scala 46:28]
    node _T_11 = sub(UInt<7>("h040"), r[0][2]) @[RhoPi.scala 47:57]
    node _T_12 = tail(_T_11, 1) @[RhoPi.scala 47:57]
    node _T_13 = dshr(io.rhoPi_in[0][2], _T_12) @[RhoPi.scala 47:49]
    rotationWire_2[0][2] <= _T_13 @[RhoPi.scala 47:28]
    node _T_14 = or(rotationWire_1[0][2], rotationWire_2[0][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][1] <= _T_14 @[RhoPi.scala 48:49]
    node _T_15 = dshl(io.rhoPi_in[0][3], r[0][3]) @[RhoPi.scala 46:49]
    rotationWire_1[0][3] <= _T_15 @[RhoPi.scala 46:28]
    node _T_16 = sub(UInt<7>("h040"), r[0][3]) @[RhoPi.scala 47:57]
    node _T_17 = tail(_T_16, 1) @[RhoPi.scala 47:57]
    node _T_18 = dshr(io.rhoPi_in[0][3], _T_17) @[RhoPi.scala 47:49]
    rotationWire_2[0][3] <= _T_18 @[RhoPi.scala 47:28]
    node _T_19 = or(rotationWire_1[0][3], rotationWire_2[0][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][4] <= _T_19 @[RhoPi.scala 48:49]
    node _T_20 = dshl(io.rhoPi_in[0][4], r[0][4]) @[RhoPi.scala 46:49]
    rotationWire_1[0][4] <= _T_20 @[RhoPi.scala 46:28]
    node _T_21 = sub(UInt<7>("h040"), r[0][4]) @[RhoPi.scala 47:57]
    node _T_22 = tail(_T_21, 1) @[RhoPi.scala 47:57]
    node _T_23 = dshr(io.rhoPi_in[0][4], _T_22) @[RhoPi.scala 47:49]
    rotationWire_2[0][4] <= _T_23 @[RhoPi.scala 47:28]
    node _T_24 = or(rotationWire_1[0][4], rotationWire_2[0][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][2] <= _T_24 @[RhoPi.scala 48:49]
    node _T_25 = dshl(io.rhoPi_in[1][0], r[1][0]) @[RhoPi.scala 46:49]
    rotationWire_1[1][0] <= _T_25 @[RhoPi.scala 46:28]
    node _T_26 = sub(UInt<7>("h040"), r[1][0]) @[RhoPi.scala 47:57]
    node _T_27 = tail(_T_26, 1) @[RhoPi.scala 47:57]
    node _T_28 = dshr(io.rhoPi_in[1][0], _T_27) @[RhoPi.scala 47:49]
    rotationWire_2[1][0] <= _T_28 @[RhoPi.scala 47:28]
    node _T_29 = or(rotationWire_1[1][0], rotationWire_2[1][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][2] <= _T_29 @[RhoPi.scala 48:49]
    node _T_30 = dshl(io.rhoPi_in[1][1], r[1][1]) @[RhoPi.scala 46:49]
    rotationWire_1[1][1] <= _T_30 @[RhoPi.scala 46:28]
    node _T_31 = sub(UInt<7>("h040"), r[1][1]) @[RhoPi.scala 47:57]
    node _T_32 = tail(_T_31, 1) @[RhoPi.scala 47:57]
    node _T_33 = dshr(io.rhoPi_in[1][1], _T_32) @[RhoPi.scala 47:49]
    rotationWire_2[1][1] <= _T_33 @[RhoPi.scala 47:28]
    node _T_34 = or(rotationWire_1[1][1], rotationWire_2[1][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][0] <= _T_34 @[RhoPi.scala 48:49]
    node _T_35 = dshl(io.rhoPi_in[1][2], r[1][2]) @[RhoPi.scala 46:49]
    rotationWire_1[1][2] <= _T_35 @[RhoPi.scala 46:28]
    node _T_36 = sub(UInt<7>("h040"), r[1][2]) @[RhoPi.scala 47:57]
    node _T_37 = tail(_T_36, 1) @[RhoPi.scala 47:57]
    node _T_38 = dshr(io.rhoPi_in[1][2], _T_37) @[RhoPi.scala 47:49]
    rotationWire_2[1][2] <= _T_38 @[RhoPi.scala 47:28]
    node _T_39 = or(rotationWire_1[1][2], rotationWire_2[1][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][3] <= _T_39 @[RhoPi.scala 48:49]
    node _T_40 = dshl(io.rhoPi_in[1][3], r[1][3]) @[RhoPi.scala 46:49]
    rotationWire_1[1][3] <= _T_40 @[RhoPi.scala 46:28]
    node _T_41 = sub(UInt<7>("h040"), r[1][3]) @[RhoPi.scala 47:57]
    node _T_42 = tail(_T_41, 1) @[RhoPi.scala 47:57]
    node _T_43 = dshr(io.rhoPi_in[1][3], _T_42) @[RhoPi.scala 47:49]
    rotationWire_2[1][3] <= _T_43 @[RhoPi.scala 47:28]
    node _T_44 = or(rotationWire_1[1][3], rotationWire_2[1][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][1] <= _T_44 @[RhoPi.scala 48:49]
    node _T_45 = dshl(io.rhoPi_in[1][4], r[1][4]) @[RhoPi.scala 46:49]
    rotationWire_1[1][4] <= _T_45 @[RhoPi.scala 46:28]
    node _T_46 = sub(UInt<7>("h040"), r[1][4]) @[RhoPi.scala 47:57]
    node _T_47 = tail(_T_46, 1) @[RhoPi.scala 47:57]
    node _T_48 = dshr(io.rhoPi_in[1][4], _T_47) @[RhoPi.scala 47:49]
    rotationWire_2[1][4] <= _T_48 @[RhoPi.scala 47:28]
    node _T_49 = or(rotationWire_1[1][4], rotationWire_2[1][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][4] <= _T_49 @[RhoPi.scala 48:49]
    node _T_50 = dshl(io.rhoPi_in[2][0], r[2][0]) @[RhoPi.scala 46:49]
    rotationWire_1[2][0] <= _T_50 @[RhoPi.scala 46:28]
    node _T_51 = sub(UInt<7>("h040"), r[2][0]) @[RhoPi.scala 47:57]
    node _T_52 = tail(_T_51, 1) @[RhoPi.scala 47:57]
    node _T_53 = dshr(io.rhoPi_in[2][0], _T_52) @[RhoPi.scala 47:49]
    rotationWire_2[2][0] <= _T_53 @[RhoPi.scala 47:28]
    node _T_54 = or(rotationWire_1[2][0], rotationWire_2[2][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][4] <= _T_54 @[RhoPi.scala 48:49]
    node _T_55 = dshl(io.rhoPi_in[2][1], r[2][1]) @[RhoPi.scala 46:49]
    rotationWire_1[2][1] <= _T_55 @[RhoPi.scala 46:28]
    node _T_56 = sub(UInt<7>("h040"), r[2][1]) @[RhoPi.scala 47:57]
    node _T_57 = tail(_T_56, 1) @[RhoPi.scala 47:57]
    node _T_58 = dshr(io.rhoPi_in[2][1], _T_57) @[RhoPi.scala 47:49]
    rotationWire_2[2][1] <= _T_58 @[RhoPi.scala 47:28]
    node _T_59 = or(rotationWire_1[2][1], rotationWire_2[2][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][2] <= _T_59 @[RhoPi.scala 48:49]
    node _T_60 = dshl(io.rhoPi_in[2][2], r[2][2]) @[RhoPi.scala 46:49]
    rotationWire_1[2][2] <= _T_60 @[RhoPi.scala 46:28]
    node _T_61 = sub(UInt<7>("h040"), r[2][2]) @[RhoPi.scala 47:57]
    node _T_62 = tail(_T_61, 1) @[RhoPi.scala 47:57]
    node _T_63 = dshr(io.rhoPi_in[2][2], _T_62) @[RhoPi.scala 47:49]
    rotationWire_2[2][2] <= _T_63 @[RhoPi.scala 47:28]
    node _T_64 = or(rotationWire_1[2][2], rotationWire_2[2][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][0] <= _T_64 @[RhoPi.scala 48:49]
    node _T_65 = dshl(io.rhoPi_in[2][3], r[2][3]) @[RhoPi.scala 46:49]
    rotationWire_1[2][3] <= _T_65 @[RhoPi.scala 46:28]
    node _T_66 = sub(UInt<7>("h040"), r[2][3]) @[RhoPi.scala 47:57]
    node _T_67 = tail(_T_66, 1) @[RhoPi.scala 47:57]
    node _T_68 = dshr(io.rhoPi_in[2][3], _T_67) @[RhoPi.scala 47:49]
    rotationWire_2[2][3] <= _T_68 @[RhoPi.scala 47:28]
    node _T_69 = or(rotationWire_1[2][3], rotationWire_2[2][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][3] <= _T_69 @[RhoPi.scala 48:49]
    node _T_70 = dshl(io.rhoPi_in[2][4], r[2][4]) @[RhoPi.scala 46:49]
    rotationWire_1[2][4] <= _T_70 @[RhoPi.scala 46:28]
    node _T_71 = sub(UInt<7>("h040"), r[2][4]) @[RhoPi.scala 47:57]
    node _T_72 = tail(_T_71, 1) @[RhoPi.scala 47:57]
    node _T_73 = dshr(io.rhoPi_in[2][4], _T_72) @[RhoPi.scala 47:49]
    rotationWire_2[2][4] <= _T_73 @[RhoPi.scala 47:28]
    node _T_74 = or(rotationWire_1[2][4], rotationWire_2[2][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][1] <= _T_74 @[RhoPi.scala 48:49]
    node _T_75 = dshl(io.rhoPi_in[3][0], r[3][0]) @[RhoPi.scala 46:49]
    rotationWire_1[3][0] <= _T_75 @[RhoPi.scala 46:28]
    node _T_76 = sub(UInt<7>("h040"), r[3][0]) @[RhoPi.scala 47:57]
    node _T_77 = tail(_T_76, 1) @[RhoPi.scala 47:57]
    node _T_78 = dshr(io.rhoPi_in[3][0], _T_77) @[RhoPi.scala 47:49]
    rotationWire_2[3][0] <= _T_78 @[RhoPi.scala 47:28]
    node _T_79 = or(rotationWire_1[3][0], rotationWire_2[3][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][1] <= _T_79 @[RhoPi.scala 48:49]
    node _T_80 = dshl(io.rhoPi_in[3][1], r[3][1]) @[RhoPi.scala 46:49]
    rotationWire_1[3][1] <= _T_80 @[RhoPi.scala 46:28]
    node _T_81 = sub(UInt<7>("h040"), r[3][1]) @[RhoPi.scala 47:57]
    node _T_82 = tail(_T_81, 1) @[RhoPi.scala 47:57]
    node _T_83 = dshr(io.rhoPi_in[3][1], _T_82) @[RhoPi.scala 47:49]
    rotationWire_2[3][1] <= _T_83 @[RhoPi.scala 47:28]
    node _T_84 = or(rotationWire_1[3][1], rotationWire_2[3][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][4] <= _T_84 @[RhoPi.scala 48:49]
    node _T_85 = dshl(io.rhoPi_in[3][2], r[3][2]) @[RhoPi.scala 46:49]
    rotationWire_1[3][2] <= _T_85 @[RhoPi.scala 46:28]
    node _T_86 = sub(UInt<7>("h040"), r[3][2]) @[RhoPi.scala 47:57]
    node _T_87 = tail(_T_86, 1) @[RhoPi.scala 47:57]
    node _T_88 = dshr(io.rhoPi_in[3][2], _T_87) @[RhoPi.scala 47:49]
    rotationWire_2[3][2] <= _T_88 @[RhoPi.scala 47:28]
    node _T_89 = or(rotationWire_1[3][2], rotationWire_2[3][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][2] <= _T_89 @[RhoPi.scala 48:49]
    node _T_90 = dshl(io.rhoPi_in[3][3], r[3][3]) @[RhoPi.scala 46:49]
    rotationWire_1[3][3] <= _T_90 @[RhoPi.scala 46:28]
    node _T_91 = sub(UInt<7>("h040"), r[3][3]) @[RhoPi.scala 47:57]
    node _T_92 = tail(_T_91, 1) @[RhoPi.scala 47:57]
    node _T_93 = dshr(io.rhoPi_in[3][3], _T_92) @[RhoPi.scala 47:49]
    rotationWire_2[3][3] <= _T_93 @[RhoPi.scala 47:28]
    node _T_94 = or(rotationWire_1[3][3], rotationWire_2[3][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][0] <= _T_94 @[RhoPi.scala 48:49]
    node _T_95 = dshl(io.rhoPi_in[3][4], r[3][4]) @[RhoPi.scala 46:49]
    rotationWire_1[3][4] <= _T_95 @[RhoPi.scala 46:28]
    node _T_96 = sub(UInt<7>("h040"), r[3][4]) @[RhoPi.scala 47:57]
    node _T_97 = tail(_T_96, 1) @[RhoPi.scala 47:57]
    node _T_98 = dshr(io.rhoPi_in[3][4], _T_97) @[RhoPi.scala 47:49]
    rotationWire_2[3][4] <= _T_98 @[RhoPi.scala 47:28]
    node _T_99 = or(rotationWire_1[3][4], rotationWire_2[3][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][3] <= _T_99 @[RhoPi.scala 48:49]
    node _T_100 = dshl(io.rhoPi_in[4][0], r[4][0]) @[RhoPi.scala 46:49]
    rotationWire_1[4][0] <= _T_100 @[RhoPi.scala 46:28]
    node _T_101 = sub(UInt<7>("h040"), r[4][0]) @[RhoPi.scala 47:57]
    node _T_102 = tail(_T_101, 1) @[RhoPi.scala 47:57]
    node _T_103 = dshr(io.rhoPi_in[4][0], _T_102) @[RhoPi.scala 47:49]
    rotationWire_2[4][0] <= _T_103 @[RhoPi.scala 47:28]
    node _T_104 = or(rotationWire_1[4][0], rotationWire_2[4][0]) @[RhoPi.scala 48:73]
    io.rhoPi_out[0][3] <= _T_104 @[RhoPi.scala 48:49]
    node _T_105 = dshl(io.rhoPi_in[4][1], r[4][1]) @[RhoPi.scala 46:49]
    rotationWire_1[4][1] <= _T_105 @[RhoPi.scala 46:28]
    node _T_106 = sub(UInt<7>("h040"), r[4][1]) @[RhoPi.scala 47:57]
    node _T_107 = tail(_T_106, 1) @[RhoPi.scala 47:57]
    node _T_108 = dshr(io.rhoPi_in[4][1], _T_107) @[RhoPi.scala 47:49]
    rotationWire_2[4][1] <= _T_108 @[RhoPi.scala 47:28]
    node _T_109 = or(rotationWire_1[4][1], rotationWire_2[4][1]) @[RhoPi.scala 48:73]
    io.rhoPi_out[1][1] <= _T_109 @[RhoPi.scala 48:49]
    node _T_110 = dshl(io.rhoPi_in[4][2], r[4][2]) @[RhoPi.scala 46:49]
    rotationWire_1[4][2] <= _T_110 @[RhoPi.scala 46:28]
    node _T_111 = sub(UInt<7>("h040"), r[4][2]) @[RhoPi.scala 47:57]
    node _T_112 = tail(_T_111, 1) @[RhoPi.scala 47:57]
    node _T_113 = dshr(io.rhoPi_in[4][2], _T_112) @[RhoPi.scala 47:49]
    rotationWire_2[4][2] <= _T_113 @[RhoPi.scala 47:28]
    node _T_114 = or(rotationWire_1[4][2], rotationWire_2[4][2]) @[RhoPi.scala 48:73]
    io.rhoPi_out[2][4] <= _T_114 @[RhoPi.scala 48:49]
    node _T_115 = dshl(io.rhoPi_in[4][3], r[4][3]) @[RhoPi.scala 46:49]
    rotationWire_1[4][3] <= _T_115 @[RhoPi.scala 46:28]
    node _T_116 = sub(UInt<7>("h040"), r[4][3]) @[RhoPi.scala 47:57]
    node _T_117 = tail(_T_116, 1) @[RhoPi.scala 47:57]
    node _T_118 = dshr(io.rhoPi_in[4][3], _T_117) @[RhoPi.scala 47:49]
    rotationWire_2[4][3] <= _T_118 @[RhoPi.scala 47:28]
    node _T_119 = or(rotationWire_1[4][3], rotationWire_2[4][3]) @[RhoPi.scala 48:73]
    io.rhoPi_out[3][2] <= _T_119 @[RhoPi.scala 48:49]
    node _T_120 = dshl(io.rhoPi_in[4][4], r[4][4]) @[RhoPi.scala 46:49]
    rotationWire_1[4][4] <= _T_120 @[RhoPi.scala 46:28]
    node _T_121 = sub(UInt<7>("h040"), r[4][4]) @[RhoPi.scala 47:57]
    node _T_122 = tail(_T_121, 1) @[RhoPi.scala 47:57]
    node _T_123 = dshr(io.rhoPi_in[4][4], _T_122) @[RhoPi.scala 47:49]
    rotationWire_2[4][4] <= _T_123 @[RhoPi.scala 47:28]
    node _T_124 = or(rotationWire_1[4][4], rotationWire_2[4][4]) @[RhoPi.scala 48:73]
    io.rhoPi_out[4][0] <= _T_124 @[RhoPi.scala 48:49]
    
  module Chi : 
    input clock : Clock
    input reset : Reset
    output io : {flip chi_in : UInt<64>[5][5], chi_out : UInt<64>[5][5]}
    
    wire chi_wire : UInt<64> @[Chi.scala 10:25]
    wire chi_b_wire : UInt<64> @[Chi.scala 11:25]
    wire chi_not_wire : UInt<64> @[Chi.scala 12:26]
    node _T = not(io.chi_in[1][0]) @[Chi.scala 15:23]
    chi_not_wire <= _T @[Chi.scala 15:20]
    node _T_1 = and(chi_not_wire, io.chi_in[2][0]) @[Chi.scala 16:33]
    chi_wire <= _T_1 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[0][0] @[Chi.scala 17:18]
    node _T_2 = bits(chi_b_wire, 0, 0) @[Chi.scala 18:37]
    node _T_3 = bits(_T_2, 0, 0) @[Chi.scala 18:40]
    node _T_4 = bits(chi_wire, 0, 0) @[Chi.scala 18:54]
    node _T_5 = bits(_T_4, 0, 0) @[Chi.scala 18:57]
    node _T_6 = xor(_T_3, _T_5) @[Chi.scala 18:44]
    io.chi_out[0][0] <= _T_6 @[Chi.scala 18:24]
    node _T_7 = not(io.chi_in[1][1]) @[Chi.scala 15:23]
    chi_not_wire <= _T_7 @[Chi.scala 15:20]
    node _T_8 = and(chi_not_wire, io.chi_in[2][1]) @[Chi.scala 16:33]
    chi_wire <= _T_8 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[0][1] @[Chi.scala 17:18]
    node _T_9 = bits(chi_b_wire, 0, 0) @[Chi.scala 18:37]
    node _T_10 = bits(_T_9, 1, 1) @[Chi.scala 18:40]
    node _T_11 = bits(chi_wire, 0, 0) @[Chi.scala 18:54]
    node _T_12 = bits(_T_11, 1, 1) @[Chi.scala 18:57]
    node _T_13 = xor(_T_10, _T_12) @[Chi.scala 18:44]
    io.chi_out[0][1] <= _T_13 @[Chi.scala 18:24]
    node _T_14 = not(io.chi_in[1][2]) @[Chi.scala 15:23]
    chi_not_wire <= _T_14 @[Chi.scala 15:20]
    node _T_15 = and(chi_not_wire, io.chi_in[2][2]) @[Chi.scala 16:33]
    chi_wire <= _T_15 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[0][2] @[Chi.scala 17:18]
    node _T_16 = bits(chi_b_wire, 0, 0) @[Chi.scala 18:37]
    node _T_17 = bits(_T_16, 2, 2) @[Chi.scala 18:40]
    node _T_18 = bits(chi_wire, 0, 0) @[Chi.scala 18:54]
    node _T_19 = bits(_T_18, 2, 2) @[Chi.scala 18:57]
    node _T_20 = xor(_T_17, _T_19) @[Chi.scala 18:44]
    io.chi_out[0][2] <= _T_20 @[Chi.scala 18:24]
    node _T_21 = not(io.chi_in[1][3]) @[Chi.scala 15:23]
    chi_not_wire <= _T_21 @[Chi.scala 15:20]
    node _T_22 = and(chi_not_wire, io.chi_in[2][3]) @[Chi.scala 16:33]
    chi_wire <= _T_22 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[0][3] @[Chi.scala 17:18]
    node _T_23 = bits(chi_b_wire, 0, 0) @[Chi.scala 18:37]
    node _T_24 = bits(_T_23, 3, 3) @[Chi.scala 18:40]
    node _T_25 = bits(chi_wire, 0, 0) @[Chi.scala 18:54]
    node _T_26 = bits(_T_25, 3, 3) @[Chi.scala 18:57]
    node _T_27 = xor(_T_24, _T_26) @[Chi.scala 18:44]
    io.chi_out[0][3] <= _T_27 @[Chi.scala 18:24]
    node _T_28 = not(io.chi_in[1][4]) @[Chi.scala 15:23]
    chi_not_wire <= _T_28 @[Chi.scala 15:20]
    node _T_29 = and(chi_not_wire, io.chi_in[2][4]) @[Chi.scala 16:33]
    chi_wire <= _T_29 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[0][4] @[Chi.scala 17:18]
    node _T_30 = bits(chi_b_wire, 0, 0) @[Chi.scala 18:37]
    node _T_31 = bits(_T_30, 4, 4) @[Chi.scala 18:40]
    node _T_32 = bits(chi_wire, 0, 0) @[Chi.scala 18:54]
    node _T_33 = bits(_T_32, 4, 4) @[Chi.scala 18:57]
    node _T_34 = xor(_T_31, _T_33) @[Chi.scala 18:44]
    io.chi_out[0][4] <= _T_34 @[Chi.scala 18:24]
    node _T_35 = not(io.chi_in[2][0]) @[Chi.scala 15:23]
    chi_not_wire <= _T_35 @[Chi.scala 15:20]
    node _T_36 = and(chi_not_wire, io.chi_in[3][0]) @[Chi.scala 16:33]
    chi_wire <= _T_36 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[1][0] @[Chi.scala 17:18]
    node _T_37 = bits(chi_b_wire, 1, 1) @[Chi.scala 18:37]
    node _T_38 = bits(_T_37, 0, 0) @[Chi.scala 18:40]
    node _T_39 = bits(chi_wire, 1, 1) @[Chi.scala 18:54]
    node _T_40 = bits(_T_39, 0, 0) @[Chi.scala 18:57]
    node _T_41 = xor(_T_38, _T_40) @[Chi.scala 18:44]
    io.chi_out[1][0] <= _T_41 @[Chi.scala 18:24]
    node _T_42 = not(io.chi_in[2][1]) @[Chi.scala 15:23]
    chi_not_wire <= _T_42 @[Chi.scala 15:20]
    node _T_43 = and(chi_not_wire, io.chi_in[3][1]) @[Chi.scala 16:33]
    chi_wire <= _T_43 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[1][1] @[Chi.scala 17:18]
    node _T_44 = bits(chi_b_wire, 1, 1) @[Chi.scala 18:37]
    node _T_45 = bits(_T_44, 1, 1) @[Chi.scala 18:40]
    node _T_46 = bits(chi_wire, 1, 1) @[Chi.scala 18:54]
    node _T_47 = bits(_T_46, 1, 1) @[Chi.scala 18:57]
    node _T_48 = xor(_T_45, _T_47) @[Chi.scala 18:44]
    io.chi_out[1][1] <= _T_48 @[Chi.scala 18:24]
    node _T_49 = not(io.chi_in[2][2]) @[Chi.scala 15:23]
    chi_not_wire <= _T_49 @[Chi.scala 15:20]
    node _T_50 = and(chi_not_wire, io.chi_in[3][2]) @[Chi.scala 16:33]
    chi_wire <= _T_50 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[1][2] @[Chi.scala 17:18]
    node _T_51 = bits(chi_b_wire, 1, 1) @[Chi.scala 18:37]
    node _T_52 = bits(_T_51, 2, 2) @[Chi.scala 18:40]
    node _T_53 = bits(chi_wire, 1, 1) @[Chi.scala 18:54]
    node _T_54 = bits(_T_53, 2, 2) @[Chi.scala 18:57]
    node _T_55 = xor(_T_52, _T_54) @[Chi.scala 18:44]
    io.chi_out[1][2] <= _T_55 @[Chi.scala 18:24]
    node _T_56 = not(io.chi_in[2][3]) @[Chi.scala 15:23]
    chi_not_wire <= _T_56 @[Chi.scala 15:20]
    node _T_57 = and(chi_not_wire, io.chi_in[3][3]) @[Chi.scala 16:33]
    chi_wire <= _T_57 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[1][3] @[Chi.scala 17:18]
    node _T_58 = bits(chi_b_wire, 1, 1) @[Chi.scala 18:37]
    node _T_59 = bits(_T_58, 3, 3) @[Chi.scala 18:40]
    node _T_60 = bits(chi_wire, 1, 1) @[Chi.scala 18:54]
    node _T_61 = bits(_T_60, 3, 3) @[Chi.scala 18:57]
    node _T_62 = xor(_T_59, _T_61) @[Chi.scala 18:44]
    io.chi_out[1][3] <= _T_62 @[Chi.scala 18:24]
    node _T_63 = not(io.chi_in[2][4]) @[Chi.scala 15:23]
    chi_not_wire <= _T_63 @[Chi.scala 15:20]
    node _T_64 = and(chi_not_wire, io.chi_in[3][4]) @[Chi.scala 16:33]
    chi_wire <= _T_64 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[1][4] @[Chi.scala 17:18]
    node _T_65 = bits(chi_b_wire, 1, 1) @[Chi.scala 18:37]
    node _T_66 = bits(_T_65, 4, 4) @[Chi.scala 18:40]
    node _T_67 = bits(chi_wire, 1, 1) @[Chi.scala 18:54]
    node _T_68 = bits(_T_67, 4, 4) @[Chi.scala 18:57]
    node _T_69 = xor(_T_66, _T_68) @[Chi.scala 18:44]
    io.chi_out[1][4] <= _T_69 @[Chi.scala 18:24]
    node _T_70 = not(io.chi_in[3][0]) @[Chi.scala 15:23]
    chi_not_wire <= _T_70 @[Chi.scala 15:20]
    node _T_71 = and(chi_not_wire, io.chi_in[4][0]) @[Chi.scala 16:33]
    chi_wire <= _T_71 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[2][0] @[Chi.scala 17:18]
    node _T_72 = bits(chi_b_wire, 2, 2) @[Chi.scala 18:37]
    node _T_73 = bits(_T_72, 0, 0) @[Chi.scala 18:40]
    node _T_74 = bits(chi_wire, 2, 2) @[Chi.scala 18:54]
    node _T_75 = bits(_T_74, 0, 0) @[Chi.scala 18:57]
    node _T_76 = xor(_T_73, _T_75) @[Chi.scala 18:44]
    io.chi_out[2][0] <= _T_76 @[Chi.scala 18:24]
    node _T_77 = not(io.chi_in[3][1]) @[Chi.scala 15:23]
    chi_not_wire <= _T_77 @[Chi.scala 15:20]
    node _T_78 = and(chi_not_wire, io.chi_in[4][1]) @[Chi.scala 16:33]
    chi_wire <= _T_78 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[2][1] @[Chi.scala 17:18]
    node _T_79 = bits(chi_b_wire, 2, 2) @[Chi.scala 18:37]
    node _T_80 = bits(_T_79, 1, 1) @[Chi.scala 18:40]
    node _T_81 = bits(chi_wire, 2, 2) @[Chi.scala 18:54]
    node _T_82 = bits(_T_81, 1, 1) @[Chi.scala 18:57]
    node _T_83 = xor(_T_80, _T_82) @[Chi.scala 18:44]
    io.chi_out[2][1] <= _T_83 @[Chi.scala 18:24]
    node _T_84 = not(io.chi_in[3][2]) @[Chi.scala 15:23]
    chi_not_wire <= _T_84 @[Chi.scala 15:20]
    node _T_85 = and(chi_not_wire, io.chi_in[4][2]) @[Chi.scala 16:33]
    chi_wire <= _T_85 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[2][2] @[Chi.scala 17:18]
    node _T_86 = bits(chi_b_wire, 2, 2) @[Chi.scala 18:37]
    node _T_87 = bits(_T_86, 2, 2) @[Chi.scala 18:40]
    node _T_88 = bits(chi_wire, 2, 2) @[Chi.scala 18:54]
    node _T_89 = bits(_T_88, 2, 2) @[Chi.scala 18:57]
    node _T_90 = xor(_T_87, _T_89) @[Chi.scala 18:44]
    io.chi_out[2][2] <= _T_90 @[Chi.scala 18:24]
    node _T_91 = not(io.chi_in[3][3]) @[Chi.scala 15:23]
    chi_not_wire <= _T_91 @[Chi.scala 15:20]
    node _T_92 = and(chi_not_wire, io.chi_in[4][3]) @[Chi.scala 16:33]
    chi_wire <= _T_92 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[2][3] @[Chi.scala 17:18]
    node _T_93 = bits(chi_b_wire, 2, 2) @[Chi.scala 18:37]
    node _T_94 = bits(_T_93, 3, 3) @[Chi.scala 18:40]
    node _T_95 = bits(chi_wire, 2, 2) @[Chi.scala 18:54]
    node _T_96 = bits(_T_95, 3, 3) @[Chi.scala 18:57]
    node _T_97 = xor(_T_94, _T_96) @[Chi.scala 18:44]
    io.chi_out[2][3] <= _T_97 @[Chi.scala 18:24]
    node _T_98 = not(io.chi_in[3][4]) @[Chi.scala 15:23]
    chi_not_wire <= _T_98 @[Chi.scala 15:20]
    node _T_99 = and(chi_not_wire, io.chi_in[4][4]) @[Chi.scala 16:33]
    chi_wire <= _T_99 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[2][4] @[Chi.scala 17:18]
    node _T_100 = bits(chi_b_wire, 2, 2) @[Chi.scala 18:37]
    node _T_101 = bits(_T_100, 4, 4) @[Chi.scala 18:40]
    node _T_102 = bits(chi_wire, 2, 2) @[Chi.scala 18:54]
    node _T_103 = bits(_T_102, 4, 4) @[Chi.scala 18:57]
    node _T_104 = xor(_T_101, _T_103) @[Chi.scala 18:44]
    io.chi_out[2][4] <= _T_104 @[Chi.scala 18:24]
    node _T_105 = not(io.chi_in[4][0]) @[Chi.scala 15:23]
    chi_not_wire <= _T_105 @[Chi.scala 15:20]
    node _T_106 = and(chi_not_wire, io.chi_in[0][0]) @[Chi.scala 16:33]
    chi_wire <= _T_106 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[3][0] @[Chi.scala 17:18]
    node _T_107 = bits(chi_b_wire, 3, 3) @[Chi.scala 18:37]
    node _T_108 = bits(_T_107, 0, 0) @[Chi.scala 18:40]
    node _T_109 = bits(chi_wire, 3, 3) @[Chi.scala 18:54]
    node _T_110 = bits(_T_109, 0, 0) @[Chi.scala 18:57]
    node _T_111 = xor(_T_108, _T_110) @[Chi.scala 18:44]
    io.chi_out[3][0] <= _T_111 @[Chi.scala 18:24]
    node _T_112 = not(io.chi_in[4][1]) @[Chi.scala 15:23]
    chi_not_wire <= _T_112 @[Chi.scala 15:20]
    node _T_113 = and(chi_not_wire, io.chi_in[0][1]) @[Chi.scala 16:33]
    chi_wire <= _T_113 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[3][1] @[Chi.scala 17:18]
    node _T_114 = bits(chi_b_wire, 3, 3) @[Chi.scala 18:37]
    node _T_115 = bits(_T_114, 1, 1) @[Chi.scala 18:40]
    node _T_116 = bits(chi_wire, 3, 3) @[Chi.scala 18:54]
    node _T_117 = bits(_T_116, 1, 1) @[Chi.scala 18:57]
    node _T_118 = xor(_T_115, _T_117) @[Chi.scala 18:44]
    io.chi_out[3][1] <= _T_118 @[Chi.scala 18:24]
    node _T_119 = not(io.chi_in[4][2]) @[Chi.scala 15:23]
    chi_not_wire <= _T_119 @[Chi.scala 15:20]
    node _T_120 = and(chi_not_wire, io.chi_in[0][2]) @[Chi.scala 16:33]
    chi_wire <= _T_120 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[3][2] @[Chi.scala 17:18]
    node _T_121 = bits(chi_b_wire, 3, 3) @[Chi.scala 18:37]
    node _T_122 = bits(_T_121, 2, 2) @[Chi.scala 18:40]
    node _T_123 = bits(chi_wire, 3, 3) @[Chi.scala 18:54]
    node _T_124 = bits(_T_123, 2, 2) @[Chi.scala 18:57]
    node _T_125 = xor(_T_122, _T_124) @[Chi.scala 18:44]
    io.chi_out[3][2] <= _T_125 @[Chi.scala 18:24]
    node _T_126 = not(io.chi_in[4][3]) @[Chi.scala 15:23]
    chi_not_wire <= _T_126 @[Chi.scala 15:20]
    node _T_127 = and(chi_not_wire, io.chi_in[0][3]) @[Chi.scala 16:33]
    chi_wire <= _T_127 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[3][3] @[Chi.scala 17:18]
    node _T_128 = bits(chi_b_wire, 3, 3) @[Chi.scala 18:37]
    node _T_129 = bits(_T_128, 3, 3) @[Chi.scala 18:40]
    node _T_130 = bits(chi_wire, 3, 3) @[Chi.scala 18:54]
    node _T_131 = bits(_T_130, 3, 3) @[Chi.scala 18:57]
    node _T_132 = xor(_T_129, _T_131) @[Chi.scala 18:44]
    io.chi_out[3][3] <= _T_132 @[Chi.scala 18:24]
    node _T_133 = not(io.chi_in[4][4]) @[Chi.scala 15:23]
    chi_not_wire <= _T_133 @[Chi.scala 15:20]
    node _T_134 = and(chi_not_wire, io.chi_in[0][4]) @[Chi.scala 16:33]
    chi_wire <= _T_134 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[3][4] @[Chi.scala 17:18]
    node _T_135 = bits(chi_b_wire, 3, 3) @[Chi.scala 18:37]
    node _T_136 = bits(_T_135, 4, 4) @[Chi.scala 18:40]
    node _T_137 = bits(chi_wire, 3, 3) @[Chi.scala 18:54]
    node _T_138 = bits(_T_137, 4, 4) @[Chi.scala 18:57]
    node _T_139 = xor(_T_136, _T_138) @[Chi.scala 18:44]
    io.chi_out[3][4] <= _T_139 @[Chi.scala 18:24]
    node _T_140 = not(io.chi_in[0][0]) @[Chi.scala 15:23]
    chi_not_wire <= _T_140 @[Chi.scala 15:20]
    node _T_141 = and(chi_not_wire, io.chi_in[1][0]) @[Chi.scala 16:33]
    chi_wire <= _T_141 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[4][0] @[Chi.scala 17:18]
    node _T_142 = bits(chi_b_wire, 4, 4) @[Chi.scala 18:37]
    node _T_143 = bits(_T_142, 0, 0) @[Chi.scala 18:40]
    node _T_144 = bits(chi_wire, 4, 4) @[Chi.scala 18:54]
    node _T_145 = bits(_T_144, 0, 0) @[Chi.scala 18:57]
    node _T_146 = xor(_T_143, _T_145) @[Chi.scala 18:44]
    io.chi_out[4][0] <= _T_146 @[Chi.scala 18:24]
    node _T_147 = not(io.chi_in[0][1]) @[Chi.scala 15:23]
    chi_not_wire <= _T_147 @[Chi.scala 15:20]
    node _T_148 = and(chi_not_wire, io.chi_in[1][1]) @[Chi.scala 16:33]
    chi_wire <= _T_148 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[4][1] @[Chi.scala 17:18]
    node _T_149 = bits(chi_b_wire, 4, 4) @[Chi.scala 18:37]
    node _T_150 = bits(_T_149, 1, 1) @[Chi.scala 18:40]
    node _T_151 = bits(chi_wire, 4, 4) @[Chi.scala 18:54]
    node _T_152 = bits(_T_151, 1, 1) @[Chi.scala 18:57]
    node _T_153 = xor(_T_150, _T_152) @[Chi.scala 18:44]
    io.chi_out[4][1] <= _T_153 @[Chi.scala 18:24]
    node _T_154 = not(io.chi_in[0][2]) @[Chi.scala 15:23]
    chi_not_wire <= _T_154 @[Chi.scala 15:20]
    node _T_155 = and(chi_not_wire, io.chi_in[1][2]) @[Chi.scala 16:33]
    chi_wire <= _T_155 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[4][2] @[Chi.scala 17:18]
    node _T_156 = bits(chi_b_wire, 4, 4) @[Chi.scala 18:37]
    node _T_157 = bits(_T_156, 2, 2) @[Chi.scala 18:40]
    node _T_158 = bits(chi_wire, 4, 4) @[Chi.scala 18:54]
    node _T_159 = bits(_T_158, 2, 2) @[Chi.scala 18:57]
    node _T_160 = xor(_T_157, _T_159) @[Chi.scala 18:44]
    io.chi_out[4][2] <= _T_160 @[Chi.scala 18:24]
    node _T_161 = not(io.chi_in[0][3]) @[Chi.scala 15:23]
    chi_not_wire <= _T_161 @[Chi.scala 15:20]
    node _T_162 = and(chi_not_wire, io.chi_in[1][3]) @[Chi.scala 16:33]
    chi_wire <= _T_162 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[4][3] @[Chi.scala 17:18]
    node _T_163 = bits(chi_b_wire, 4, 4) @[Chi.scala 18:37]
    node _T_164 = bits(_T_163, 3, 3) @[Chi.scala 18:40]
    node _T_165 = bits(chi_wire, 4, 4) @[Chi.scala 18:54]
    node _T_166 = bits(_T_165, 3, 3) @[Chi.scala 18:57]
    node _T_167 = xor(_T_164, _T_166) @[Chi.scala 18:44]
    io.chi_out[4][3] <= _T_167 @[Chi.scala 18:24]
    node _T_168 = not(io.chi_in[0][4]) @[Chi.scala 15:23]
    chi_not_wire <= _T_168 @[Chi.scala 15:20]
    node _T_169 = and(chi_not_wire, io.chi_in[1][4]) @[Chi.scala 16:33]
    chi_wire <= _T_169 @[Chi.scala 16:16]
    chi_b_wire <= io.chi_in[4][4] @[Chi.scala 17:18]
    node _T_170 = bits(chi_b_wire, 4, 4) @[Chi.scala 18:37]
    node _T_171 = bits(_T_170, 4, 4) @[Chi.scala 18:40]
    node _T_172 = bits(chi_wire, 4, 4) @[Chi.scala 18:54]
    node _T_173 = bits(_T_172, 4, 4) @[Chi.scala 18:57]
    node _T_174 = xor(_T_171, _T_173) @[Chi.scala 18:44]
    io.chi_out[4][4] <= _T_174 @[Chi.scala 18:24]
    
  module Iota : 
    input clock : Clock
    input reset : Reset
    output io : {flip iota_in : UInt<64>[5][5], iota_out : UInt<64>}
    
    wire RC : UInt<64>[24] @[Iota.scala 9:17]
    RC[0] <= UInt<1>("h01") @[Iota.scala 10:11]
    RC[1] <= UInt<16>("h08082") @[Iota.scala 11:11]
    RC[2] <= UInt<64>("h0800000000000808a") @[Iota.scala 12:11]
    RC[3] <= UInt<64>("h08000000080008000") @[Iota.scala 13:11]
    RC[4] <= UInt<16>("h0808b") @[Iota.scala 14:11]
    RC[5] <= UInt<32>("h080000001") @[Iota.scala 15:11]
    RC[6] <= UInt<64>("h08000000080008081") @[Iota.scala 16:11]
    RC[7] <= UInt<64>("h08000000000008009") @[Iota.scala 17:11]
    RC[8] <= UInt<8>("h08a") @[Iota.scala 18:11]
    RC[9] <= UInt<8>("h088") @[Iota.scala 19:11]
    RC[10] <= UInt<32>("h080008009") @[Iota.scala 20:11]
    RC[11] <= UInt<32>("h08000000a") @[Iota.scala 21:11]
    RC[12] <= UInt<32>("h08000808b") @[Iota.scala 22:11]
    RC[13] <= UInt<64>("h0800000000000008b") @[Iota.scala 23:11]
    RC[14] <= UInt<64>("h08000000000008089") @[Iota.scala 24:11]
    RC[15] <= UInt<64>("h08000000000008003") @[Iota.scala 25:11]
    RC[16] <= UInt<64>("h08000000000008002") @[Iota.scala 26:11]
    RC[17] <= UInt<64>("h08000000000000080") @[Iota.scala 27:11]
    RC[18] <= UInt<16>("h0800a") @[Iota.scala 28:11]
    RC[19] <= UInt<64>("h0800000008000000a") @[Iota.scala 29:11]
    RC[20] <= UInt<64>("h08000000080008081") @[Iota.scala 30:11]
    RC[21] <= UInt<64>("h08000000000008080") @[Iota.scala 31:11]
    RC[22] <= UInt<32>("h080000001") @[Iota.scala 32:11]
    RC[23] <= UInt<64>("h08000000080008008") @[Iota.scala 33:11]
    node _T = xor(io.iota_in[0][0], RC[0]) @[Iota.scala 36:34]
    io.iota_out <= _T @[Iota.scala 36:15]
    
  module Round : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip round_in : UInt<64>[5][5], round_out : UInt<64>[5][5], R_theta_out : UInt<64>[5][5], R_rhoPi_out : UInt<64>[5][5], R_chi_out : UInt<64>[5][5], R_iota_out : UInt<64>}
    
    inst theta of Theta @[Round.scala 13:21]
    theta.clock <= clock
    theta.reset <= reset
    inst rhoPi of RhoPi @[Round.scala 14:21]
    rhoPi.clock <= clock
    rhoPi.reset <= reset
    inst chi of Chi @[Round.scala 15:19]
    chi.clock <= clock
    chi.reset <= reset
    inst iota of Iota @[Round.scala 16:20]
    iota.clock <= clock
    iota.reset <= reset
    theta.io.theta_in[0][0] <= io.round_in[0][0] @[Round.scala 18:27]
    theta.io.theta_in[0][1] <= io.round_in[0][1] @[Round.scala 18:27]
    theta.io.theta_in[0][2] <= io.round_in[0][2] @[Round.scala 18:27]
    theta.io.theta_in[0][3] <= io.round_in[0][3] @[Round.scala 18:27]
    theta.io.theta_in[0][4] <= io.round_in[0][4] @[Round.scala 18:27]
    theta.io.theta_in[1][0] <= io.round_in[1][0] @[Round.scala 18:27]
    theta.io.theta_in[1][1] <= io.round_in[1][1] @[Round.scala 18:27]
    theta.io.theta_in[1][2] <= io.round_in[1][2] @[Round.scala 18:27]
    theta.io.theta_in[1][3] <= io.round_in[1][3] @[Round.scala 18:27]
    theta.io.theta_in[1][4] <= io.round_in[1][4] @[Round.scala 18:27]
    theta.io.theta_in[2][0] <= io.round_in[2][0] @[Round.scala 18:27]
    theta.io.theta_in[2][1] <= io.round_in[2][1] @[Round.scala 18:27]
    theta.io.theta_in[2][2] <= io.round_in[2][2] @[Round.scala 18:27]
    theta.io.theta_in[2][3] <= io.round_in[2][3] @[Round.scala 18:27]
    theta.io.theta_in[2][4] <= io.round_in[2][4] @[Round.scala 18:27]
    theta.io.theta_in[3][0] <= io.round_in[3][0] @[Round.scala 18:27]
    theta.io.theta_in[3][1] <= io.round_in[3][1] @[Round.scala 18:27]
    theta.io.theta_in[3][2] <= io.round_in[3][2] @[Round.scala 18:27]
    theta.io.theta_in[3][3] <= io.round_in[3][3] @[Round.scala 18:27]
    theta.io.theta_in[3][4] <= io.round_in[3][4] @[Round.scala 18:27]
    theta.io.theta_in[4][0] <= io.round_in[4][0] @[Round.scala 18:27]
    theta.io.theta_in[4][1] <= io.round_in[4][1] @[Round.scala 18:27]
    theta.io.theta_in[4][2] <= io.round_in[4][2] @[Round.scala 18:27]
    theta.io.theta_in[4][3] <= io.round_in[4][3] @[Round.scala 18:27]
    theta.io.theta_in[4][4] <= io.round_in[4][4] @[Round.scala 18:27]
    rhoPi.io.rhoPi_in[0][0] <= theta.io.theta_out[0][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][1] <= theta.io.theta_out[0][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][2] <= theta.io.theta_out[0][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][3] <= theta.io.theta_out[0][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[0][4] <= theta.io.theta_out[0][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][0] <= theta.io.theta_out[1][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][1] <= theta.io.theta_out[1][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][2] <= theta.io.theta_out[1][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][3] <= theta.io.theta_out[1][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[1][4] <= theta.io.theta_out[1][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][0] <= theta.io.theta_out[2][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][1] <= theta.io.theta_out[2][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][2] <= theta.io.theta_out[2][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][3] <= theta.io.theta_out[2][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[2][4] <= theta.io.theta_out[2][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][0] <= theta.io.theta_out[3][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][1] <= theta.io.theta_out[3][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][2] <= theta.io.theta_out[3][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][3] <= theta.io.theta_out[3][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[3][4] <= theta.io.theta_out[3][4] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][0] <= theta.io.theta_out[4][0] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][1] <= theta.io.theta_out[4][1] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][2] <= theta.io.theta_out[4][2] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][3] <= theta.io.theta_out[4][3] @[Round.scala 19:27]
    rhoPi.io.rhoPi_in[4][4] <= theta.io.theta_out[4][4] @[Round.scala 19:27]
    chi.io.chi_in[0][0] <= rhoPi.io.rhoPi_out[0][0] @[Round.scala 20:27]
    chi.io.chi_in[0][1] <= rhoPi.io.rhoPi_out[0][1] @[Round.scala 20:27]
    chi.io.chi_in[0][2] <= rhoPi.io.rhoPi_out[0][2] @[Round.scala 20:27]
    chi.io.chi_in[0][3] <= rhoPi.io.rhoPi_out[0][3] @[Round.scala 20:27]
    chi.io.chi_in[0][4] <= rhoPi.io.rhoPi_out[0][4] @[Round.scala 20:27]
    chi.io.chi_in[1][0] <= rhoPi.io.rhoPi_out[1][0] @[Round.scala 20:27]
    chi.io.chi_in[1][1] <= rhoPi.io.rhoPi_out[1][1] @[Round.scala 20:27]
    chi.io.chi_in[1][2] <= rhoPi.io.rhoPi_out[1][2] @[Round.scala 20:27]
    chi.io.chi_in[1][3] <= rhoPi.io.rhoPi_out[1][3] @[Round.scala 20:27]
    chi.io.chi_in[1][4] <= rhoPi.io.rhoPi_out[1][4] @[Round.scala 20:27]
    chi.io.chi_in[2][0] <= rhoPi.io.rhoPi_out[2][0] @[Round.scala 20:27]
    chi.io.chi_in[2][1] <= rhoPi.io.rhoPi_out[2][1] @[Round.scala 20:27]
    chi.io.chi_in[2][2] <= rhoPi.io.rhoPi_out[2][2] @[Round.scala 20:27]
    chi.io.chi_in[2][3] <= rhoPi.io.rhoPi_out[2][3] @[Round.scala 20:27]
    chi.io.chi_in[2][4] <= rhoPi.io.rhoPi_out[2][4] @[Round.scala 20:27]
    chi.io.chi_in[3][0] <= rhoPi.io.rhoPi_out[3][0] @[Round.scala 20:27]
    chi.io.chi_in[3][1] <= rhoPi.io.rhoPi_out[3][1] @[Round.scala 20:27]
    chi.io.chi_in[3][2] <= rhoPi.io.rhoPi_out[3][2] @[Round.scala 20:27]
    chi.io.chi_in[3][3] <= rhoPi.io.rhoPi_out[3][3] @[Round.scala 20:27]
    chi.io.chi_in[3][4] <= rhoPi.io.rhoPi_out[3][4] @[Round.scala 20:27]
    chi.io.chi_in[4][0] <= rhoPi.io.rhoPi_out[4][0] @[Round.scala 20:27]
    chi.io.chi_in[4][1] <= rhoPi.io.rhoPi_out[4][1] @[Round.scala 20:27]
    chi.io.chi_in[4][2] <= rhoPi.io.rhoPi_out[4][2] @[Round.scala 20:27]
    chi.io.chi_in[4][3] <= rhoPi.io.rhoPi_out[4][3] @[Round.scala 20:27]
    chi.io.chi_in[4][4] <= rhoPi.io.rhoPi_out[4][4] @[Round.scala 20:27]
    iota.io.iota_in[0][0] <= chi.io.chi_out[0][0] @[Round.scala 21:27]
    iota.io.iota_in[0][1] <= chi.io.chi_out[0][1] @[Round.scala 21:27]
    iota.io.iota_in[0][2] <= chi.io.chi_out[0][2] @[Round.scala 21:27]
    iota.io.iota_in[0][3] <= chi.io.chi_out[0][3] @[Round.scala 21:27]
    iota.io.iota_in[0][4] <= chi.io.chi_out[0][4] @[Round.scala 21:27]
    iota.io.iota_in[1][0] <= chi.io.chi_out[1][0] @[Round.scala 21:27]
    iota.io.iota_in[1][1] <= chi.io.chi_out[1][1] @[Round.scala 21:27]
    iota.io.iota_in[1][2] <= chi.io.chi_out[1][2] @[Round.scala 21:27]
    iota.io.iota_in[1][3] <= chi.io.chi_out[1][3] @[Round.scala 21:27]
    iota.io.iota_in[1][4] <= chi.io.chi_out[1][4] @[Round.scala 21:27]
    iota.io.iota_in[2][0] <= chi.io.chi_out[2][0] @[Round.scala 21:27]
    iota.io.iota_in[2][1] <= chi.io.chi_out[2][1] @[Round.scala 21:27]
    iota.io.iota_in[2][2] <= chi.io.chi_out[2][2] @[Round.scala 21:27]
    iota.io.iota_in[2][3] <= chi.io.chi_out[2][3] @[Round.scala 21:27]
    iota.io.iota_in[2][4] <= chi.io.chi_out[2][4] @[Round.scala 21:27]
    iota.io.iota_in[3][0] <= chi.io.chi_out[3][0] @[Round.scala 21:27]
    iota.io.iota_in[3][1] <= chi.io.chi_out[3][1] @[Round.scala 21:27]
    iota.io.iota_in[3][2] <= chi.io.chi_out[3][2] @[Round.scala 21:27]
    iota.io.iota_in[3][3] <= chi.io.chi_out[3][3] @[Round.scala 21:27]
    iota.io.iota_in[3][4] <= chi.io.chi_out[3][4] @[Round.scala 21:27]
    iota.io.iota_in[4][0] <= chi.io.chi_out[4][0] @[Round.scala 21:27]
    iota.io.iota_in[4][1] <= chi.io.chi_out[4][1] @[Round.scala 21:27]
    iota.io.iota_in[4][2] <= chi.io.chi_out[4][2] @[Round.scala 21:27]
    iota.io.iota_in[4][3] <= chi.io.chi_out[4][3] @[Round.scala 21:27]
    iota.io.iota_in[4][4] <= chi.io.chi_out[4][4] @[Round.scala 21:27]
    io.round_out[0][0] <= iota.io.iota_out @[Round.scala 22:27]
    io.R_theta_out[0][0] <= theta.io.theta_out[0][0] @[Round.scala 24:27]
    io.R_theta_out[0][1] <= theta.io.theta_out[0][1] @[Round.scala 24:27]
    io.R_theta_out[0][2] <= theta.io.theta_out[0][2] @[Round.scala 24:27]
    io.R_theta_out[0][3] <= theta.io.theta_out[0][3] @[Round.scala 24:27]
    io.R_theta_out[0][4] <= theta.io.theta_out[0][4] @[Round.scala 24:27]
    io.R_theta_out[1][0] <= theta.io.theta_out[1][0] @[Round.scala 24:27]
    io.R_theta_out[1][1] <= theta.io.theta_out[1][1] @[Round.scala 24:27]
    io.R_theta_out[1][2] <= theta.io.theta_out[1][2] @[Round.scala 24:27]
    io.R_theta_out[1][3] <= theta.io.theta_out[1][3] @[Round.scala 24:27]
    io.R_theta_out[1][4] <= theta.io.theta_out[1][4] @[Round.scala 24:27]
    io.R_theta_out[2][0] <= theta.io.theta_out[2][0] @[Round.scala 24:27]
    io.R_theta_out[2][1] <= theta.io.theta_out[2][1] @[Round.scala 24:27]
    io.R_theta_out[2][2] <= theta.io.theta_out[2][2] @[Round.scala 24:27]
    io.R_theta_out[2][3] <= theta.io.theta_out[2][3] @[Round.scala 24:27]
    io.R_theta_out[2][4] <= theta.io.theta_out[2][4] @[Round.scala 24:27]
    io.R_theta_out[3][0] <= theta.io.theta_out[3][0] @[Round.scala 24:27]
    io.R_theta_out[3][1] <= theta.io.theta_out[3][1] @[Round.scala 24:27]
    io.R_theta_out[3][2] <= theta.io.theta_out[3][2] @[Round.scala 24:27]
    io.R_theta_out[3][3] <= theta.io.theta_out[3][3] @[Round.scala 24:27]
    io.R_theta_out[3][4] <= theta.io.theta_out[3][4] @[Round.scala 24:27]
    io.R_theta_out[4][0] <= theta.io.theta_out[4][0] @[Round.scala 24:27]
    io.R_theta_out[4][1] <= theta.io.theta_out[4][1] @[Round.scala 24:27]
    io.R_theta_out[4][2] <= theta.io.theta_out[4][2] @[Round.scala 24:27]
    io.R_theta_out[4][3] <= theta.io.theta_out[4][3] @[Round.scala 24:27]
    io.R_theta_out[4][4] <= theta.io.theta_out[4][4] @[Round.scala 24:27]
    io.R_rhoPi_out[0][0] <= rhoPi.io.rhoPi_out[0][0] @[Round.scala 25:27]
    io.R_rhoPi_out[0][1] <= rhoPi.io.rhoPi_out[0][1] @[Round.scala 25:27]
    io.R_rhoPi_out[0][2] <= rhoPi.io.rhoPi_out[0][2] @[Round.scala 25:27]
    io.R_rhoPi_out[0][3] <= rhoPi.io.rhoPi_out[0][3] @[Round.scala 25:27]
    io.R_rhoPi_out[0][4] <= rhoPi.io.rhoPi_out[0][4] @[Round.scala 25:27]
    io.R_rhoPi_out[1][0] <= rhoPi.io.rhoPi_out[1][0] @[Round.scala 25:27]
    io.R_rhoPi_out[1][1] <= rhoPi.io.rhoPi_out[1][1] @[Round.scala 25:27]
    io.R_rhoPi_out[1][2] <= rhoPi.io.rhoPi_out[1][2] @[Round.scala 25:27]
    io.R_rhoPi_out[1][3] <= rhoPi.io.rhoPi_out[1][3] @[Round.scala 25:27]
    io.R_rhoPi_out[1][4] <= rhoPi.io.rhoPi_out[1][4] @[Round.scala 25:27]
    io.R_rhoPi_out[2][0] <= rhoPi.io.rhoPi_out[2][0] @[Round.scala 25:27]
    io.R_rhoPi_out[2][1] <= rhoPi.io.rhoPi_out[2][1] @[Round.scala 25:27]
    io.R_rhoPi_out[2][2] <= rhoPi.io.rhoPi_out[2][2] @[Round.scala 25:27]
    io.R_rhoPi_out[2][3] <= rhoPi.io.rhoPi_out[2][3] @[Round.scala 25:27]
    io.R_rhoPi_out[2][4] <= rhoPi.io.rhoPi_out[2][4] @[Round.scala 25:27]
    io.R_rhoPi_out[3][0] <= rhoPi.io.rhoPi_out[3][0] @[Round.scala 25:27]
    io.R_rhoPi_out[3][1] <= rhoPi.io.rhoPi_out[3][1] @[Round.scala 25:27]
    io.R_rhoPi_out[3][2] <= rhoPi.io.rhoPi_out[3][2] @[Round.scala 25:27]
    io.R_rhoPi_out[3][3] <= rhoPi.io.rhoPi_out[3][3] @[Round.scala 25:27]
    io.R_rhoPi_out[3][4] <= rhoPi.io.rhoPi_out[3][4] @[Round.scala 25:27]
    io.R_rhoPi_out[4][0] <= rhoPi.io.rhoPi_out[4][0] @[Round.scala 25:27]
    io.R_rhoPi_out[4][1] <= rhoPi.io.rhoPi_out[4][1] @[Round.scala 25:27]
    io.R_rhoPi_out[4][2] <= rhoPi.io.rhoPi_out[4][2] @[Round.scala 25:27]
    io.R_rhoPi_out[4][3] <= rhoPi.io.rhoPi_out[4][3] @[Round.scala 25:27]
    io.R_rhoPi_out[4][4] <= rhoPi.io.rhoPi_out[4][4] @[Round.scala 25:27]
    io.R_chi_out[0][0] <= chi.io.chi_out[0][0] @[Round.scala 26:27]
    io.R_chi_out[0][1] <= chi.io.chi_out[0][1] @[Round.scala 26:27]
    io.R_chi_out[0][2] <= chi.io.chi_out[0][2] @[Round.scala 26:27]
    io.R_chi_out[0][3] <= chi.io.chi_out[0][3] @[Round.scala 26:27]
    io.R_chi_out[0][4] <= chi.io.chi_out[0][4] @[Round.scala 26:27]
    io.R_chi_out[1][0] <= chi.io.chi_out[1][0] @[Round.scala 26:27]
    io.R_chi_out[1][1] <= chi.io.chi_out[1][1] @[Round.scala 26:27]
    io.R_chi_out[1][2] <= chi.io.chi_out[1][2] @[Round.scala 26:27]
    io.R_chi_out[1][3] <= chi.io.chi_out[1][3] @[Round.scala 26:27]
    io.R_chi_out[1][4] <= chi.io.chi_out[1][4] @[Round.scala 26:27]
    io.R_chi_out[2][0] <= chi.io.chi_out[2][0] @[Round.scala 26:27]
    io.R_chi_out[2][1] <= chi.io.chi_out[2][1] @[Round.scala 26:27]
    io.R_chi_out[2][2] <= chi.io.chi_out[2][2] @[Round.scala 26:27]
    io.R_chi_out[2][3] <= chi.io.chi_out[2][3] @[Round.scala 26:27]
    io.R_chi_out[2][4] <= chi.io.chi_out[2][4] @[Round.scala 26:27]
    io.R_chi_out[3][0] <= chi.io.chi_out[3][0] @[Round.scala 26:27]
    io.R_chi_out[3][1] <= chi.io.chi_out[3][1] @[Round.scala 26:27]
    io.R_chi_out[3][2] <= chi.io.chi_out[3][2] @[Round.scala 26:27]
    io.R_chi_out[3][3] <= chi.io.chi_out[3][3] @[Round.scala 26:27]
    io.R_chi_out[3][4] <= chi.io.chi_out[3][4] @[Round.scala 26:27]
    io.R_chi_out[4][0] <= chi.io.chi_out[4][0] @[Round.scala 26:27]
    io.R_chi_out[4][1] <= chi.io.chi_out[4][1] @[Round.scala 26:27]
    io.R_chi_out[4][2] <= chi.io.chi_out[4][2] @[Round.scala 26:27]
    io.R_chi_out[4][3] <= chi.io.chi_out[4][3] @[Round.scala 26:27]
    io.R_chi_out[4][4] <= chi.io.chi_out[4][4] @[Round.scala 26:27]
    io.R_iota_out <= iota.io.iota_out @[Round.scala 27:27]
    io.round_out[1][0] <= chi.io.chi_out[1][0] @[Round.scala 31:26]
    io.round_out[1][1] <= chi.io.chi_out[1][1] @[Round.scala 31:26]
    io.round_out[1][2] <= chi.io.chi_out[1][2] @[Round.scala 31:26]
    io.round_out[1][3] <= chi.io.chi_out[1][3] @[Round.scala 31:26]
    io.round_out[1][4] <= chi.io.chi_out[1][4] @[Round.scala 31:26]
    io.round_out[2][0] <= chi.io.chi_out[2][0] @[Round.scala 31:26]
    io.round_out[2][1] <= chi.io.chi_out[2][1] @[Round.scala 31:26]
    io.round_out[2][2] <= chi.io.chi_out[2][2] @[Round.scala 31:26]
    io.round_out[2][3] <= chi.io.chi_out[2][3] @[Round.scala 31:26]
    io.round_out[2][4] <= chi.io.chi_out[2][4] @[Round.scala 31:26]
    io.round_out[3][0] <= chi.io.chi_out[3][0] @[Round.scala 31:26]
    io.round_out[3][1] <= chi.io.chi_out[3][1] @[Round.scala 31:26]
    io.round_out[3][2] <= chi.io.chi_out[3][2] @[Round.scala 31:26]
    io.round_out[3][3] <= chi.io.chi_out[3][3] @[Round.scala 31:26]
    io.round_out[3][4] <= chi.io.chi_out[3][4] @[Round.scala 31:26]
    io.round_out[4][0] <= chi.io.chi_out[4][0] @[Round.scala 31:26]
    io.round_out[4][1] <= chi.io.chi_out[4][1] @[Round.scala 31:26]
    io.round_out[4][2] <= chi.io.chi_out[4][2] @[Round.scala 31:26]
    io.round_out[4][3] <= chi.io.chi_out[4][3] @[Round.scala 31:26]
    io.round_out[4][4] <= chi.io.chi_out[4][4] @[Round.scala 31:26]
    io.round_out[0][1] <= chi.io.chi_out[0][1] @[Round.scala 34:24]
    io.round_out[0][2] <= chi.io.chi_out[0][2] @[Round.scala 34:24]
    io.round_out[0][3] <= chi.io.chi_out[0][3] @[Round.scala 34:24]
    io.round_out[0][4] <= chi.io.chi_out[0][4] @[Round.scala 34:24]
    
