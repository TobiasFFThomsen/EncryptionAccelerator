import chisel3._
import chisel3.iotesters.PeekPokeTester
import org.scalatest._

class buffer_tester (dut: Buffer) extends PeekPokeTester(dut){
  poke(dut.io.hashReady,false.B)
  poke(dut.io.roundReady,false.B)
  poke(dut.io.w_in,1.U)
/*
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,2.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,3.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,4.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,5.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,6.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,7.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,8.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)
  poke(dut.io.w_in,9.U)
  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("")
  step(1)

  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  step(1)

  println("buffer reg 1: "+peek(dut.io.bufferTest_0).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 2: "+peek(dut.io.bufferTest_1).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 3: "+peek(dut.io.bufferTest_2).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 4: "+peek(dut.io.bufferTest_3).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 5: "+peek(dut.io.bufferTest_4).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 6: "+peek(dut.io.bufferTest_5).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 7: "+peek(dut.io.bufferTest_6).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 8: "+peek(dut.io.bufferTest_7).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
  println("buffer reg 9: "+peek(dut.io.bufferTest_8).toString()+" buffer ready: " + peek(dut.io.bufferReady).toString())
 */

}


class buffer_spec extends FlatSpec with Matchers {
  "buffer" should "pass" in {
    chisel3.iotesters.Driver(() => new Buffer()) { c => new buffer_tester(c)} should be (true)
  }
}

